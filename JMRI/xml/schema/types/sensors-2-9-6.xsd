<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../schema2xhtml.xsl" type="text/xsl"?>

<!-- This schema is part of JMRI. Copyright 2009.                           -->
<!--                                                                        -->
<!-- JMRI is free software; you can redistribute it and/or modify it under  -->
<!-- the terms of version 2 of the GNU General Public License as published  -->
<!-- by the Free Software Foundation. See the "COPYING" file for a copy     -->
<!-- of this license.                                                       -->
<!--                                                                        -->
<!-- JMRI is distributed in the hope that it will be useful, but WITHOUT    -->
<!-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  -->
<!-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  -->
<!-- for more details.                                                      -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:docbook="http://docbook.org/ns/docbook"
           xmlns:jmri="http://jmri.org/xml/schema/JMRIschema"
           xsi:schemaLocation="
                http://jmri.org/xml/schema/JMRIschema http://jmri.org/xml/schema/JMRIschema.xsd
                http://docbook.org/ns/docbook http://jmri.org/xml/schema/docbook/docbook.xsd
            "
        >
    <xs:complexType name="SensorManagerType">
      <xs:annotation>
        <xs:documentation>
          Define the XML stucture for storing the contents of a SensorManager implementation.
        </xs:documentation>
        <xs:appinfo>
            <jmri:usingclass configurexml="true">jmri.managers.configurexml.AbstractSensorManagerConfigXML</jmri:usingclass>
        </xs:appinfo>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="defaultInitialState" minOccurs="0" maxOccurs="1">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="inactive"/>
              <xs:enumeration value="active"/>
              <xs:enumeration value="unknown"/>
              <xs:enumeration value="inconsistent"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="globalDebounceTimers" minOccurs="0" maxOccurs="1">
          <xs:complexType>
          <xs:sequence>
            <xs:element name="goingActive" minOccurs="1" maxOccurs="1" />
            <xs:element name="goingInActive" minOccurs="1" maxOccurs="1" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="sensor" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:all>
              <!-- The following is really ugly duplication caused by not being able to , and should be fixed by
                     1) Moving to XML Schema 1.1
                     2) Then converting the "sequence" element in NamedBeanType into an "all" element
                     3) Then having this "sensor" element extend from NamedBeanType
                    The problem is that (a) XML Schema 1.0 "all" elements can't be extended, but
                    (b) we want to insert something _inside_ the order of elements in NamedBeanType.
                    So we recreate those here.  (The code in SensorManager has had the order fixed in 4.7.7
                    but old files still exist)
                    -->
              <xs:element name="systemName" type="systemNameType" minOccurs="1" maxOccurs="1"/>
              <xs:element name="userName" type="userNameType" minOccurs="0" maxOccurs="1"/>
              <xs:element name="comment" type="commentType" minOccurs="0" maxOccurs="1" />
              <xs:element name="properties" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="property" minOccurs="1" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="key" minOccurs="1" maxOccurs="1">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="class" type="classType" use="optional" />
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="value" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="class" type="classType" use="required" />
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <!-- end of ugly duplication -->

              <xs:element name="useGlobalDebounceTimer" type="yesNoType" minOccurs="0" maxOccurs="1" />
              <xs:element name="debounceTimers" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="goingActive" minOccurs="1" maxOccurs="1" />
                    <xs:element name="goingInActive" minOccurs="1" maxOccurs="1" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="pullResistance" type="xs:string" minOccurs="0" maxOccurs="1" />

            </xs:all><!-- secretly still part of ugly duplication -->
            <xs:attribute name="systemName" type="systemNameType">
                <xs:annotation><xs:documentation>Deprecated 2.9.6 in favor of separate element</xs:documentation></xs:annotation>
            </xs:attribute>
            <xs:attribute name="userName" type="userNameType">
                <xs:annotation><xs:documentation>Deprecated 2.9.6 in favor of separate element</xs:documentation></xs:annotation>
            </xs:attribute>
            <xs:attribute name="inverted" type="xs:boolean" default="false" />
          </xs:complexType>
        </xs:element>
            
      </xs:sequence>
      <xs:attribute name="class" type="classType" use="required"/>
    </xs:complexType>

</xs:schema>
