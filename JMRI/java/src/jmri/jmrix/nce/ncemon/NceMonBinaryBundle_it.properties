# NceMonBinaryBundle.properties
#
#
#
# Italian translation: Enzo Fortuna (babbo_enzo@yahoo.com )
#

# Commands
#0x80
NOP_CMD = NO Operation, Istruzione fittizia

#0x82 - 0x87
READ_CLOCK_CMD = Leggi orologio
STOP_CLOCK_CMD = Stop orologio
START_CLOCK_CMD = Start orologio
SET_CLOCK_CMD = Programma orologio {0}ore/{1}min
CLOCK_1224_CMD = Programma formato  {0}ore
CLOCK_RATIO_CMD = Programma Velocit\u2021 orologio {0}

#0x89 - 0x8C
ENABLE_MAIN_CMD = Abilita Tracciato principale, Esci da Programmazione
READ_AUI4_CMD = Leggi Stato AIU {0}
KILL_MAIN_CMD = Disabilita Tracciato principale, Abilita Programmazione
DUMMY_CMD = Comando fittizio

#0x8E - 0x8F
WRITEn_CMD = Scrivi {0} bytes, inizia da {1} <{2}>
READ16_CMD = leggi 16 bytes, inizia da {0}

#0x93 - 0x96
SENDn_BYTES_CMD = Metti in coda TEMP_Q packet da {0} byte Send {1} times <{2}>
#0x97 - 0x9A
WRITE1_CMD = Scrivi 1 byte a {0} <{1}>
WRITE2_CMD = Scrivi 2 bytes a {0} <{1}>
WRITE4_CMD = Scrivi 4 bytes a {0} <{1}>
WRITE8_CMD = Scrivi 8 bytes a {0} <{1}>

#0x9B
READ_AUI2_CMD   = Ritorna stato di AIU {0}
#0x9C
MACRO_CMD = Esegui macro numero {0}
#0x9D
READ1_CMD = leggi 1 byte all'indirizzo memoria {0}
#0x9E - 0x9F
ENTER_PROG_CMD = Inizio Modo Programmazione
EXIT_PROG_CMD = Fine Modo Programmazione
#0xA0 - 0xA1
WRITE_PAGED_CV_CMD = Programma CV {0} con dato <{1}> in modo Pagina
READ_PAGED_CV_CMD = leggi CV {0} in modo Pagina
#0xA2
LOCO_CMD = Invio packet velocit\u2021 o funzione a locomotiva
LOCO_CMD_Op1_01 = Loco {0} Indietro 28 velocit\u2021 {1}
LOCO_CMD_Op1_02 = Loco {0} Avanti 28 velocit\u2021 {1}
LOCO_CMD_Op1_03 = Loco {0} Indietro 128 velocit\u2021 {1}
LOCO_CMD_Op1_04 = Loco {0} Avanti 128 velocit\u2021 {1}
LOCO_CMD_Op1_05 = Loco {0} Stop Emergenza Indietro
LOCO_CMD_Op1_06 = Loco {0} Stop Emergenza Avanti
LOCO_CMD_Op1_07 = Loco {0} Funzione {1} gruppo 1
LOCO_CMD_Op1_08 = Loco {0} Funzione {1} gruppo 2
LOCO_CMD_Op1_09 = Loco {0} Funzione {1} gruppo 3
LOCO_CMD_Op1_0A = Loco {0} Indirizzo Consist-Indietro {1} per loco di testa
LOCO_CMD_Op1_0B = Loco {0} Indirizzo Consist-Avanti {1} per loco di testa
LOCO_CMD_Op1_0C = Loco {0} Indirizzo Consist-Indietro {1} per loco di coda
LOCO_CMD_Op1_0D = Loco {0} Indirizzo Consist-Avanti {1} per loco di coda
LOCO_CMD_Op1_0E = Loco {0} Indirizzo Consist-Indietro {1} per loco intermedia
LOCO_CMD_Op1_0F = Loco {0} Indirizzo Consist-Avanti {1} per loco intermedia
LOCO_CMD_Op1_10 = Togli loco {0} dal Consist
LOCO_CMD_Op1_11 = Loco {0} Cancella Consist
LOCO_CMD_Op1_12 = Loco {0} Inerzia {1}
LOCO_CMD_Op1_15 = Loco {0} Funzioni 13-20 F{1}
LOCO_CMD_Op1_16 = Loco {0} Funzioni 21-28 F{1}
LOCO_CMD_Op1_17 = Assegna questa loco {0} al CAB numero {1}

#0xA6 - 0xA9
WRITE_REG_CMD = Programma registro {0} con dati <{1}>
READ_REG_CMD = Leggi registro {0} in modo registro
WRITE_DIR_CV_CMD = Programma CV {0} con dati <{1}> in modo diretto
READ_DIR_CV_CMD = Leggi CV {0} in modo diretto
#0xAA
SW_REV_CMD = Leggi numero revisione software

#0xAD
ACC_CMD = Accessori/segnali e comandi macro
ACC_CMD_Op1_01 = Esegui macro numero {0}
ACC_CMD_Op1_03 = Accessori {0} Direzione Normale (ON)
ACC_CMD_Op1_04 = Accessori {0} Direzione Inversa (OFF)
ACC_CMD_Op1_05 = Segnale {0} Aspetto {1}

#USB Commands
Usb_Set_Cab_Op1         = Imposta USB a Cab id {0}
Usb_Set_Mem_Ptr_Cmd     = Imposta USB puntatore pagina contesto a cab {0} offset memoria {1}
Usb_Mem_Write_Cmd       = USB Memoria Scrivi 1 byte <{0}>
Usb_Mem_Read_Cmd        = USB Memoria Leggi {0} bytes

# Binary commands we don't know about or haven't coded
BIN_CMD = Comando binario: {0}

# Replies
# Errors returned: '0'= command not supported
# '1'= loco/accy/signal address out of range
# '2'= cab address or op code out of range
# '3'= CV address or data out of range
# '4'= byte count out of range
# '!'= command completed successfully

NceReplyZero = comando non supportato
NceReplyOne = loco/accessori/segnale: indirizzo fuori limiti
NceReplyTwo = Indirizzo CAB o codice fuori limiti
NceReplyThree = Indirizzo CV o dato fuori limiti
NceReplyFour = Conteggio byte fuori limiti
NceReplyOK = comando completato con successo

# Replies programming track mode
NceReplyThreeProg = Corto circuito

# Data replies or one's we don't know about
NceReply = Risposta: {0}

F0_OFF  = F0_OFF
F0_ON   = F0_ON
F1_OFF  = F1_OFF
F1_ON   = F1_ON
F2_OFF  = F2_OFF
F2_ON   = F2_ON
F3_OFF  = F3_OFF
F3_ON   = F3_ON
F4_OFF  = F4_OFF
F4_ON   = F4_ON
F5_OFF  = F5_OFF
F5_ON   = F5_ON
F6_OFF  = F6_OFF
F6_ON   = F6_ON
F7_OFF  = F7_OFF
F7_ON   = F7_ON
F8_OFF  = F8_OFF
F8_ON   = F8_ON
F9_OFF  = F9_OFF
F9_ON   = F9_ON
F10_OFF = F10_OFF
F10_ON  = F10_ON
F11_OFF = F11_OFF
F11_ON  = F11_ON
F12_OFF = F12_OFF
F12_ON  = F12_ON


