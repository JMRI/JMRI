# conditional.ConditionalBundle_es.properties
# based on a COPY from LogixTableBundle.properties, cleaned up 201803
#
# Spanish properties for the jmri.jmrit.conditional GUI elements

LogixUserNameHint2 = Ponga el nombre de usuario para el Logix, p.e. Semaforo 2
ConditionalSystemName = Nombre de sistema de la condici\u00f3n
ConditionalUserName = Nombre de usuario de la condici\u00f3n
ConditionalUserNameHint = Ponga el nombre de usuario para la condici\u00f3n, p.e. Sem\u00e1foro 2 en rojo

SinglePickFrame = Single Pick List

ColumnLabelRow = Row
ColumnLabelOperator = Operator
ColumnLabelNot = Negation (Not)
ColumnLabelDescription = State Variable Description
ColumnLabelTriggersCalculation = Calculo de disparo

# logix node edit pane items
NodeEditTitle   = Active Node Edit
NodeEditText = Another node cannot be selected while editing a node. Select Cancel or Update to complete the edit.

# Select Conditional Reference
SelectLogix = Select Logix
SelectConditional = Select Conditional
SelectFirstRow = Select a Conditional...

TitleEditLogix = Editar Logix
TitleEditConditional = Editar Condici\u00f3n
TitleEditAction = Edit Action
TitleEditVariable = Edit Variable
TitleLogicalExpression = Expresi\u00f3n l\u00f3gica
TitleAntecedentPhrase = Antecedent Variable
TitleConsequentPhrase = Consequent Action
TitleAction = Acci\u00f3nes

ConditionalTableTitle = Condiciones (por orden de c\u00e1lculo)
StateVariableTableTitle = Variables de estado
triggerOnChange = Execute Actions on change of state only
triggerOnAny    = Execute Actions whenever triggered
OnTriggerToTrue = When Triggered True
OnTriggerToFalse= When Triggered False
OnTrigger       = Whenever Triggered
OnChangeToTrue = Al cambiar a verdadero
OnChangeToFalse = Al cambiar a falso
OnChange = Al cambiar
FromFile = from file,
After = , after
Seconds = seconds
to = to
onWarrant = on Warrant
onBlock = in Block
onPath  = on Path
ValueInMemory = (Memory''s Value)
ExecJythonCmd = Jython Command

# Conditional TreeView
# Labels
LabelConditionalActions = Conditional:
LabelAntecedentActions = Antecedent:
LabelLogicTypeActions = Logic Type:
LabelTriggerModeActions = Trigger Mode:
LabelVariablesActions = Variables:
LabelVariableActions = Variable:
LabelActionsActions = Actions:
LabelActionActions = Action:
LabelMove = Move:
LabelAntecedentHeader = Antecedent Logic

# Nodes
NodeVariablesExpanded = Variables:
NodeVariablesCollapsed = Variables
NodeActions = Actions

# Hints
HintAddButton = Add a new item
HintEditButton = Edit the selected item
HintUpButton = Move the selected item up one row
HintDownButton = Move the selected item down one row
HintDeleteButton = Delete the selected item
HintDoneButton = Close the conditional edit and return to the Logix table
HintSaveButton = Save the add/edit changes and close
HintCancelButton = Close without saving the add/edit changes
HintHelpButton = Open a help window with detail Antecedent instructions
HintCheckButton = Update the state
HintToggleButton = Toggle the Action trigger mode

# Dialog Titles, not in use
TitleEditTypeDialog = Edit Logic Type
TitleEditConditionalDialog = Edit Conditional Name
TitleEditAntecedentDialog = Edit Antecedent Logic

# ConditionalHelpText
ConditionalHelpText1 = Mixing AND''s and OR''s may introduce ambiguous evaluations. The antecedent\n
ConditionalHelpText2 = statement is evaluated from left to right, which corresponds to computing\n
ConditionalHelpText3 = the innermost variable on the left to the outermost variable on the right.\n
ConditionalHelpText4 = To modify this order of evaluation, please insert parenthesis to indicate the\n
ConditionalHelpText5 = logic you want. You may also modify the operators to use. The evaluation\n
ConditionalHelpText6 = logic of 'Mixed' mode is the content of the antecedent field and not the\n
ConditionalHelpText7 = operators shown in the rows of the state variable table.

DoneButtonHint = Pulsar para guardar cambios de nombre de usuario y volver a la tabla de Logix
DeleteLogixButtonHint = Pulsar para borrar este Logix y todas sus condiciones
CancelButtonHint = Pulsar para volver a la tabla de Logix sin cambiar nada
NewConditionalButton = Nueva condici\u00f3n
NewConditionalButtonHint = Pulsar para sacar una ventana para crear una nueva condici\u00f3n
CalculateButton = Calcular
CalculateButtonHint = Pulsar para calcular estados condicionales sin acci\u00f3n
ReorderButton = Reordenar
ReorderButtonHint = Pulsar y luego pulsar en la columna derecha el orden deseado
AddVariableButton = A\u00f1adir variable de estado
AddVariableButtonHint = Pulsar para agregar una fila en la tabla de variables de estado
CheckVariableButton = Ver variables de estado
CheckVariableButtonHint = Pinchar en la columna de estado, y luego aqu\u00ed para ver la informaci\u00f3n de la tabla de variables de estado.
UpdateConditionalButtonHint = Pulsar para aceptar los cambios y volver a Editar Logix
CancelConditionalButtonHint = Pulsar para volver a Editar Logix sin cambiar nada
DeleteConditionalButton = Borrar condici\u00f3n
DeleteConditionalButtonHint = Pulsar para borrar esta condici\u00f3n y volver a Editar Logix
addActionButton = Add Action
addActionButtonHint = Press to add a new row to Action Table
UpdateButtonHint = Press to keep changes and return to Edit Conditional
DeleteButtonHint = Press to delete and return to Edit Conditional

NameHintTurnout = Introducir nombre (de sistema o de usuario) del desv\u00edo (p.ej. LT12)
NameHintSensor = Introducir nombre (de sistema o de usuario) del sensor (p.ej. CS2)
NameHintSignal = Introducir nombre (de sistema o de usuario) de la senal (p.ej. IH34)
NameHintSignalMast = Enter Name (system or user) for Signal Mast and hit Enter/Return to load its Aspects
NameHintLight = Introducir nombre (de sistema o de usuario) del desv\u00edo (p.ej. CL12)
NameHintRoute = Introducir nombre (de sistema o de usuario) del desv\u00edo que recibira esta acci\u00f3n
NameHintWarrant = Enter Name (system or user) of Warrant
NameHintMemory = Introducir nombre (de sistema o de usuario) del desv\u00edo que recibira esta acci\u00f3n
NameHintLogix = Introducir nombre (de sistema o de usuario) del desv\u00edo que recibira esta acci\u00f3n
NameHintOBlock = Enter Name (system or user) of OBlock
NameHintEntryExit = Enter Name of Entry/Exit Pair
CompareHintMemory = Select an operator to compare Memory values
CompareTypeHint = Select either a literal value or the value in a Memory location
NameHintConditional = Enter System Name for Conditional (or User Name if in this Logix)
TurnoutSetHint = Elegir directo o desviado, seg\u00fan c\u00f3mo se desea que quede el desv\u00edo
SensorSetHint = Elegir Activo o Inactivo, seg\u00fan c\u00f3mo se desea que quede el sensor
LightSetHint = Elegir Encendido o Apagado, seg\u00fan c\u00f3mo se quiera que quede la luz
SignalSetHint = Elegir la apariencia de la se\u00f1al que se quiera
SignalMastSetHint = Select Signal Mast Aspect to set and hit Enter/Return to load its Aspects
LockSetHint = Select Lock or Unlock
DataHintDelayedSensor = Poner el tiempo (segundos) para esperar antes de cambiar el sensor
DataHintDelayedTurnout = Poner el tiempo (segundos) para esperar antes de cambiar el desv\u00edo
DataHintMemory = Poner el valor que se desea dejar en la memoria
DataHintValue = Enter Value to be compared
DataHintSound = Poner el nombre del fichero de sonido que se desea reproducir
DataHintScript = Poner el nombre del script para ejecutar
SetHintSound = Pinchar para sacar un selector de fichero para elegir un fichero de sonido
SetHintScript = Pinchar para sacar un selector de fichero para elegir un fichero de script
DataHintTime = Enter time (hh:mm) for a 24-hour clock
NameHintFromMemory = Enter name (system or user) of Memory to be copied from
DataHintToMemory = Enter name (system or user) of Memory to receive the copied value
DataHintLightIntensity = Enter intensity percentage as an integer 0 to 100.
DataHintLightTransitionTime = Enter number of fast clock minutes to transition between 0% and 100%.

VariableTypeHint = Select type of state variable for Conditional to test
VariableOperHint = Select AND or OR for the operator, default is AND
VariableNotHint = Check to indicate that this variable is to be negated, default is unchecked
VariableTriggerHint = Check to indicate that this variable is used to trigger actions, default is checked
VariableStateHint = Select the state of the variable to test
VariableLogixHint = Select the Logix that contains the conditional to be checked
VariableConditionalHint = Select the desired conditional
VariableAspectHint = Select the Aspect of the Signal Mast to test
ActionItemHint = Select action item for Conditional to execute
ActionOptionHint = Select when action should occur
SetHintAudio = Select action to perform
NameHintAudio = Enter Name (system or user) for AudioSource (e.g. IAS2)
SetHintJythonCmd = Enter Jython command text
DataHintTrainControl = Select an option to control the train
DataHintTrainId = Enter a train ID from the Roster - or enter a DCC address indicating long or short e.g. 1234(L) or 10(S)
DataHintTrainName = Enter a name for the train
DataHintBlockValue = Enter a value to be set into the Block
DataHintThrottleFactor = Enter a decimal number for the Throttle setting ratio.
BlockPathsSetHint = Select the Path to use

PromptLoadMastName = (Type Signal Mast name in the System/User Name field and hit Enter to load its Aspects)
PromptLoadHeadName = (Type Signal Head name in the System/User Name field and hit Enter to load its Appearances)

# ConditionalEdit Reorder Table Buttons
ButtonFirst = Primero
ButtonNext = Siguiente
ReorderMessage = Por favor, pulsar Primero, luego Siguiente, Siguiente, ... en el orden deseado.
ButtonMove = Move
ConfirmIndirectReference = Press "{1}" if at run time Memory location "{0}" will contain a valid item name for this action.\nPress "{2}" if you want to enter the item name directly.\nPress "{3}" if you want to suppress this warning.\n

# Variable State combo box states used in jmri.implementation.DefaultConditionalAction
TurnoutUnlock = Unlock
TurnoutLock = Lock
LightOn = Encendida
LightOff = Apagada
StateMemoryEquals = (case sensitive) Value
StateMemoryEqualsInsensitive = (case insensitive) Value
StateMemoryCompare = (case sensitive) Memory
StateMemoryCompareInsensitive = (case insensitive) Memory

# Variable State combo box states used in jmri.implementation.DefaultConditionalAction
# here for ConditionalVariable via rbx:
StateSignalMastLit = Signal Mast Lit
StateSignalMastHeld = Signal Mast Held
StateRouteFree = Route Free
stateRouteOccupied = Route Occupied
StateRouteReserved = Route Allocated
StateRouteIsSet    = Route Set
StateTrainRunning  = Train Running

# Variable State combo box states used in jmri.implementation.DefaultConditionalAction
TypeSensorActive = Sensor Activo
TypeSensorInactive = Sensor Inactivo
TypeTurnoutThrown = Desv\u00edo en desviada
TypeTurnoutClosed = Desv\u00edo en directa
TypeConditionalTrue = Condici\u00f3n verdadera
TypeConditionalFalse = Condici\u00f3n falsa
TypeLightOn = Luz encendida
TypeLightOff = Luz apagada
TypeMemoryEquals = Memoria igual a
TypeMemoryEqualsInsensitive = Memory Compare to Value (Case Insensitive)
TypeMemoryCompare = Memory Compare to Memory (Case Sensitive)
TypeMemoryCompareInsensitive = Memory Compare to Memory (Case Insensitive)
TypeFastClockRange = Rango del reloj r\u00e1pido
# head test type strings picked up from jmri.NamedBeanBundle
#TypeSignalHeadRed = Cabeza de se\u00f1al roja
#TypeSignalHeadYellow = Cabeza de se\u00f1al amarilla
#TypeSignalHeadGreen = Cabeza de se\u00f1al verde
#TypeSignalHeadDark = Cabeza de se\u00f1al apagada
#TypeSignalHeadFlashRed = Cabeza de se\u00f1al destello rojo
#TypeSignalHeadFlashYellow = Cabeza de se\u00f1al destello amarillo
#TypeSignalHeadFlashGreen = Cabeza de se\u00f1al destello verde
#TypeSignalHeadLit = Cabeza de se\u00f1al encendida
#TypeSignalHeadHeld = Cabeza de se\u00f1al bloqueada
#TypeSignalHeadLunar = Signal Head Lunar
#TypeSignalHeadFlashLunar = Signal Head Flashing Lunar
TypeWarrantRouteFree    = Free
TypeWarrantRouteOccupied = Occupied
TypeWarrantRouteAllocated = Allocated
TypeRouteIsSet  = Set
TypeTrainRunning = Running
TypeSignalMastAspectEquals = Signal Mast Aspect equals
TypeSignalHeadAspectEquals = Signal Head Appearance equals
#TypeSignalMastLit = Signal Mast Lit
#TypeSignalMastHeld = M\u00e1stil de se\u00f1al bloqueada
TypeEntryExitActive = Active
TypeEntryExitInactive = Inactive

VariableOKMessage = Todas las variables de estado est\u00e1n bien.
VariableErrorMessage = Error: Por favor, corregir e intentar otra vez.
ActionOKMessage = All Actions are OK.
NoActionMessage = A Condition requires at least one State Variable and usually has at least one Action.

FileButtonHint = Click to select a file from disk
LabelLogicType = Logic Operator:
TypeLogicHint = Choose logic operator joining state variables for the antecedent ('if' part) of this conditional
LabelAntecedent = Antecedent Expression (the 'if' part of the Conditional)
LabelAntecedentHint = Insert parenthesis so the statement satisfies the logic order you want
LabelTrainId = Train ID or Address
LabelTrainName = Train Name
LabelThrottleFactor = Throttle Adjustment Factor
LabelBlockValue = Block Value
LabelActionItem = Action Group
LabelActionType = Action Type
LabelVariableType = Variable Type
LabelVariableState = Variable State
LabelVariableAspect = Variable Aspect
LabelLiteralValue  = Literal Value
LabelMemoryValue  = Memory Value
LabelStartTime  = Start Time
LabelEndTime    = End Time
LabelCompareOp  = Comparison Operator
LabelCompareType  = Compare as
LabelActionOption = Change Option
LabelItemName   = System / User Name
LabelActionTurnout = Turnout Position
LabelActionSensor = Sensor State
LabelActionLight = Light State
LabelActionSignal = Signal Head Appearance
LabelSignalAspect = Signal Mast Aspect
LabelActionLock = Lock State
LabelActionFile = Set
LabelSelectFile = Select File
LabelActionText = Action Data
LabelActionDescription = Action Description
LabelActionAudio = Audio Action
LabelDelayTime  = Delay Time
LabelSetTime    = Set Time
LabelSetFile    = File Name
LabelScriptCommand  = Script Command
LabelLightIntensity = Light Intensity
LabelTransitionTime = Transition Time
LabelMemoryLocation = Memory Name
LabelValue      = Value
LabelBlockPaths = Block Path
LabelBlockStatus = Block Status
LabelControlTrain = Control Command

# Actions used in implementation.DefaultConditional(Action) (via rbx.getString)
ActionNone = Nada
ActionSetTurnout = Cambiar desv\u00edo
ActionSetSignal = Cambiar apariencia de se\u00f1al
ActionSetSignalHeld = Bloquear se\u00f1al
ActionClearSignalHeld = Desbloquear se\u00f1al
ActionSetSignalDark = Apagar se\u00f1al
ActionSetSignalLit = Encender se\u00f1al
ActionTriggerRoute = Disparar ruta
ActionSetSensor = Poner sensor
ActionDelayedSensor = Poner sensor con retardo 
ActionResetDelayedSensor = Reset Delayed Set Sensor
ActionCancelSensorTimers = Cancel Timers for Sensor
ActionDelayedTurnout = Cambiar desv\u00edo con retardo
ActionResetDelayedTurnout = Reset Delayed Set Turnout
ActionCancelTurnoutTimers = Cancel Timers for Turnout
ActionSetLight = Poner luz
ActionSetLightIntensity = Set Light Intensity
ActionSetLightTransitionTime = Set Light Transition Time
ActionSetMemory = Poner memoria 
ActionCopyMemory = Copy Memory To Memory
ActionEnableLogix = Habilitar Logix
ActionDisableLogix = Deshabilitar Logix
ActionPlaySound = Reproducir fichero de sonido
ActionRunScript = Ejecutar script
ActionTurnoutLock = Turnout Lock
ActionSetFastClockTime = Set Fast Clock Time
ActionStartFastClock = Start Fast Clock
ActionStopFastClock = Stop Fast Clock
ActionAllocateWarrant = Allocate Warrant Route
ActionDeallocateWarrant = Deallocate Warrant
ActionSetWarrantTurnouts = Set Route Turnouts
ActionAutoRunWarrant    = Auto Run Train
ActionManualRunWarrant  = Manually Run Train
ActionControlTrain      = Control Auto Train
ActionSetTrainId        = Set Train ID
ActionSetTrainName      = Set Train Name
ActionSetSignalMastAspect = Set Signal Mast Aspect
ActionSetThrottleFactor = Set Throttle Factor
ActionSetSignalMastHeld = Set Signal Mast Held
ActionClearSignalMastHeld = Clear Signal Mast Held
ActionSetSignalMastDark = Set Signal Mast Dark
ActionClearSignalMastDark = Clear Signal Mast Dark
ActionSetBlockValue     = Set Block Value
ActionSetBlockError     = Set Block Error
ActionClearBlockError   = Clear Block Error
ActionDeallocateBlock   = Deallocate Block
ActionSetBlockOutOfService = Set Block OutOfService
ActionBlockInService    = Clear Block OutOfService
ActionControlAudio = Control Audio object
ActionJythonCommand = Execute Jython Command
ActionTypeHint = Elegir el tipo de acci\u00f3n, o elegir Nada si no se necesita ninguna.
ActionNXPairEnabled     = Set NX Pair Enabled
ActionNXPairDisabled    = Set NX Pair Disabled
ActionNXPairSegment     = Set NX Pair Segment Active / Inactive

AudioSourcePlay = Play
AudioSourceStop = Stop
AudioSourcePlayToggle = Toggle Play
AudioSourcePause = Pause
AudioSourceResume = Resume
AudioSourcePauseToggle = Toggle Pause
AudioSourceRewind = Rewind
AudioSourceFadeIn = Fade-in
AudioSourceFadeOut = Fade-out
AudioResetPosition = Reset Position

WarrantHalt     = Halt
WarrantResume   = Resume
WarrantAbort    = Abort
OBlockStatus = OBlock Status
OBlockStatusHint = Select an OBlock Status to Test
Other   = Other
EntryExit = Entry Exit

# for jmri.ConditionalVariable via rbx
VarStateDescrpt = {0} "{1}" state is {2}
SignalHeadStateDescrpt = {0} "{1}" Appearance is {2}
SignalMastStateDescrpt = {0} "{1}" Aspect is {2}
MemoryValueDescrpt = {0} "{1}" {2} value "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} range from {1} to {2}

LessThan        = Less Than
LessOrEqual     = Less Than Or Equal
Equal           = Equal
GreaterOrEqual  = Greater Than Or Equal
GreaterThan     = Greater Than

# Conditional(Variable) error strings
Error6 = El nuevo nombre de usuario ya se est\u00e1 usando. No se puede actualizar este Logix.\nPor favor, cambie el nombre de usuario y vuelva a intentarlo.
Error4 = The following error occurred when activating this Logix.\n
Error7 = \nPlease correct the reference or delete the offending Conditional or Logix.
Error9  = Enter a decimal number or a Memory variable containing\na decimal number for the number of seconds to {0}.
Error10 = El nuevo nombre de usuario ya se est\u00e1 usando. No se puede actualizar esta condici\u00f3n.\nPor favor, cambie el nombre de usuario y vuelva a intentarlo.
Error11 = Conditional "{0}" ({1}) is a Conditional Variable in the Conditional,\n"{2}" ({3}), of Logix, "{4}" ({5}).\nPlease remove that variable first.
Error21 = "{1}" is not a valid Appearance for Signal Head "{0}".
Error22 = El nombre "{0}" no corresponde a ning\u00fan logix.\nPor favor, corrija o cr\u00e9elo, y vuevla a intentarlo.
Error23 = Set Delayed Sensor action
Error24 = Memory variable "{0}" currently does not contain a numeric value.\nWhen triggered the action cannot be performed until this value is corrected!
Error26 = Hora no v\u00e1lida: "{0}"\nLa hora debe tener el formato hh:mm (p.e.: 01:30, 16:00)\nen formato de 24 horas. Por favor, p\u00f3ngala en forma correcta y vuelva a intentarlo. 
Error27 = Reset Delayed Set Sensor action
Error29 = Set Light Transition Time
Error30 = Nombre de usuario duplicado. El nombre de usuario introducido ya se usa en la condici\u00f3n  "{0}".\nPor favor, ponga un nombre de usuario diferente de otros de esta tabla.
Error34 = No se pueden editar dos condiciones a la vez. Por favor, termine con la condici\u00f3n "{0}" y vuelva a intentarlo.
Error35 = Se est\u00e1 editando una Condici\u00f3n. Por favor, termine de editar la condici\u00f3n "{0}" y vuelva a intentarlo.
Error38 = {0} no est\u00e1 o no es razonable para {1}\nPor favor, ponga el n\u00famero de segundos (solamente d\u00edgitos), y vuelva a intentarlo.
Error39 = Set Delayed Turnout action
Error40 = Light - {0} - does not support transition time.\nPlease enter a light with Transition Time or change action type, and try again.
Error41 = Reset Delayed Set Turnout action
Error42 = Set Light Intensity action
Error43 = Enter an integer (digits only) or a Memory variable containing\nan integer to Set Light Intensity.
Error45 = Light - {0} - does not have variable intensity.\nPlease enter a light with variable intensity or change action type, and try again.
Error46 = Hacen falta al menos dos condiciones para poder ordenarlas.
Error47 = Edit of State Variable in progress. Please complete and try again.
Error48 = Edit of Action in progress. Please complete edit and try again.
Error49 = LRoute Initializer antecedent cannot be edited (The actions may be edited)
Error50 = Variable and/or Action edits in progress.\nPlease complete edits and try again.
Error51 = At least two Variables are needed to reorder Variables.
ErrorAppearance = Select an Appearance. You must hit the Enter/Return key\nafter entering a name with the cursor in the name field.
ErrorAspect = Select an Aspect.  You may need to hit the Enter/Return key\nwith the cursor in the name field.
ErrorVariableType = Select a Variable Type or press [Cancel].
ErrorVariableState = Select a state for this variable.

ButtonDisabled = Continuar desactivado
ButtonEnabled = Continuar activado
Warn1 = Se ha borrado la \u00faltima condici\u00f3n de este Logix.
Warn2 = Un Logix debe tener al menos una condici\u00f3n para hacer algo \u00fatil.
Warn3 = Se ha borrado la \u00faltima variable de estado de esta condici\u00f3n.\nUna condici\u00f3n debe tener al menos una variable de estado para hacer algo \u00fatil.
Warn5 = La condici\u00f3n "{0}" no tiene variables de estado.\nUna condici\u00f3n debe tener al menos una variable de estado para hacer algo \u00fatil.
Warn6 = Atenci\u00f3n - Cambiar en {0} de {1} {2} disparar\u00e1 el c\u00e1lculo de este Logix.\nHay disparos de c\u00e1lculo activados para algunas instancias y desactivados para otras.\nPor favor, desactive todas las instancias si no se quiere que el c\u00e1lculo se dispare por este cambio.
Warn8 = Conditionals in Logix "{0}" ({1}) cannot be edited.\nGo to the Sensor Group Table to edit sensor groups.
Warn9 = Hay condiciones que podr\u00edan generar un bucle. \n Lo siguiente dispara este Logix y es cambiado por el mismo:\n
Warn10 = fue desactivado.\nPor favor, recuerde activarlo luego.
Warn11 = \nYou may delete Conditional "{0}" ({1})\nor edit it from the template window where it was created.
Warn12 = Complete other Variable edits before deleting a Variable.
Warn13 = Complete other Action edits before deleting an Action.
Warn14 = Complete other Action edits before re-ordering the Action rows.
Warn15 = The View mode cannot be changed while there is an active edit.
makeSelection = Please select an Action type.
