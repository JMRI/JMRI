<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<!-- Copyright Bob Jacobsen 2008 -->

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Send CAN Frame</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <meta name="author" content="Bob Jacobsen">
  <meta name="keywords" content="JMRI help send loconet packets">
  <!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1>Send OpenLCB Frame</h1><a href="SendFrame.jpg"><img src=
      "SendFrame.jpg" width="221" height="176" alt=
      "Send Frame Tool image" align="right"></a><br>
      The "Send OpenLCB Frame" tool lets you directly send <a href=
      "../../../../../../html/hardware/can/index.shtml">CAN
      frames</a>, and certain kinds of OpenLCB messages.

      <p>It works best in combination with the "Show Raw Data"
      option in the monitor window, because packets are entered
      here in raw hexadecimal format.</p>

      <p>The top section of the window lets you send a single
      frame. Just type the packet's data contents as hexadecimal
      numbers, for example "83 7C". If you want to specify header
      contents, preceed the packet data with the header in "()"
      characters or "[]" characters for a standard or extended
      header, respectively. (OpenLCB uses only extended headers,
      but we make it possible to send both so you can experiment).
      Once you've entered the packet, just click "send".</p>

      <p>The second section lets you enter from one to four frames
      that will be repeatedly sent in sequence, with user-defined
      delays in between. Press the "Go" button to start the
      transmission sequence, and press it again to stop the
      sequence.</p>

      <p>Below that are sections for sending various OpenLCB
      messages.</p>

      <p>Under "Send special frame", the "Send CIM" button formats
      up a "CIM" frame from the source node alias that you provide
      and then sends it. This is part of the OpenLCB technique for
      allocating node aliases.</p>

      <p>In the "Send OpenLCB message" section, you can format and
      send frames that contains specific OpenLCB messages:</p>

      <ul>
        <li>"Send Verify Node": Using the source alias you provided
        in the upper section and a node ID specified here, this
        sends a request for a verification reply from the
        node.</li>

        <li>"Send Request Events": Using the source alias you
        provided in the upper section and a node ID specified here,
        this sends a request for infomration on the nodes produced
        and consumed by the node.</li>

        <li>"Send Request Consumers": Using the source alias you
        provided in the upper section and an event ID specified
        here, this sends a request for a reply from any node that
        consumes that event ID.</li>

        <li>"Send Request Producers": Using the source alias you
        provided in the upper section and an event ID specified
        here, this sends a request for a reply from any node that
        produces that event ID.</li>

        <li>"Send Event Produced": Using the source alias you
        provided in the upper section and an event ID specified
        here, this sends an announcement that the given event has
        been produced.</li>

        <li>"Send Datagram": Using the source alias and destination
        alias you provided in the upper section and data bytes you
        provide here, this sends a datagram to the destination
        node. The "Send Confirm" button sends a confirmation reply
        to any datagram received.</li>
      </ul>

      <p>In the "Send OpenLCB configuration command" section, you
      can use the OpenLCB configuration protocol to read and write
      from node memory. Set your source node alias and the
      destination node alias in the "Send special frame" section
      above.</p>

      <p>Next select the memory address to start reading or writing
      at, and which address space you'd like to read or write from.
      (Configuration Definition Information, etc).</p>

      <p>Then, either enter the desired number of bytes and click
      Read, or the data to write (two bytes in this implementation)
      and push "Write".</p>

      <p>"Send Confirm" sends the confirmation to any datagrams you
      receive in reply.</p>
      <!--#include virtual="/Footer" -->
    </div>
  </div>
</body>
</html>
