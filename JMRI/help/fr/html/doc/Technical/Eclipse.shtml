<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!--Updated Herv&#233; BLOREC <bzh56420@yahoo.fr> on 2016-07-08 -->
<html lang="fr">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Building with Eclipse</title>
	<meta name="author" content="Bob Jacobsen">
  <meta name="keywords" content="JMRI technical code Eclipse">
  <!-- Style -->
  <meta http-equiv="content-type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>


<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

	<div id="mainContent">
	    <!-- -------- -->
	    <!--  Teaser  --> <!-- Optional -->
	    <!-- -------- -->


	    <H1>JMRI: Construction avec Eclipse</H1>

   		
	<p>		Eclipse (disponible &#224; <a href="http://www.eclipse.org">  www.eclipse.org </a>) fait une excellente plate-forme pour 
			travailler avec JMRI.
	</p>
   		
	<p>
 			Eclipse est un environnement complexe. Si vous &#234;tes d&#233;j&#224; familier
     		avec les IDEs comme Microsoft Visual Studio, il ne sera pas trop difficile de s'y habituer,
     		mais il vaut vraiment la peine d'acheter un manuel (par exemple
     				<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0321305027/qid=1124158635"> 
					Le guide du d&#233;veloppeur Java pour Eclipse </a>).
	</p>

	<p> 
			Les d&#233;veloppeurs JMRI utilisent Git pour le contr&#244;le de la source. Le contr&#244;le de la source utilisant Git 	
			est inclus comme un &#233;l&#233;ment lors du t&#233;l&#233;chargement Eclipse "Luna".Pour plus d'information ou une methode alternative pour 
			obtenir la source JMRI, voir <a href="getgitcode.shtml">JMRI: Obtention du Code</a>.  

	</p>

	<p> Ces instructions ont &#233;t&#233; d&#233;velopp&#233;es et test&#233;es avec "Eclipse IDE
			 for Java Developers" "Luna Service Release 1a (4.4.1)".</p>
	<p> Noter &#233;galement que, au moment de la r&#233;daction de ce document d'aide que 
			JMRI n&#233;cessite JAVA version 8. Vous devez confirmer que JRE 8 est le 
			Java Runtime Environment par d&#233;faut. Eclipse recommande l'installation 
			de la parution Luna pour Java 8, mais il existe des solutions de contournement d&#233;crites en ligne. </p>

	<a name="getwgit"></a>
	<h2>Obtention de la Source JMRI en utilisant Git</h2>
	
	Pour obtenir le code source depuis GitHub en utilisant Git, vous devez faire 
	ce qui suit:

	<ol>

 		 <li>Aller &#224; <a href="https://github.com/">GitHub.com</a> et cr&#233;er 
				un compte.
  		<li>Ensuite ouvrir Eclipse</li>
  		<li>Depuis la barre de menu principale s&#233;lectionnez "File" puis "Import..."</li>
 		<li>Cliquez sur "Git" puis Project from Git" puis le bouton "Next".</li>
    	<li>Maintenant s&#233;lectionnez le r&#233;f&#233;rentiel source en cliquant sur "Clone URI".
			L'&#233;cran Source Git Repository doit appara&#238;tre.</li>
  
	</ol>
	<a href="images/EclipseSourceGitRepository.png">
	<img src="images/EclipseSourceGitRepository.png" width="350" height="312" alt="Eclipse Git pane"></a>

	<ol>
		
		<li>S&#233;lectionnez les branches que vous voulez installer. Si vous n'&#234;tes pas sûr
				des branches dont vous avez besoin, s&#233;lectionnez juste la branche "master"0. Cette branche
				contient le tout dernier code pour JMRI.</li>
		<li>Cliquez le bouton "Next" et l'&#233;cran Local Destination
			doit appara&#238;tre.</li>
		<li> Appuyez sur le bouton "Next" si la destination locale vous 
			convient.<li>
	</ol>

	<p>Apr&#232;s que le t&#233;l&#233;chargement est termin&#233; l'Eclipse Package Explorer
		devrait ressembler &#224; ceci: </p>
	<a href="images/EclipsePackageExplorer.png">
	<img src="images/EclipsePackageExplorer.png" width="350" height="312" alt="Eclipse Package Explorer pane"></a>		
 	<p>Quand le t&#233;l&#233;chargement est termin&#233;, Eclipse rapportera une erreur:
		Projet "jmri" est manquant dossier source n&#233;cessaire: "java/tmp".
		Ceci peut &#234;tre corrig&#233; en ex&#233;cutant une construction Ant comme d&#233;crit plus bas
 
	<h2>Construire et ex&#233;cuter JMRI en utilisant Ant</h2>

	Nous recommandons que avant d'essayer et de construire et d'ex&#233;cuter l'un des
	applications au sein d'Eclipse que vous ex&#233;cutiez le build.xml de Ant au sein 
	d'Eclipse. Ce sera de cr&#233;er les r&#233;pertoires n&#233;cessaires, charger quelques ressources 
	ic&#244;nes, et cr&#233;er des fichiers Java n&#233;cessaires &#224; l'aide de 	JavaCC. Pour ex&#233;cuter 
	le build.xml de Ant vous devez faire ce qui suit:
	
	<ol>
		<li>Ant n&#233;cessite un JDK (Java Development Kit) afin d'ex&#233;cuter 
			le fichier fourni "build.xml". Le t&#233;l&#233;chargement d'Eclipse n'inclut pas un JDK, 
			vous devez t&#233;l&#233;charger et installer un JDK, puis configurer Ant
			pour utiliser le JDK. 
		<li>Voici un lien pour le site Oracle site qui vous fournira
		un JDK: 
		<p>
			<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/
			downloads/index.html</a>
		</p>
		</li>
		<li>S&#233;lectionnez le fichier build.xml &#224; l'aide de Package Explorer, puis
 				cliquez-droit et un menu devrait appara&#238;tre. </li>
		<li> Maintenant, s&#233;lectionnez "Run As" puis "2 Ant Build".</li>
		<li>Assurez-vous que sous l'onglet Menu JRE vous avez s&#233;lectionn&#233; 
			un JDK et non un JRE.</li>
		<li>Maintenant, appuyez sur le bouton "Ex&#233;cuter", ce qui devrait commencer le "Ant build" .
	</ol>

	<p>Si la construction de Ant &#233;choue, il est plus probable parce que vous ayez besoin d'un JDK (Java
			Development Kit) plut&#244;t que d'un JRE (Java Runtime Environment) qui est
			la valeur par d&#233;faut. Pour modifier le JRE, s&#233;lectionnez "Run as" "2 Ant Build" 
			et une nouvelle	fen&#234;tre devrait appara&#238;tre. S&#233;lectionnez l'onglet "JRE". Le changement de JRE, 	
			s&#233;lectionnez le bouton radio "Separate JRE:" , puis appuyez sur le bouton "JRE install&#233;s"
 			Si vous ne voyez pas un JDK, vous devez en ajouter un.( depuis le site ci-dessus )</p>


	<p>Si la construction de Ant r&#233;ussit,vous pouvez maintenant lancer une des applications JMRI
 			de ant, et cr&#233;er un fichier jmri.jar si vous le souhaitez. Utilisez la 
			fonction "2 Ant Build" et dans la fen&#234;tre, s&#233;lectionnez l'onglet "Targets", et utiliser la 
			case appropri&#233;e pour g&#233;n&#233;rer ce que vous voulez.</p>

	<h2>Construire et ex&#233;cuter JMRI en utilisant Eclipse</h2>

 	<p>Apr&#232;s avoir termin&#233; la construction de Ant comme d&#233;crit ci-dessus, vous devez 
			actualiser le r&#233;pertoire jmri. Faites un clic droit sur le nom du r&#233;pertoire jmri et 
			s&#233;lectionnez "Refresh". L'op&#233;ration de r&#233;g&#233;n&#233;ration doit d&#233;clencher 
			une construction de l'espace de travail et la construction devrait se terminer sans erreur..
 	<p>Pour ex&#233;cuter une application faire comme suit:</p>
 
	<ol>

  			<li>Vous devez v&#233;rifier que le niveau de conformit&#233; du compilateur est r&#233;gl&#233; 
					sur Java 1.8. s&#233;lectionn&#233; dans la barre principale de comande "Window-&gt;Preferences"
  					puis s&#233;lectionnez "Java-> Compiler"
  			<li>Depuis le menu "Run", s&#233;electionnez "Run Configurations..." Nous allons utiliser 
					la fen&#234;tre qui s'ouvre pour Configurer les programme (s) &#224; ex&#233;cuter. (Si le 
					menu Ex&#233;cuter n'a pas d' entr&#233;e "Run Configurations ...", assurez-vous 
					que vous avez s&#233;lectionn&#233; le r&#233;pertoire java dans le volet de navigation ci-dessus-les menus
					Eclipsesont sensibles au contexte) )</li>

 			<li>Sur le c&#244;t&#233; gauche, mise en &#233;vidence  de "l'application Java", puis appuyez 
					sur l'ic&#244;ne "New" au-dessus. L'ic&#244;ne ressemble &#224; un document avec un signe plus 
					sur la partie sup&#233;rieure droite..</li>

  			<li>Vous devriez maintenant avoir un nouvel onglet "Main" en surbrillance. Au-dessus ceci, 
					remplacer "New_configuration" par "DecoderPro". Ci-dessous, entrez "jmri" ​​
					(minuscules importante) pour "Project" et "apps.DecoderPro.DecoderPro" for "Main class:".</li>

 			<li>S&#233;lectionnez l'onglet "Arguments", et sous les arguments VM entrer ( Vous 
					devriez probablement couper et coller ): <br><pre>
-Xms10m
-Xmx300m
-Djava.security.policy=lib/security.policy 
-Dapple.laf.useScreenMenuBar=true
</pre> Si vous utilisez un syst&#232;me Windows 32 bits ajouter le chemin de la biblioth&#232;que: 
<pre>-Djava.library.path=.;lib;lib/windows/x86 
</pre> Notez que si vous utilisez un syst&#232;me Windows 64 bits modifier le chemin de la biblioth&#232;que 
pour: <pre>-Djava.library.path=.;lib;lib/windows/x64
</pre>
  </li>

  <li>En option, s&#233;lectionnez l'onglet "Common", la section"Display in favorites menu",
         cochez les cases &#224; c&#244;t&#233; de "Run" et "Debug"</li>
    
    <li>Si vous souhaitez cr&#233;er des objectifs pour  rendre facile l'ex&#233;cution de PanelPro et AllTests, r&#233;p&#233;tez les 
		 &#233;tapes ci-dessus
         pour cr&#233;er un nouveau "Java Application"
         sauf sp&#233;cification "apps.PanelPro.PanelPro" et
         "apps.tests.AllTest" respectivement..</li>  
        
    <li>Cliquez sur "Apply" puis "Close" (Vous pouvez cliquer sur "Run" &#224; ce stade, mais
         nous avons un peu plus &#224; faire</li>
        
    <li>Vous devriez maintenant &#234;tre de retour &#224; votre vue du navigateur habituel Eclipse,
         o&#249; la plupart des travaux de d&#233;veloppement se font. Pour voir notamment
         java, d&#233;veloppez le dossier "java" &#224; gauche, puis
         le dossier "src", naviguer vers le fichier que vous souhaitez. 
        
    <li>Pour ex&#233;cuter DecoderPro, s&#233;lectionnez la rubrique "Run History" dans le menu "Run" . Une fois que vous avez fait 
	cela une fois, il vous suffit de cliquer sur l'ic&#244;ne "Run" dans la barre d'outils pour relancer le dernier programme.
        
    </ol>
    
	<a name="javacc"></a>
    <H2>Installation de JavaCC Plugin ( Comme alternative &#224; ex&#233;cuter Ant Build
			proc&#233;d&#233; ci-dessus )</h2>

	Au lieu d'utliser la consruction ant porur pour remplir le r&#233;pertoire "tmp", vous pouvez, 
	installer le plugin JavaCC. Voici les &#233;tapres:
	<ol>
			<li>T&#233;l&#233;chargez le plugin Eclipse JavaCC suivant les instructions 
					trouv&#233;es ici: <a href="http://eclipse-javacc.sourceforge.net">http://eclipse-javacc.sourceforge.net</a>
			<li>Apr&#232;s red&#233;marrage d'Eclipse, clic,droit sur le r&#233;pertoire java
					dans Project Explorer ou Navigator et s&#233;lectionnez JavaCC Options:
			<li>Sur l'onglet JavaCC Options, entrez le r&#233;pertoire de sortie a &#234;tre
					java/tmp/jmri/jmris/srcp/parser
			<li>Sur la page options JavaCC, entrez le r&#233;pertoire de sortie a &#234;tre
					java/tmp/jmri/jmris/srcp/parser
			<li>Confirmez que le" Java Build Path" inclut le r&#233;pertoire tmp
						( voir Propri&#233;t&#233;s Projet )
	<ol>

<	a name="push"></a>
	<h2>Pousser des changements dans votre branche GitHub</h2>
	
	La pratique standard pour obtenir que vos changements soient inclus dans Le code du r&#233;f&#233;rentiel princial JMRI  
	est de les proposer p&#233;riodiquement dans votre r&#233;pertoire local 
	puis lorsque vous &#234;tes pr&#234;t &#224; publier, proposez" toute une s&#233;rie de changements surle 
	r&#233;pertoire vous appartenant &#224; GitHub et finalement 
	demandez que quelqu'un mettent vos changements dans le r&#233;f&#233;rentiel principal JMRI
 	Voir:
	<a href="GitFAQ.shtml">JMRI: Git FAQ</a> "Param&#233;trage d'un environnement Git 
	pour les D&#233;veloppeurs JMRI" pour plus d'information.

	<p>Il est &#233;galement une bonne pratique de "tirer" tous les changements r&#233;cents 
			du principal r&#233;f&#233;rentiel JMRI avant d'effectuer vos propositions. Apr&#232;s un 
			"pull" de votre espace de travail et, &#233;ventuellement, votre d&#233;p&#244;t GitHub
			&#224; distance sera en synchronisation avec le principal r&#233;f&#233;rentiel JMRI. Pour effectuer
	 		un «pull», s&#233;lectionnez votre projet, le "Team" puis "Pull" dans le menu. </P>

	<pW>Si vous voulez voir quels fichiers vont &#234;tre modifi&#233;s avant 
			le "Pull" vous pouvez usitiliser la fonctionnalit&#233; "Team Synchronizing". Pour le faire
			clic-droit sur votre projet, le "Team Synchronizing" puis "Synchronise Wokspace"</p>

	<p>Pouss&#233;e vers votre branche GitHub:
	<ul>	
			<li>Premi&#232;rement, soumettez votre changement sur le r&#233;pertoire sur votre 
				ordinateur.
			<li>Pour soumettre un jeu de changement, clic-droit sur le projet auquel
				vous voulez soumettre; et s&#233;lectionner "Team" suivi par "Commit". Entrez un 
				message de soumission et s&#233;lectionn&#233;s le fichier ou vous voulez soumettre.<p>

			<li>Ensuite "push" un jeu de changement depuis votre r&#233;pertoire local que vos
					voulez soumissionner, et s&#233;lectionnez "Team" suivit par "Commit". Entrer un 
					messages et s&#233;lectionner les fichiers que vouis voulez soumisionner.<p>
 			<li>Ensuite, "push" un jeu de changements depuis votre r&#233;pertoire local vers
					votre r&#233;pertoire sir GitHub ( vous faites ceci pour que les autres puissent y acc&#233;der et
					r&#233;cup&#233;rer pour l'inclusion dans JMRI)
					<p>
							Avant que vous puissiez poussez vos changement vers GitHub pour lz premi&#232;re fois,
							vous devez cr&#233;er votre <a href="gitdeveloper.shtml#repo">propre r&#233;pertoire Git Hub</a>
							(  que vous avez fait ci-dessus ) et "fork" le r&#233;f&#233;rentiel JMRI.	
							Connectez-vous &#224; votre compte &#224; <a href="https://github.com/">GitHub.com</a> et naviquez ensuite dans le
							r&#233;pertoire JMRI  <a href="https://github.com/JMRI/JMRI">https://github.com/JMRI/JMRI</a>
							Dans le coin sup&#233;rieure Droit de la page, vous trouverez un bouton
							libel&#233; "Fork". Appuyez sur ce bouton pour cr&#233;er votre propre r&#233;pertoire source JMRI
					</P>		
					<P>Pour pousser dans votre R&#233;pertoire gITμhB, s&#233;lectionnez encore "Team et ensuite
					 		"Remote" pius "Configure puish ro Upstream". Dans la fen&#234;tre 'Cobfigure Puss",
							cliquezsur "Push URIs" et ensuite le bouton "Add". dans la fen&#234;tre "New URI, entrez
							l'URL de votre R&#233;pertoire GitHub ainsi que votre nom d'utilisateur et mot de passe.
							Apr&#232;s appuyez sur "Finish" la fen&#234;tre "Configure Push" devrait ressembler &#224; l'image
							ci-dessous:
							<a href="images/EclipseConfigurePush.png">
							<img src="images/EclipseConfigurePush.png" width="350" height="322" alt="Eclipse Error pane"></a>
					<p>Presser soit le bouton "Save and Push" ou "Save". Plus tard quand 
							vous voudrez pousser de nouveau changements dans votr r&#233;pertoire sur GitHub,
							vous pourrez simplement les soummisionner comme d&#233;crit ci-dessus, et ensuite utliser
							l'ic&#244;ne Push sur la fen&#234;tre de Synchronisation0</p>
			<li>Finalement, soumettre un "Pull Request" &#224; un r&#233;f&#233;rentiel principal de code JMRI sur 
					le site web Git HuB
					<p>
 							Pour faire ceci, d&#233;marrer par vous identifier sur <a href="http://github.com">GitHub
								web site</a>, s&#233;lecion de votre r&#233;pertoire	et cliquer le <a href="gitdeveloper.shtml#pull"> bouton 
								Pull Request</a>. Pour plus d'infon voir les <a href="gitdeveloper.shtml#pull">instructions
								d&#233;velopp&#233;es,</a>
					</p>

	</ul>

	<a name="errors"></a>
	<H2>Erreurs de Compilation et Avertissements</H2>

	La configuration par d&#233;faut du Compilateur Eclipse g&#233;n&#232;re de nombreux avertissements inutiles.
	Vous pouvez ajuster les avertissements pour les faire correspondre aux captures d'&#233;cran
	ci-dessous en allant &#224; Window-> Preferences et s&#233;lectionnez "Java-> Complier-> Errors/Warnings" 
	
	<p>
	<img src="images/ErrorsWarningsCodeStyle.png"><img src="images/ErrorsWarningsCodeStyle.png" width="413" height="342" alt="Eclipse 
	Error pane"></a>
	</p>
	<p>
	<img src="images/ErrorsWarningsPotential.png"><img src="images/ErrorsWarningsPotential.png" width="424" height="500" alt="Eclipse 
	 	Error pane"></a>
	</p>
	<p>
	<img src="images/ErrorsWarningsName.png"><img src="images/ErrorsWarningsName.png" width="413" height="360" alt="Eclipse Error 
	pane"></a>
	</p>
	<p>
	<img src="images/ErrorsWarningsUnnecessary.png"><img src="images/ErrorsWarningsUnnecessary.png" width="413" height="502" 
	alt="Eclipse Error pane"></a>
	</p>
	<p>
	<img src="images/ErrorsWarningsAnnotations.png"><img src="images/ErrorsWarningsAnnotations.png" width="423" height="500" 
	alt="Eclipse Error pane"></a>
	</p>

<!--#include virtual="/Footer" -->

      </div>
      <!-- closes #mainContent-->
    <!-- closes #mBody-->

</body>
</html>
