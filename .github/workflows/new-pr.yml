name: New PR

permissions:
  pull-requests: write
  issues: write
  contents: read

on:
  pull_request_target:
    types: [opened, reopened, labeled, unlabeled, synchronize]

jobs:
  check-pr:
    runs-on: ubuntu-latest

    env:
      PR_LABEL: 'New PR'
      BLOCK_HOURS: '0.25'

    steps:
      - name: Authenticate gh CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth setup-git

      - name: Evaluate PR age and manage label
        run: |
          set -euo pipefail

          pr_number="${{ github.event.pull_request.number }}"
          created_at="$(gh pr view "$pr_number" --json createdAt --jq '.createdAt')"
          label_name="${PR_LABEL}"

          now=$(date -u +%s)
          created=$(date -u -d "$created_at" +%s)
          age_hours=$(python3 -c "print(round((${now} - ${created}) / 3600, 2))")
          echo "‚ÑπÔ∏è PR #$pr_number is ${age_hours}h old."

          labels="$(gh pr view "$pr_number" --json labels --jq '.labels[].name')"
          should_block=$(python3 -c "print(float(${age_hours}) <= float(${BLOCK_HOURS}))")
          should_remove=$(python3 -c "print(float(${age_hours}) > float(${BLOCK_HOURS}))")

          if [ "$should_block" = "True" ]; then
            if ! grep -qx "$label_name" <<< "$labels"; then
              echo "üîñ Adding label '$label_name'."
              gh issue edit "$pr_number" --add-label "$label_name"
            fi
          fi

          if [ "$should_remove" = "True" ]; then
            if grep -qx "$label_name" <<< "$labels"; then
              echo "üîñ Removing label '$label_name'."
              gh issue edit "$pr_number" --remove-label "$label_name"
            fi
          fi

          if gh pr view "$pr_number" --json labels --jq '.labels[].name' | grep -qx "$label_name"; then
            echo "‚ùå This PR is labeled '$label_name' and cannot be merged until ${BLOCK_HOURS}h after creation."
            exit 1
          else
            echo "‚úÖ PR is mergeable."
          fi
