<!DOCTYPE html>
<html lang="en">

<head>
<title>Installing JMRI on Raspbian/Linux</title>
    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->
<div id="mBody">
<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<h1>Installing JMRI on Raspbian</h1>

<ul class="snav"><!-- TOC -->
	<li><a href="#prebuilt_image">PreBuilt Image</a>
	<li><a href="#installation">Installation</a>
	<li><a href="#startup">Starting JMRI</a>
	<li><a href="#notes">Notes</a>
</ul>

<p class="important">These instructions describe the installation of JMRI
on a Raspberry Pi system running the Raspbian OS. There's also a Install help page for <a href="Linux.shtml">other flavors of Linux</a>.</p>
<p>The Raspberry Pi is becoming increasingly popular as a small and cheap computer.
Raspbian is based on Debian and is recognized as being a very user friendly distribution.<br>
JMRI installation consists of two stages: install Java and install JMRI.

<a id="prebuilt_image"></a>
<h2>Pre-Built Image Available</h2>
<ul>
  <li>A free RaspberryPi image, completely configured with JMRI, auto-identify logic for many popular DCC systems
  and its own wifi access point, is available for download <a href="https://mstevetodd.com/rpi" target=_new>[here]</a>.
</ul> 

<a id="installation"></a>
<h2>Installation Steps</h2>

<ol>
	<li>Determine if your system software supports JMRI:
	<a name="sysreq"></a><h3>JMRI System Requirements</h3>
	<p>These instructions deal with installing
	JMRI on a <a href="https://www.raspberrypi.org/products/raspberry-pi-2-model-b/">Raspberry Pi model 2 B</a> running the latest Raspbian OS.</p>
	<p>We describe how to install the components
	needed for JMRI to run, followed by how to install JMRI itself.
	Before starting the install, make sure your Pi has a working
	internet connection (for downloads etc.) via either Wifi or a UTP cable to your Router.

	<h4>Raspbian 4.14 Stretch</h4>
	<p>A fresh JMRI install on a Raspberry Pi 3 Model B+ running Stretch is straightforward, as this OS includes Java 1.8 and the JMRI Linux install is ready for Arm. Follow the steps outlined below (skip steps 3 and 4).</p>
	
	<h4>Raspbian 4.1 Jessy</h4>
	<p>A fresh JMRI install on a Raspberry Pi B 2 running Jessy is straightforward, as this OS includes Java 1.8 and the JMRI Linux install is ready for Arm. Follow the steps outlined below (skip steps 3 and 4).</p>
	
	<h4>Raspbian 3.18 Wheezy</h4>
	<p>Tested on: Raspberry Pi Model B with 512Mb memory and a SanDisk 8Gb SDHC card.<br>
	Wheezy might run on a Pi A or B+, but OpenJDK is said to be a lot slower then the JDK shipping with Jessy. Check your version of Java in step 3.
	</p>
	
	<p>To install the OS on a RasPi, follow these steps: <a href="#suzie">[1]</a>
	<ol>
	<li>Format an SD card in FAT32 using the utility from <a href="https://www.sdcard.org/downloads/formatter_4/">SD Card foundation</a>. 
	<li>Unzip NOOBS image to the SD card (using another computer) and insert the SD card in the Pi's SD slot. 
	<li>Boot Pi 2 on the SD card and install Raspbian OS (the first option in the list). 
	<li>Enable SSH in the raspi-config. 
	<li>Change host name in the raspi-config. 
	<li>Enable booting in to GUI as user Pi 
	</ol>
	
	<p>More details on installing Raspbian can be found at the 
	<a href="https://www.raspberrypi.org/downloads/raspbian/">Raspberry Download site</a>. Beginners are advised to use the <a href="https://www.raspberrypi.org/downloads/noobs/">NOOBS</a> install.</p>
	
	<p>Once the OS is installed on your Pi, update the system. From the LXTerminal type
	<code>sudo apt-get upgrade</code> and hit Enter.
	Some messages will appear and when the prompt returns, type 
	<code>sudo apt-get update</code>. 
	The update command might take a few minutes to complete. This insures you have the latest version of Raspbian and any included software.<br>
	Since Java is already installed, the next step is to install JMRI.</p></li>
		
  <li>Depending on how your Pi is set up, you might need to install <strong>Java</strong>:
	<p>For current JMRI releases (version 3.10 and up) you need "Java 8" or "Java 1.8". Raspbian Jessy already has a suitable Java Runtime (Oracle 1.8) as part of the distribution.
	<p>To check which Java version is installed, open LXTerminal window and type 'java -version'. This will return something like:
	<pre>Java 1.x</pre>
	<p>If it is not at least 1.8, or if you get a "java: not found" error, you will need to install Java from the repositories or <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">java.com</a>.</p>
  <p>[please report exact instructions to update Java]</p></li>

  <li>Get the JMRI software...
	<p><a href="http://jmri.org/download/index.shtml">Download JMRI</a> (choose the Linux edition).</p></li>

  <li>...and install it.
	<p>
	Uncompress/untar the file your download. Double click on the .tgz file to open the Tar, then click Extract. This will create a new "JMRI" folder.
	<p class="note">Each JMRI release is an independent set of files: It's intended to be used as a whole. 
	Each release provides new files, and sometimes removes old files. 
	You should therefore not expand the download into the same place as an existing JMRI installation. 
	
	Instead, expand it into a separate location, 
	backup any user created files in the JMRI directory and delete the JMRI directory. 
	Then move the extracted JMRI directory and its contents in to it's final destination, 
	completely replacing any previous version of JMRI.
	<p>
	To install, you just have to move that new JMRI folder to where you want it on your computer.
	The latest test releases of JMRI include support for the ARM v7 processor, 
	so extracting is all you need to do. <a href="#dave">[2]</a>
	
	<p>JMRI 3.10.1 did not, which required some startup script changes as the Pi2 runs an ARM7 processor. An installation script
	was written by Matthew Macdonald-Wallace to modify certain libraries so that JMRI would run.
	He provides a <a href="https://github.com/proffalken/JMR-Pi">Pi install script</a> on GitHub.</p>
	</li>

    <li><a id="rxtx"></a>
	Copy RxTx
	<p>Matt Harris reported July 2015: The comms libraries fix is no longer necessary with JMRI development releases 3.11.1 and up as the Linux start-up script has been updated to better detect the ARM architecture. Move on to step 7.</p> 
	
	<p>The RxTx library used to be a problem requiring modifications to enable JMRI to run. JMRI requires a package called RXTXcomm.
	The version that was included with JMRI 3.5 and earlier did not work on the Raspberry Pi.
	So, if you are using or updating a version of JMRI prior to 3.8 then the RxTx library in JMRI must be
 replaced by the original. There is a script to do this in the JMRI Users group "Files" area if you wish to run JMRI
	3.8 on Raspbian 3.18 Wheezy. Since JMRI version 3.8 this is no longer required.</p>
	
	<p>The following script will fix the PanelPro etc. comms libraries not working due to incorrectly recognized processor. Type:
    <div class="wide">
        <code>
            sudo cp -v /opt/JMRI/lib/linux/armv6l/* /opt/JMRI/lib/linux/armv7l/
        </code>
    </div>
		Note that this step is no longer required on a fresh install of JMRI 3.8 and up.
	</li>

  <li>Installation is complete.</li>
</ol>

<a id="startup"></a><h2>Starting JMRI</h2>
<p>Connect your computer to your <a
   href="../help/en/html/hardware/index.shtml">Command Station hardware</a>.
  
<p>To start JMRI using the CLI open LXTerminal and enter:
<pre>cd /opt/JMRI</pre> followed by either
<pre>./PanelPro 
./DecoderPro</pre>
<p>Using the GUI: To create a complete set of Desktop icons that you can just double-click, Dan M. wrote a <a href="support/Pi_Icons.tar.gz">set of desktop startup icons</a> for the Pi. Again, double click on the .tar.gz file to open the Tar, then click extract and copy the separate startup files you wish to your desktop folder; change the path in these text files to match your JMRI install).</p>
<p>After a clean install, the JMRI Preferences pane will open. Select your Connection and USB port, click "Save"  and restart.</p>
More on this on the <a href="../help/en/html/setup/index.shtml">JMRI Setup help page</a>.

<h3>Autostart</h3>
<p>You could have your Pi automatically open DecoderPro and start an "xrdp" Remote Desktop at startup if e.g. the Pi is mounted under your layout and runs a so called "headless mode". See Sherman's blog on <br>
<a href="http://www.nscale.net/forums/showthread.php?37250-JMRI-on-a-Raspberry-Pi-2">Nscale.net forum JMRI on a Pi2</a> for instructions.</p>

<h3>Using WiThrottle zeroconfig</h3>
<p>Disable IPv6 for the network interfaces (with IPv6 turned on, the WiThrottle window will display <code>127.0.0.1</code>. After turning off IPv6 the window will display the IP address of your adapter. iPhone picks up the WiThrottle server when set to <em>automatic configuration</em> and no longer flashes the <code>network disconnected</code> error. Rebooting the Pi, restarting DecoderPro (including "Faceless") or restarting the WiThrottle app gave no issues in our testing).
<p>Open a terminal window and enter <code>sudo leafpad</code>, then in Leafpad open the file:
<code>edit /etc/sysctl.conf</code> and add these parameters to the bottom of the file: 
<code class="block">
net.ipv6.conf.all.disable_ipv6 = 1 
net.ipv6.conf.default.disable_ipv6 = 1 
net.ipv6.conf.lo.disable_ipv6 = 1 
net.ipv6.conf.eth0.disable_ipv6 = 1
</code>
<p>Note: you need <code>root</code> access to edit this file.</p>
<p>Be sure to add extra lines for other network interfaces you want to disable ipv6 for.<br>
After editing <code>sysctl.conf</code>, run <code>sysctl -p</code> to activate changes (or reboot your Pi). <a href="#scott">[3]</a></p>

<h3>Turn off your Pi</h3>
Anytime you need to shutdown the Raspberry Pi, use the line command:
<code>sudo poweroff</code>
and then switch the power off once the shutdown is complete. <a href="#david">[4]</a>

<h3>Turn off your Pi remotely from your 'phone</h3>
E.g., on Android install the free SSH button app. Configure it to send the command <code>sudo shutdown -h now</code> using the
Pi's IP address and your username and password for SSH. Switch the power off once the shutdown is complete. You must enable SSH 
on the PI for this to work. See <code>raspi-config</code>

<a id="notes"></a>
<h2>Notes</h2>

<h3>Computer Interfaces</h3>
<p>Use an external power supply for the 
	interface, because the Pi2's USB ports can only supply about 100mA of current.
	<dl>
	<dt>Digitrax PR3</dt>
	<dd>The PR3 is reported to work reliably (Dan M.).</dd>

	<dt>LocoBuffer USB</dt>
	<dd>For connecting to LocoNet, we recommend you use Raspbian Jessy or later with the LocoBuffer-USB.</dd>

	<dt>MERG CBUS</dt>
	<dd>The MERG CANUSB interface is detected automatically (Matt H.).</dd>
	
	<dt>SPROG II and SPROG 3</dt>
	<dd>Check in /dev or dmesg for the device that is created when connecting. This is the device you should connect to in
	the JMRI connection.</dd>
	
	<dt>Pi-SPROG One</dt>
	<dd>Connects directly to the Pi GPIO pins (unused pins passed through). Requires external power supply. With a Pi 3
	Model B (recommended) you can use the on-board WiFi an AP (Access Point) mode to create a wireless command station.
	See the <a href="https://www.sprog-dcc.co.uk">SPROG DCC website</a> for details of creating a suitable OS image. </dd>
	
	<dt>XPressNet</dt>
	<dd>[please report your results]</dd>
	
	<dt>GPIO</dt>
	<dd>Your login account should have root permissions to access the GPIO Pi interface (the 40 pins on a Pi board).<br>
	More details on our <a href="../help/en/html/hardware/pi/index.shtml">Raspberry Pi via GPIO</a> hardware Help page.</dd>
  </dl>
  <p>The JMRI <a href="http://jmri.org/help/en/html/hardware/index.shtml">Hardware help page</a> lists the various types of layout equipment that JMRI can connect to, and gives links to instruction pages. Go there next to complete your setup.</p>
  
<h3>Errors</h3>
<p>If you have any problems, get back to the <a href="https://groups.io/g/jmriusers">JMRI users</a> Groups.io.</p>

<a name="documentation"></a><h2>Documentation</h2>
<h3>JMRI Help</h3>
<a href="https://groups.io/g/jmriusers/files/Raspberry%20Pi">JMRI Users Raspberry Pi Files area (member login required)</a>
<h3>Third Party info</h3>
<a href="https://www.raspberrypi.org/help/">Raspberrypi.org online Help</a>.

<p>(Rev 4.2, updated 21 Jan 2016 based on tips from [1] <a id="suzie">Suzie Tall</a>, [2] <a id="dave">Dave Sand</a>,
[3] <a id="scott">Scott Jay</a> and [4] <a id="david">David McMorran</a>).
</p>

    <!--#include virtual="/Footer.shtml" -->
    </div><!-- closes #mainContent-->
  </div> <!-- closes #mBody, started in sidebar -->
  <script src="/js/main.js"></script>
</body>
</html>
