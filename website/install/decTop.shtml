<!DOCTYPE html>
<html lang="en">

<head>
    <title>
 	Running JMRI on a decTOP small form factor computer
    </title>
    <meta content="Bob Jacobsen" name="Author">
    <meta name="keywords" content="JMRI decTOP SFF Ubuntu Xubuntu">
    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->
<div id="mBody">
<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

	    <!-- ------------- -->
	    <!-- Page Contents --> <!-- Required -->
	    <!-- ------------- -->

<h1>Running JMRI on a decTOP small form factor computer</h1>

<a href="images/decTOP.jpg"/>
<img src="images/decTOP.jpg" width="175" height="120" align="right" alt="decTop image"/>
</a>
The decTOP is a "small form factor computer" (SFF)
that provides a complete system in a small, low-cost, rugged box.
<p>
The goal of our project is to see if it would make a good JMRI
layout controller, suitable for e.g. driving a couple modules or a medium size
layout. 
<p>
As an example, imagine a large modular layout at a show.  
A number of clubs bring their modules together to create the overall 
layout. A common LocoNet backbone can be shared by all, but the addresses
of devices on individual modules have to be carefully managed.  It doesn't 
work if both the Northville and Southville clubs bring modules that are
configured to use address 120.
<p>
<a href="images/modulecontrols.gif">
<img src="images/modulecontrols.gif" align="right" width="479" height="220"></a><br/>
If sufficiently low cost &amp; reliable hardware was available,
JMRI could resolve this, 
without having to manage huge numbers of addresses or reconfigure lots of hardware.
Each club could put a small computer running a JMRI application as the gateway
between the common LocoNet (LayoutNet) and a LocoNet that only runs to 
their modules (LocalNet).  JMRI would then translate addresses as 
LocoNet messages move back and forth, so that address 120 on each of the LocalNet modular
sections becomes 220 and 430 on the global LayoutNet. At the same time, JMRI could continue
to provide local control panes, signaling and automation, and all the other things.
<p>
All we need to make something like this work is sufficiently cheap and robust
hardware, that can make two layout connections.
<p>
The 
<a href="http://www.dataevolution.com/dectop%20info%202.htm">decTop</a> 
small form-factor computer
seems to meet the cheap and rugged criteria, 
and seems to have enough horsepower:
	<ul>
	<li>Processor subsystem -- AMD Geode GX processor, with CS5535 companion device
	<li>Memory -- 128 MB DDR SDRAM, upgradable
	<li>Hard drive -- internal 10 GB 2.5-inch drive
	<li>Display interface -- VGA 1600 x 1200 resolution, at 85 Hz
	<li>Four USB 1.1 ports (2 front, 2 rear)
	<li>LAN interface -- 10/100 Mbps Ethernet (via Ethernet-USB adapter that uses one port)
	<li>Modem -- internal 56 Kbps ITU v.92 Fax/Modem
	<li>Sound -- AC'97 audio with stereo in/out jacks
	<li>Size -- 8.5 x 5.5 x 2.5 inches
	<li>Weight -- approx. 3 pounds 
	<li>Power -- about 8 watts, separate power adapter
	<li>Software -- none, but can run several forms of Linux and Java
	</ul>
<a href="http://pclab.nectec.or.th/wiki/images/7/70/Amd-pic-setup.jpg">
<img src="http://pclab.nectec.or.th/wiki/images/7/70/Amd-pic-setup.jpg" align="right" height="115" width="175" alt="System view"/></a>
You can get one for
about $99 (plus an exorbitant $40 for reasonable-speed shipping) 
from the 
<a href="https://store.dataevolution.com/ProductDetails.asp?ProductCode=DT%2D7001">Data Evolution online store</a> 
(February 2008).
It comes with a USB mouse, USB keyboard (poor) and the Ethernet adapter.
You also need to
provide your own monitor and either a USB CD drive or USB flash drive
for use during (at least) setup. 
<p>
You'll also need 
USB adapter(s) to connect to your layout.  There are four 
USB ports available for use with a LocoBuffer USB, LI-USB or
<a href="../help/en/html/hardware/USBtoSerial.shtml">USB-to-Serial adapter</a>. Note that normally three of those ports are
used for the keyboard, mouse and Ethernet adapter, leaving one available
for a layout connection.

<p>
The decTOP was previously known as the 
"<a href="http://www.amd.com/us-en/ConnectivitySolutions/ProductInformation/0,,50_2330_12264_12262,00.html">AMD PIC</a>".
More information is available under that name.

<h2>Set Up</h2>
This section describes how we got our test machine 
up and running with Linux Xubuntu 7.10, Java 1.6 and JMRI 2.1.3.

<h3>Preparations</h3>
We followed 
<a href="http://www.entropicblur.com/dectop/guide.html">this page of instructions</a>,
which is written for installation via Xubuntu.
(See <a href="#links">Links section</a> below for other approaches)
It's really helpful to print the instructions out so you can make 
notes as you go along.
<p>
Those instructions describe using Linux to 
create the bootable USB stick that's used to load the decTOP.
There are 
<a href="http://jsco.org/dectop/">similar instructions for Windows</a>.
We're actually using a MacBook Pro and VMWare, 
which in turn provided a Xubuntu 7.10 machine for creating the 
USB stick.  There are some more 
details on that at the
<a href="#mac">end of this page</a>.

<p>
You'll also need an Ethernet connection with DHCP to connect
the initialized machine to the Internet to download
updates. Make sure it's plugged in and active!

<h3>Installing Linux</h3>

Follow the 
<a href="http://www.entropicblur.com/dectop/guide.html">directions to install Xubuntu 7.10</a>.

<p>
When asked if you want to "detect keyboard", say "No", because the selection
process takes forever. After saying no, select "US" twice (with one the included keyboard),
and you'll be all set.
<P>
When asked for a network name, give it something simple
and unique. We used "decTOP".
<p>
When asked to partition disks, 
select the second option, all files in one partition, then select "yes"
for the next options
<p>
When asked to create a user account, we used:</br>
User long name: JMRI User<br/>
Short name: jmri<br/>
Pwd: jmripwd<br/>
<p>
Do the kernel install as described in the 
instructions.
This requires network access via the Ethernet adapter,
which you connected above.
<p>
There was a LONG delay at "Configuring language-pack-en-base 1%".
Just wait for it to complete.
<p>
When asked what to install, just select Xubuntu desktop.
<p>
At this point, you should be able to just reboot
into single user mode to continue the install.  In our
case, our LCD display came up full of pretty colors.
The decTOP video setup is a little fussy, and doesn't
always come up exactly right with LCD panels.
See our page on
<a href="decTOPvideo.shtml">video problems</a> 
for more info.  In our case, we just attached a borrowed CRT monitor and it
came right up, though slowly.
<p>
Once Linux was up and running, we logged on with the
account created earlier.  Everything seemed to work.
<p>
To get the LCD monitor working, we created a setting
with the right resolution and frame rate in the "Screens and Graphics"
settings, then selected it in the "Display Settings" (both 
in the "Applications" - "Settings" menu). Once that was done,
we could plug the LCD monitor back in and it worked fine.

<h3>Installing Updates</h3>

Next, we allowed Linux to update itself to current levels.
To do this, pull down "Applications" at the top left of the screen,
then "System", then "Update Manager".  It took a few minutes to 
check for updates.  We told it to install everything, which took about 
an hour to download and install.

<h3>Installing Java 1.6</h3>

Lore has it that it's better to install Sun's
Software Development Kit (SDK) version of Java
rather than just the Java Runtime Environment (JRE).
<p>
Pull down "Applications" at the top left of the screen,
then "System", then "Synaptic Package Manager".
<p>
Click "Search", 
enter "sun-java" into the search box to find the SDK package, 
and then install it.  It will bring along a couple other packages too.

<h3>Installing JMRI</h3>

We did this first to make sure it will actually come up at
all, before spending time on RXTX.
<p>

Downloading and installing JMRI 2.1.3 went OK.
We did some simple tests with the "LocoNet Simulator" preference
setting at this point.  Startup was very slow, about 35 seconds
from click to display of the main window, but the program seemed
fast enough once it was running.

<h3>Installing RXTX communication library</h3>

The 
<a href="Ubuntu.shtml#rxtx">instructions for installing RXTX</a>
on the 
<a href="Ubuntu.shtml">JMRI Ubuntu page</a>
worked well.  
<p>
The install location was "/usr/lib/jvm/java-6-sun-1.6.0.03".

<h3>Installing drivers for USB-serial adapters</h3>

Originally, we'd thought that we'd have to 
spend some time installing drivers for our USB-serial adapter
and 
<a href="http://www.rr-cirkits.com">LocoBuffer-USB</a>.
That wasn't needed, however.  They just plugged in and worked.

<p>
We did have to make a minor edit
to the DecoderPro startup scripts, but that change 
will be available by default in JMRI 2.1.4.

<h3>Success!</h3>
<a href="images/DecTopSuccess.jpg">
<img src="images/DecTopSuccess.jpg" height="240" width="320" alt="JMRI on decTOP"/></a>
<br/>
The decTOP system works, and runs JMRI quite well.
<p>
As a general purpose computer, however, it's very slow. More memory would likely help.

<h2>More information</h2>

The rest of this page contains various info that 
might be useful.

<a id="links">
<h3>Links</h3></a>

<h4>Data Evolution</h4>
<a href="http://www.dataevolution.com/dectop%20info%202.htm">Vendor page</a><br>
<a href="https://store.dataevolution.com/ProductDetails.asp?ProductCode=DT%2D7001">Product listing</a><br/>
<a href="https://store.dataevolution.com/ProductDetails.asp?ProductCode=DT%2D7001&Show=TechSpecs">Specifications</a><br/>

<h4>Hardware Info</h4>
<a href="http://pair.offshore.ai/pic/">Photos of PIC internals</a>

<p>
<a href="http://www.lesswatts.org/projects/acpi/">ACPI power saving</a>

<h4>Other Software Install Instructions</h4>

<a href="http://jsco.org/dectop/">Ubuntu 6.06</a> (no audio?)<br>
<a href="http://librenix.com/?inode=11001">Another Ubuntu 6.06</a><br>
These recommend sticking with Ubuntu 6.06 unless the memory has been updated.
Our test used Xubuntu 7.10, a varient with a smaller memory footprint.
<p>
Instructions to
<a href="http://www.entropicblur.com/dectop/guide.html">install Xubuntu 7.10</a>,
recommends 256MB RAM for Ubuntu or Kubuntu.
(<a href="http://www.entropicblur.com/dectop/guide704.html">Earlier 7.04 install guide</a>)

<a id="mac"></a>
<h3>Using Mac OS X</h3>

The bootable USB stick for this project was actually created using
an Apple MacBook Pro running Mac OS X.  In turn, that was running
VMWare, which hosted a copy of Ubuntu Linux.
<p>
The Linux version used was the Ubuntu appliance from 
<a href="http://bagside.com/bagvapp/">http://bagside.com/bagvapp/</a>
(Alternately, download and install the "Xubuntu 7.10 Tribe 2" VMWare appliance 
from that same location; it's a little smaller and faster)
<p>
USB devices connect to the VMware machine if it has focus when the
flash drive is plugged in.
Make sure VMware is at the front on your screen before plugging it in.
In our case, it mounted as /media/KINGSTON, specifically:
<pre>
/etc/mtab:/dev/sdb1 /media/KINGSTON vfat rw,nosuid,nodev,shortname=mixed,uid=1000,utf8,umask=077,usefree 0 0
</pre>
<p>
After that, the process just went through as described
in the Linux instructions.

<h3>Java</h3>

<a href="http://www.linuxquestions.org/questions/linux-newbie-8/java-runtime-enviroment-plugin-wont-work-with-firefox-in-xubuntu-616663/:">Post recommending Java 1.5</a>
<p>
<a href="https://jdk-distros.dev.java.net/ubuntu.html">More on Java distributions for Linux</a>.

<!--#include virtual="/Footer.shtml" -->
  </div> <!-- closes #mainContent-->
 </div> <!-- closes #mBody-->
<script src="/js/main.js"></script>
</body>
</html>
