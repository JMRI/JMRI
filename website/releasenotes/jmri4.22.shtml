<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
 <title>
 JMRI: Release Notes for 4.22
 </title>
    <meta name="author" content="Bob Jacobsen">
    <meta name="keywords" content="java model railroad JMRI 4.22 decoderpro panelpro loconet lenz nce easydcc dcc nmra">

    <!--#include virtual="/Style.shtml" -->

</head>

<body>
<!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <!--#include virtual="../download/Sidebar.shtml" -->
    <div id="mainContent">
      <h1>
      Release Notes for JMRI 4.22 release
      </h1>

    <p>Date: March 1, 2021</p>
    <p>From: Bob Jacobsen</p>
    <p>Subject: Production Release 4.22 of JMRI/DecoderPro is available for download.</p>

<!--
<p><b>This is a draft release note only; the download links do not yet work</b></p>
 -->

<p>We are very pleased to announce that the 4.21 series of JMRI test releases has resulted in a
version that's good enough to be recommended for general use, including by new users.
We're therefore making that version, "Production Release 4.22" available for download today.</p>

<h2>Notes:</h2>

<p><b>
JMRI is now only available under the
<a href="/COPYING">GNU General Public License</a>. For more information, please
see our
<a href="/copyright.shtml">copyright and licensing page</a>.</b></p>

<a id="update" name="update"></a>
<h3>Update From Older JMRI Versions</h3>


If you are currently using a version older than JMRI 4.20, please follow these instructions carefully:

<ol>
<li>Is your current version older than <a href="jmri4.12.shtml">JMRI 4.12</a>?
    If so, then update to <a href="jmri4.12.shtml">JMRI 4.12</a> first, and ensure everything works correctly: check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Store your configuration and panel files under a new name and use those from now on.
    Then continue with step 2.
    <p>
    If you are currently using JMRI 4.7.3 or earlier on Linux or macOS (Windows doesn't need this),
    then it's <u>very important</u>
    that you update to <a href="jmri4.12.shtml">JMRI 4.12</a> and
    carrying out the <a href="jmri4.12.shtml#migration">migration process described in the JMRI 4.12 release note</a>
    before updating to any later relese.
    </li>

<li>Is your current version older than <a href="jmri4.20.shtml">JMRI 4.20</a>?
    Then update to <a href="jmri4.20.shtml">JMRI 4.20</a> first, and ensure that works correctly (check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else
    Store your configuration and panel files under a new name and use those from now on.</li>

<li>You can then install this release.

</ol>

Following this multi-step order of updating via stable major releases safeguards you against possible migration issues
that can arise from skipping these versions.

<a id="problems" name="problems"></a>
<h3>Known problems with this release</h3>
<ul>
    <li><strong>Logix definitions that have more than 1 conditional will invoke the conditionals in the wrong sequence</strong>.
    This can lead to unpredictable results.  The affected releases are 4.21.5 thru 4.23.2.
    For people using Logix, this upgrade is NOT recommended.</li>
</ul>

<a id="warnings" name="warnings"></a>
<h3>New warnings for this production release:</h3>

<ul>
    <li><span class="since">Since <a href="jmri4.21,1.shtml">JMRI 4.21.1</a></span>
        The jmri.jmrix.SystemConnectionMemo class has become a jmri.SystemConnectionMemo
        interface and a jmri.jmrix.DefaultSystemConnectionMemo class. This may
        require changes to scripts.  If you have a script that references
        jmri.jmrix.SystemConnectionMemo, please change it to either
        jmri.SystemConnectionMemo or jmri.jmrix.DefaultSystemConnectionMemo
        (it's easier to have you just try the two than to explain which
        one will work in which case)
    </li>

    <li><span class="since">Since <a href="jmri4.21.1.shtml">JMRI 4.21.1</a></span>
        The way preferences are loaded at startup has been slightly
        modified.  There is no impact to JMRI applications, but Non-JMRI
        applications that are not derived from apps.Apps or apps.AppsBase
        but are using jmri.implementation.JmriConfigurationManager to load
        preferences will no longer see preferences if an error occurs.  To
        restore the old behavior, use apps.AppsConfigurationManager instead.
    </li>

</ul>

<h3>Older warnings</h3>

See the <a href="jmri4.20.shtml#warnings">JMRI 4.20 release note</a> for more warnings predating the 4.21 development series.
These may be relevant to you if you're updating from an earlier version.

<ul>

    <li><span class="since">Since <a href="jmri4.19.1.shtml">JMRI 4.19.1</a></span>
        The <code>getBeanByUserName</code> and <code>getBeanBySystemName</code>
        calls in the various <code>Manager</code> classes
        are no longer needed with Java 8 and have been deprecated for eventual
        removal.  Their replacements are
        <code>getByUserName</code> and <code>getBySystemName</code>
        respectively.
        If you use <code>getBeanByUserName</code> and <code>getBeanBySystemName</code>
        in script or Java code you've written, please
        switch to the new names.
    </li>

    <li><span class="since">Since <a href="jmri4.11.4.shtml">JMRI 4.11.4</a></span>
        There are issues with the Pi-SPROG One command station operation. A number of workarounds should be applied:
        <ul>
            <li>Do not turn on the track power until the power supply to the Pi-SPROG ONE is turned on</li>
            <li>Do not enable extra debugging through default.lcf, nor open the system console window</li>
            <li>Do not open the SPROG console window</li>
            <li>Disable power conversion (CV 29) in all locos</li>
            <li>If connecting via VNC (or similar), setup the screen layout before turning on the track power</li>
        </ul>
        Pi-SPROG One with version 2.4 or earlier firmware will cause a timeout after a track short circuit. A dialog box will
        open to inform the user of this. The track power will be turned off and must be turned on again using the power control.
    </li>

</ul>

<a id="download" name="download"></a>
<h2>Download links:</h2>

Please note that the download links in this and future JMRI releases link to
<a href="https://github.com/JMRI/JMRI/releases/">Github servers</a>.
People are welcome to distribute the download files further via other websites, etc.
If you want to check that you've received original, unmodified versions, please
check the files against the checksums shown below.

<div class="wide">
<ul>
<li>OS X / macOS: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.dmg">https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.dmg</a><br/>
  sha256: 55f9ac72f5452227a3949e363f9235f0d05e5a01d8d6224c90dc9dfbb87d0a0b </li>

<li>Windows: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.exe">https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.exe</a><br/>
   sha256: ac71bfa05a13994e87ab5ba10f379ed77a8a1b5aad137afb9415f0ec23d10d52</li>

<li>Linux: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.tgz">https://github.com/JMRI/JMRI/releases/download/v4.22/JMRI.4.22+R4c4384d74.tgz</a><br/>
   sha256: a63b8a9722efa4743fd5c6fddb881f1175154df700e75bb1658658a512fcfa45</li>
</ul>
</div>

<!--
Preliminary build files (not the final released files) can be found
on the
<a href="http://builds.jmri.org/jenkins/job/TestReleases/job/4.22/">CI project page</a>.
 -->

<!--
During development leading to the actual release, you can find test download files on the
<a href="http://builds.jmri.org/jenkins/job/Development/job/Packages/">continuous integration build page</a>.
These are development files, and might not be working at any particular time.</p>
 -->


<h2>Changes since <a href="jmri4.20.shtml">production release 4.20</a>:</h2>

<p>
This production version is made from test releases 4.21.1 through 4.21.5.  The
<a href="https://github.com/JMRI/JMRI/pulls?utf8=✓&q=is%3Apr+merged%3A%3E%3D2020-07-04">full list of changes</a>
in those is
<a href="https://github.com/JMRI/JMRI/pulls?utf8=✓&q=is%3Apr+merged%3A%3E%3D2020-07-04">available from our code repository</a>.


<!-- FROM 4.21.1 -->


    <h3>Hardware Support</h3>



        <h4>Acela CTI</h4>
            <ul>
                <li>Fixed issue unable to initialise adapter</li>
            </ul>

        <h4>CBUS</h4>
            <ul>
                <li>When the connection is lost to a GridConnect Serial Device ( eg. CANUSB4 losing power /
                Windows Sleep Modes ), JMRI will periodically attempt to reconnect to the device.</li>
                <li>Default Output Interval reduced to 100ms.</li>
                <li>CBUS now has its own trademark and is referred to as CBUS, not 'MERG CBUS'.</li>
                <li>CBUS RFID Reporters now act similar to other JMRI Reporters, ie with a timeout following the report.</li>
                <li>CBUS Reporters can set a Sensor to follow the active IDTag status, set via CBUS Reporter Table.</li>
                <li>CBUS Reporters will default to classic RFID ( 5 byte unique tags ), with option for in-development CANRC522 / CANRCOM format, set via CBUS Reporter Table.</li>
                <li>Refer to MERG section of this not for changes in JMRI support for MERG hardware.</li>
                <li>Restructured help pages to reflect split between MERG specific hardware and hardware agnostic CBUS features.</li>
                <li>
                    Andrew Crosland added a second current meter instance for SPROG Generation 5 hardware.
                </li>
                <li>
                    Corrected links to images on SPROG Generation 5 hardware help page.
                </li>
                <li>
                    Changed trademark recognition to &reg; for register trademarks, rather than &trade;.
                </li>
                <li>CBUS now has its own trademark and is referred to as CBUS, not 'MERG CBUS'.</li>
                <li>Refer to CBUS section of this not for changes in JMRI support for CBUS.</li>
                <li>Restructured help pages to reflect split between MERG specific hardware and hardware agnostic CBUS features.</li>
            </ul>

        <h4>C/MRI</h4>
            <ul>
                <li>CMRI SerialSensor updated to support multiple Character system name prefixes.</li>
            </ul>

        <h4>DCC++</h4>
            <ul>
                <li>Only send function refreshes if required (version < 3)</li>
            </ul>

        <h4>DCC-EX</h4>
            <ul>
                <li>messaging enhancements and cleanup, retry some failed messages</li>
                <li>allow user to define meters in DCC-EX that display in JMRI</li>
            </ul>

        <h4>DCC4pc</h4>
            <ul>
                <li>Improved System Name validation for Sensors and Reporters, must contain at least 1 number.</li>
            </ul>

        <a id="diy" name="diy"></a>
        <h4>Public Domain and DIY decoders</h4>
            <ul>
                <li>LocoIO programming using the Public_Domain_HDL_LocoIO decoder definition has been significantly
                  expanded. This update requires JMRI 4.21.2 or later. Because of the included improvements you are
                  advised to start with new Roster Entries for your LocoIO boards. Help files have been updated.</li>
            </ul>

        <h4>ESU</h4>
            <ul>
                <li>Improved System Name validation for Turnouts, Sensors and Reporters, must contain at least 1 number.</li>
                <li>Added "LokSound 5 micro E24 DCC" and "LokSound 5 micro KATO".</li>
                <li>Replaced incorrectly-named "LokPilot 5 micro DCC Next18" with "LokPilot 5 Micro Next18 DCC".</li>
            </ul>

        <h4>Internal</h4>
            <ul>
                <li>Sensor, Turnout, Light and Reporter Address ranges do not have to be fully numeric, and will be incremented using the final number in an address.<br>
                For example, a range can be created from "My Yard 77 Sensor 1" which would increment to "My Yard 77 Sensor 2"</li>
            </ul>

        <h4>IPOCSMR</h4>
            <ul>
                <li>Initial support added.</li>
                <li>Turnouts, Lights (on/off) and Sensors</li>
            </ul>

        <h4>LocoNet</h4>
            <ul>
                <li><a href="https://www.jmri.org/help/en/html/hardware/loconet/Digitrax.shtml#deviceBoardId">
                    Instructions</a> detailing how to change the Board ID (Board
                    Address) of certain Digitrax LocoNet-based devices using
                    JMRI have been added to the Digitrax hardware page.</li>
                <li>Fixed a problem in the PM4Announce script</li>
              <li>The legacy LocoIO programmer help points to the current <a href="diy">DIY decoder</a> method to
              configure these boards.</li>
              <li>The legacy LocoIO programmer help points to the current <a href="diy">DIY decoder</a> method to
              configure these boards.</li>
              <li>LocoNet support for "Voltage/Current Meters" has been extended to
                  include support for multiple sources of meter information, and
                  to include automatic discovery of LocoNet devices which support
                  voltage and current reporting.  Each discovered device is identified
                  by its device type and serial number.  These "friendly" identifiers
                  appear in the "Voltage Meter" and "Current Meter" menus in the
                  "Voltage/Current Meter" tool. Further information may be found at the
                  <a href="/help/en/html/hardware/loconet/DigitraxMeters.shtml">
                      Digitrax "Meters"</a> web page.</li>
                <li>Start-up "Interrogation" of LocoNet Sensor and Turnout state
                    has re-worked to provide better operation for LocoNet connections
                    with large numbers of Sensors and/or Turnouts.  The JMRI
                    interrogation mechanism now implements a minimum delay from
                    the last Sensor Report, Turnout Report or Interrogate Query
                    message before sending the next Interrogate Query message.</li>
                <li>The "DS64 Configuration Tool" was updated:
                    <ul>
                        <li>to correctly perform the "Factory Reset" operation
                            without encountering a "Java Exception";</li>
                        <li>to correctly perform the "Factory Reset" operation to
                            the correct DS64 as specified in the "Unit Address" field;</li>
                        <li>to correctly manage the values shown on the "OpSw Values"
                            tab and maintain value coherency between the "OpSw Values" tab
                            and the "Basic Settings" tab.</li>
                    </ul>
                </li>
                <li>Keep slot status in line with CS after setting COMMON or true slot moves</li>
                <li>Allow selection of "Stand-alone LocoNet (with external LocoNet Data
                    Termination!)" for Digitrax PR4.</li>
                <li>New LNCV Programming tool (Uhlenbrock protocol), available from LocoNet menu, with window
                  specific help.</li>
              <li>When connected to the LocoNet HexFile Simulator, simulated replies from selected devices are
                sent to the monitor (select the "Simulate replies" checkbox on the HexFile pane).</li>
            </ul>


        <h4>Maple</h4>
            <ul>
                <li>Maple SerialSensor updated to support multiple Character system name prefixes.</li>
            </ul>

        <h4>MQTT</h4>
            <ul>
                <li>The MQTT temporary directory has been moved to the current profile directory.
                    This will allow JMRI to have MQTT connections even when JMRI is installed
                    in a protected location.
                <li>MQTT Turnouts now support MONITORING and EXACT feedback modes</li>
                <li>When status UNKNOWN or INCONSISTENT is received from MQTT
                    and the turnout operating mode is MONITORING or EXACT,
                    the layout is now updated with this status</li>
                <li>When EXACT feedback mode is selected,
                    two different MQTT topics will be used - one for commands and one for state</li>
                <li>Added MQTT Sensors</li>
                <li>MQTT connection configuration now lets you set the prefix for Turnouts, Sensors,
                        Lights, Reporters, Signal Heads and Signal Masts.  (There's no actual support
                        for Lights, Reporters, Heads and Masts yet, but you can set the prefix).
                        Note: You should check the settings for Turnouts and Sensors to ensure
                        they're what you want.  This code upgrade might have overwritten any
                        values you (had to) manually edit into preferences in the past.
                <li>The new "jython/SendMqttMessage.py" sample script show how to
                    send across an existing MQTT connection.
                <li>The new "jython/ReceiveMqttMessage.py" is simple demo of
                    receiving MQTT messages into a script. It just prints the received messages,
                    but you can build up from there.
                <li>Fixed a bug that caused an erroneous ERROR message on operating MQTT Lights</li>
                <li>Added support for creating ranges of Turnouts and Lights.<br>
                Sensor, Turnout and Light Address ranges do not have to be fully numeric,
                and will be incremented using the final number in an address.</li>
                <li>Added support for changing the default quality of service and
                retention policy for transmissions.  See the
                <a href="http://jmri.org/jython/SetMqttOptions.py">jython/SetMqttOptions.py</a>
                script for an example.</li>
                <li>Fix a nasty threading bug in the MQTT Light support that can
                cause a JMRI lockup on the first access after adding a Light.</li>

                <li>Update the Paho MQTT library from version 0.4.0 to 1.2.5 (current)</li>
                <li>Better handling of wildcards in topic subscriptions</li>
            </ul>

        <h4><a href="http://openlcb.org">OpenLCB</a></h4>
            <ul>
                <li>Default Output Interval reduced to 100ms.</li>
            </ul>

        <h4>Pi</h4>
            <ul>
                <li>Improved System Name validation for Turnouts and Sensors, numeric from 0 - 999</li>
            </ul>

        <h4>RFID</h4>
            <ul>
                <li>Improved System Name validation for Standalone sensors, must contain at least 1 number.</li>
                <li>Network connections: Support added for auto-reconnect.</li>
                <li>Network connections: TCP/UDP port configuration option promoted to main configuration settings panel and no longer under Additional Connection Settings.</li>
            </ul>

        <h4>SoundTraxx</h4>
            <ul>
                <li>TSU2 Diesel fix sound slections, Genesis OEM Diesel add models</li>
            </ul>

        <h4>SPROG DCC</h4>
            <ul>
                <li>EStop for 28 Step mode is now sent correctly</li>
		<li>Updated programming mode switcher for Pi-SPROG 3</li>
		<li>Added mode switcher for SPROG 3 Plus</li>
		<li>Added help content for new generation 5 hardware</li>
            </ul>

        <h4>TAMS</h4>
            <ul>
                <li>Improved System Name validation for Turnouts and Sensors, must contain at least 1 number.</li>
            </ul>

        <h4>Uhlenbrock Intellibox</h4>
            <ul>
                <li>The 73900 decoder definition was renamed 7x900, and updated to support decoder models:
                  <ul>
                    <li>73800</li>
                    <li>73900</li>
                    <li>76900 (V1)</li>
                    <li>76900V7</li>
                    <li>Piko 56126</li>
                  </ul>
                  Existing roster entries will suggest this replacement.
                </li>
                <li>Added hardware connection support for the (LocoNet) Uhlenbrock USB Adapter part #63120.
                  Manufacturer states their USB drivers only support Windows OS.</li>
            </ul>

        <h4>XPA</h4>
            <ul>
                <li>Improved System Name validation for Turnouts, must be numeric.</li>
            </ul>

    <h3>New / Updated decoder definitions</h3>
        <h4>Digikeijs (Digirails)</h4>
            <ul>
                <li>Added DR5033 LocoBoost configuration support, using the new LNCV service mode programming.<br>
                You can access the DecoderPro programming panes from the LNCV Tool table matched by article number
                  (5033 in this case).</li>
            </ul>

        <h4>Digitrax</h4>
            <ul>
                <li>Allow configuration of more function outputs for FX3 decoders.</li>
            </ul>

        <h4>ESU</h4>
            <ul>
                <li>Added LokPilot 5 Fx micro Next18 variants and Pullman Silberling.</li>
                <li>Update for some new ESU firmware features.</li>
                <li>Fix some errors.</li>
                <li>F29-F31 now present in Function Labels pane for generation 5 decoders.</li>
            </ul>

        <h4>Tam Valley Depot</h4>
            <ul>
                <li>Updated the QuadLN_S template to support the 16 servo capability in the Version 3 software</li>
            </ul>

        <h4>Uhlenbrock</h4>
            <ul>
                <li>New Switch Module 63410 decoder support, using the new LNCV service mode programming.<br>
                You can access the DecoderPro programming panes from the LNCV Tool table matched by article number
                (6341 in this case).</li>
                <li>New definitions to program Power4, Power8 (boosters) and IntelliLight 28x0 modules.</li>
                <li>For Uhlenbrock Track-Control modules a Direct Message type was added to the LNCV protocol.
                  The Lncv Programming tool has a new checkbox 'Direct Mode', allowing to set LEDs etc.</li>
                <li>Two new Track-Control definitions (art. 69220 Turnout and 69230 Signal Module)</li>
                <li>When connected to the LocoNet HexFile Simulator, simulated replies from LNCV devices are
                  sent to the monitor (select the "Simulate replies" checkbox on the HexFile pane).</li>
            </ul>

    <h3>DecoderPro</h3>
        <a id="DecoderPro" name="DecoderPro"></a>
        <ul>
            <li>The DecoderPro programming/editing screens now have a Find operation!
                <p>
                Ctrl-F or Cmd-F will open a small find bar at the bottom of the pane
                where you can enter a search string.  Hitting Return will find the first
                occurrence. There are right and left arrows to find the next occurrence forward
                and backwards respectively.  Ctrl-G or Cmd-G will also find the next forward
                occurrence. Shift-Ctrl-G or Shift-Cmd-G will find the next occurrence going backwards.
                The "Done" button will dismiss the
                bar, but you can leave it up without it interfering with anything.
            </li>
            <li>Added a new optional "maxFnNum" model-level attribute for Decoder Definitions.
            <p>
                <ul>
                    <li>
                        Specifies the highest F key supported by the decoder. The assumed default is "28".
                    </li>
                    <li>
                        Note that `maxFnNum` is not to be confused with the existing `numFns`,
                        a legacy attribute that limits the total number of function mapping lines displayed.
                        Neither is derivable from the other.
                    </li>
                    <li>
                        This value is currently used to build the Function Labels pane.
                    </li>
                   <li>
                        This value is propagated to the Roster Index and intended to be used in future by throttles, etc.
                    </li>
                    <li>
                        Example definitions are LokSound 5(uses F0-F31) and LokSound V3.5(uses only F0-F15).
                    </li>
                </ul>
            <p>
            </li>
            <li>Added a new optional "allowResetDefaults" decoder-config level attribute for Decoder Definitions.
                <p>
                For some decoders, it's either impossible or impractical for the decoder definition
                to have universally applicable defaults incorporated. In these cases,
                setting allowResetDefaults="no" disables the "Reset to defaults" button on the Roster Entry pane
                and provides an explanatory tooltip.
            </li>
        </ul>


   <h3>CTC Tool</h3>
        <a id="CTC-Tool" name="CTC-Tool"></a>
        <ul>
            <li>To correct prior release notes, the CTC panel can be created with Layout Editor, Control Panel Editor
            or Panel Editor.</li>
            <li>This release gets a new capability: Auto-Generation of Traffic Locking (TRL) rules, which is the most tedious
            and difficult aspect of (any) CTC systems.  However, TRL Auto-Generation is <strong>dependent</strong> on Layout Editor, with Signal
            Masts at block boundaries, and with automatically generated Signal Mast Logic.  The Signal Mast Logic
            can be modified <strong>after</strong> discovery, but there has to be at least <strong>one</strong>
            discovery process run.  After this process is complete, if you are not happy with the way Layout Editor
            displays the layout, you can create a parallel Control Panel Editor or Panel Editor screen.  Personally, in
            my opinion, Layout Editor looks very close to an actual CTC panel if drawn correctly.</li>
            <li>There is a reminder dialog that was added to remind users of the CTC system that using "," (Comma) and
            ";" (Semi-colon) in ANY of the System and User names for items used by the CTC system is <strong>not</strong>
            supported, and may cause problems in the program.  The reminder can be silenced permanently too by the user.</li>
            <li>When CTC Runtime starts (Run CTC Logic), if there are any problem(s), warning(s) or informational
            message(s), it will now popup a dialog box to inform the user.  Previously, I relied on the System Console
            for the logging of those messages (which still happens), but the System Console screen may not be
            visible, ergo the need for this new feature.</li>
            <li>Bug Fix: It was possible (though technically wrong) for a user to specify a single turnout as locked
            in two (or more) <strong>different</strong> O.S. sections.  If this was specified, the runtime program would
            fight itself and eventually cause a stack overflow.  This is now prevented during user entry from occurring.
            If you have specified this prior to this release, you <strong>must</strong> manually correct this.</li>
            <li>Bug Fix: There was a problem that occurred when certain Java libraries were used.  The CTC .xml file that
            contains all of the data was slightly corrupted due it.  By just running this new version of CTC Editor, those
            problems will <strong>automatically</strong> be fixed. You may then exit the CTC Editor even without saving,
            as the fix will have already been done. (internal file version 5 to 6)</li>
            <li>Bug Fix: If an O.S. section did <strong>not</strong> have a Signal Lever defined, it was
            possible (though wrong) to enable Traffic Locking and / or Call On.  Now it is impossible to define either
            if there is no Signal Lever defined <strong>properly</strong>.</li>
            <li>The CTC tool no longer uses an external XML file, CTCSystem.xml, for retaining
            its configuration.  The configuration is now part of the standard PanelPro data file.
            This change eliminates issues with data consistency between the JMRI tables and
            the CTC configuration.  The CTC Editor File menu has an menu item to import an
            existing CTCSystem.xml file so that the configuration will be included in
            Panels &rArr; Store Panels.
            </li>
            <li>Include detail information for vetoed object deletes.</li>
        </ul>

    <h3>Control Panel Editor</h3>
        <a id="CPE" name="CPE"></a>
        <ul>
            <li>
              The 'Circuit Builder' menu has been updated. See below.
            </li><li>
              The 'Edit Turnout Icon' menu item of Indicator Track popups synchronizes
              paths with the 'Add/Edit Circuit Paths' window of Circuit Builder.
            </li>
            <li>Icons of tracks indicators and signals in the style of the &#268;SD Czechoslovak State Railway
	    - Unified Control Place - JOP style.</li>
        </ul>
        <h4>Circuit Builder</h4>
            <a id="CPE-CB" name="CPE-CB"></a>
            <ul>
                <li>
                	A 'change Portal Icon Set' menu item is added to the 'Circuit Builder' menu of
                	Control Panel Editor. User defined icon sets for Portals can be installed here.
                </li><li>
                	When using the 'Add/Edit Circuit Portal' window, the popup menu of a Portal
                	now allows repositioning from the 'Set Location' menu item.
                </li><li>
                	Features added to the 'Add/Edit Signal Mast' window are;<br>
                	1. A Signal list shows the signals that are configured to protect the block.<br>
                	2. Buttons will open the Tables for creation, renaming and deletion of
                	both signal Masts and Signal Heads.<br>
                	3. Signal icons can be dragged in the fashion of Item Palette from the window
                	to the panel<br>
                	4. Instructions for these operations are described on the window.
                </li><li>
                	Two new error alerts are added to the 'Error Checks' menu item of the 'Circuit
                	Builder' menu.<br>
                	1. OBlocks that do not have a block length are listed. Every Path in a block should
                	have its length specified in order to run Warrants. But for convenience, this
                	length can be inherited from the block length.<br>
                	2. Signals that are not configured to protect a block are listed. If these signals
                	have icons they can be highlighted with a corresponding menu Item.
                </li>
                <li>Circuit Builder track colors (Allocated, Not In Use, ...) are now supported on Web Server
                  panels. See OBlocks and JSON.</li>
                <li>OBlock and associated tables can be edited like the 'standard' tables (see
                  <a href="#TLae">OBlocks</a>).</li>
            </ul>
        <h4>Palette</h4>
            <a id="CPE-P" name="CPE-P"></a>
            Some minor changes are made to the user interface.
            <ul>
                <li>
                  For the tabs having icon sets, i.e. turnouts, sensors, etc., should all icon sets be deleted,
                  a 'Restore Default' button is displayed to reinstall the default icons.
                </li><li>
                  The above restoration feature can be done at any time by holding keys CNTL A down while
                  clicking the 'New Icons' button.  All customized icon sets defined by the user are retained
                  and any missing default icons are added.
                </li><li>
                  The unused functions to create, delete, or restore the status states of Indicator Turnouts
                  are now only displayable by holding keys CNTL A down while clicking the 'Edit Icons' button.
                </li><li>
                  Several new checks and alerts will inform users when duplicate names are used for
                  icon sets or when duplicate icon sets are found with different names.
                </li><li>
                  The fixed set of Portal icons may be redefined by the user under the 'Portal' tab.
                  Portal icon sets created by the user may be selected for panels by a new menu item,
                  'Change Portal Icon Set' in Circuit Builder. The new set is then used for Warrant displays.
                </li><li>
                  The drag and drop of icons under the 'Icon' and 'Background' tabs no longer requires naming
                  the icon first. The drop from the Icon catalog can be done directly into the panel.
                </li><li>
				  The tabs having tables now display the element's actual table editing window when the
				  'Add New Table Item' button is pressed.
                </li><li>
                  Editing an icon set for an Indicator Turnout now follows the same paradigm as the rest of
                  the tabs having icon sets. Defining new icon sets, changing icons, or renaming sets functions
                  the same for all such tab items.
                </li>
            </ul>

   <h3>Dispatcher System</h3>
        <a id="Dispatcher_System" name="Dispatcher_System"></a>
        <ul>
             <li>Jython based System which automates the build of a Dispatcher system</li>
             <li>Requirement: Start with a Panel with track, signals, signal logic built with</li>
             <li>automatic signal logic, sections built with automatic section builder</li>
             <li>Provides Gui to: Modify xml of panel to provide icons to setup dispatch</li>
             <li>between stops, Generate Transits and TrainInfo files required by dispatcher</li>
             <li>Provides a runtime system to operate the system</li>
             <li>In addition to running trains by Signal Masts or Signal Heads you may now run trains by No Signals
             This is most useful for Automatic engineer, and works best with fast throw switchs, such as snap switchs, as
             it works solely on whether a section is allocated. If you need to check switch sensors for position you must
             continue to use SSL or SML signals.</li>
        </ul>

    <h3>Internationalization</h3>
        <a id="I18N" name="I18N"></a>
        <ul>
            <li>Dutch translations added for the Where Used, Meters and Issue Reporting tools.</li>
        </ul>

    <h3>Layout Editor</h3>
        <a id="LE" name="LE"></a>
        <ul>
	        <li>The Layout Editor code has been substantially restructured in this release.
	            If you have scripts that reference the jmri.jmrit.display.layoutEditor package
	            please check them carefully, as new classes have been created and
	            some methods have moved.  Panel files containing Layout Editor panels
	            that are stored (written out) by this release may not be readable
	            by earlier releases; this release should load older files just fine.
	        </li>
	        <li>A problem storing and reading LE controlpoint values for users with a non-default Locale has been fixed
            .</li>
        </ul>

    <h3>Logix</h3>
        <a id="Logix" name="Logix"></a>
        <ul>
          <li>The "Copy Logix" feature has been enhanced to provide more assistance
          in copying conditionals. See the updated help files for details.</li>

          <li>Fixed a couple of bugs there Logix wasn't correctly listening on
          signal head lunar state, signal head flash lunar state, signal mast
          lit state and signal mast held state. See PR #9059.</li>
        </ul>

   <h3>Meters and MeterFrames</h3>
        <a id="Meters" name="Meters"></a>
        <ul>
            <li>jmri.MultiMeter is split into jmri.Meter.</li>
            <li>jmri.VoltageMeter and jmri.CurrentMeter is added.</li>
            <li>AmpMeterFrame and VoltMeterFrame are replaced by MeterFrame</li>
            <li>The user can select which VoltageMeter/CurrentMeter the MeterFrame should show</li>
            <li>The MeterFrames are stored in the panel file and restored when the panel is loaded</li>
            <li>LocoNet supports discovery of the sources of voltage and current
                data and makes them available in the "Voltage/Current Meter" tool.</li>
            <li>default meter digits based on max and resolution of defined meter</li>
          <li>The Settings menu was slightly reorganized with submenus for each value.</li>
          <li>When no meters are available, both Meters menus and the Units Settings menu show a short explanation.</li>
          <li>Meters will honor the JMRI Locale/regional setting for the decimal separator (. or ,))</li>
          <li>Meters now use meter max and resolution to default integer and decimal digits</li>
        </ul>

    <h3>Operations</h3>
        <a id="Operations" name="Operations"></a>
        <ul>
            <li>Fixed problem where operations database was always saved when exiting JMRI.</li>
            <li>Fixed problem with Panel name for train icons.</li>
            <li>Fixed problem with track move count when track has an alternate track.</li>
            <li>New feature for cars, Return When Loaded. Now you can set a load name and destination for a car when
            it's load status changes to loaded. See operations help for more details.</li>
        </ul>

    <h3>Preferences</h3>
        <a id="Preferences" name="Preferences"></a>
        <ul>
            <li>When a hardware connection fails, some hardware types may attempt to reconnect.<br>
            The interval between reconnection attempts and the maximum number of reconnection attempts
            can now be changed by saving your profile, then editing the profile.xml file.<br>
            The reconnectMaxInterval is in seconds, reconnectMaxAttempts is infinite if -1, else the value.</li>
            <li>The rules for the system connection prefix (one capital followed only by a number, for example D78)
            are now protected in the Connection Preference panel. Invalid entries are highlighted in red.</li>
            <li>A bug that could make connection tabs disappear has been fixed.</li>
        </ul>

    <h3>Routes</h3>
        <a id="Routes" name="Routes"></a>
       <ul>
            <li>A configurable (minimum) interval for all turnout outputs that are part of a Route on the same
                connection can be set in Preferences &gt; Connection &gt; Additional Connection Settings (serial connections
                only).
                Default is 250 milliseconds. Up to now this delay was fixed to 250 ms in the code so this new option
                will only be noticeable if you change it. No restart is required.
                Use the [Reset] button to restore the default.
                The same setting is applied to Turnout Outputs, for example as Signal Mast outputs.
            </li>
       </ul>

    <h3>Scripting</h3>
        <a id="Scripting" name="Scripting"></a>
        <ul>
            <li>Some internal refactoring that should help with the long term
            maintenance of JMRI has been done. This may cause some scripts to
            fail until classes or methods are renamed in those scripts.</li>
            <li>new scripts ShutdownOS.py and RestartOS.py which can be called to safely
                end JMRI and then request that the underlying OS shutdown or restart itself</li>
            <li>The getSystemNameList() and getNamedBeanList() Manager methods have been fully deprecated.
            <br>Please update any code warnings re these methods to use getNamedBeanSet(), and
                post on the JMRI Users Group for any assistance with updating.</li>
            <li>The Manager method getNextValidAddress(@Nonnull String curAddress, @Nonnull String prefix) has been
            deprecated, please use getNextValidAddress(@Nonnull String curAddress, @Nonnull String prefix, boolean ignoreInitialExisting)</li>
        </ul>

    <h3>Signals</h3>
        <a id="Signals" name="Signals"></a>

        <h4>Signal Systems</h4>
            <ul>
                <li>The B&amp;O-1980 signal system was updated to correct several
                    errors and to include masts which can be used to protect a
                    block of "short braking distance".
                </li>
            </ul>
        <h4>Signal Masts</h4>
            <ul>
                <li>A configurable (minimum) interval for all outputs on the same connection can be set in
                    Preferences &gt; Connection &gt; Additional Connection Settings (serial connections only).
                    Default is 250 milliseconds. Use the [Reset] button to restore the
                    default. The same setting is applied to turnout outputs in a Routes.
                </li>
            </ul>
	    <h4>Cab Signals</h4>
            <ul>
                <li>Better set row height in table.</li>
            </ul>

   <h3>Switchboard Editor</h3>
        <a id="SW" name="SW"></a>
        <ul>
          <li>When the Switchboard pane is resized by the user, the number of rows will adjust to show the largest
            size switch tiles (default On for new boards). If you prefer to set the number of rows in the Editor,
            uncheck "Automatically set optimum grid" in the Options menu).</li>
          <li>Switchboards immediately update after a change in shapes, types, connection or range. The [Update
            Switchboard] button is still available, and occasionally required.</li>
          <li>Switches display the user name on the switches (default On for new boards, set "Show user name on
            switches" in the Options menu.</li>
          <li>Slider and Key switch shapes are drawn on screen instead of loading image files.
              This increased redraw speed and allows using your custom colors and scaling the size of
              the graphics to the space available. The old images files for these have been removed.</li>
          <li>Symbol shapes are still drawn by swapping 2 image files. We added the option to scale them
            in the Option menu. (Hint: You can replace the supplied image files with your own images as
            long as they carry identical file names).</li>
        </ul>

    <h3>Throttle</h3>
        <a id="throttle" name="throttle"></a>
        <ul>
            <li>Fix issue where Jynstrument would not start correctly <a href="https://groups.io/g/jmriusers/topic/78674589">(user group message)</a>.</li>
            <li>Added a throttle frame Jynstrument that hides throttle window menubar and toolbar and switches to semitransparent mode (and vice versa) (idea from <a href="https://groups.io/g/jmriusers/topic/76582490">this user message</a>).</li>
            <li>Fix Jynstrument instantiation on Windows (cleaner URI to path method). <a href="https://groups.io/g/jmriusers/topic/the_jynstruments/78674589"> User message 78674589</a></li>
            <li>Added local and global preferences to show/hide speed step selector. <a href="https://groups.io/g/jmriusers/topic/change_background_color_and/80665867"> User message 80665867</a></li>
            <li>Added global throttle preference to use or not large speed slider. <a href="https://groups.io/g/jmriusers/topic/change_background_color_and/80665867"> User message 80665867</a></li>
            <li>Refactored VideoView Jynstrument for camera view in Throttle, reworked using <a href="https://github.com/sarxos/webcam-capture"> a new third party library.</a></li>
        </ul>

    <h3>Timetable</h3>
        <a id="Timetable" name="Timetable"></a>
        <ul>
            <li>Set the default start time for a new train to match the schedule start time.</li>
        </ul>

    <h3>Turnouts, Lights, Sensors and other elements</h3>
        <a id="TLae" name="TLae"></a>
        <ul>
          <li>Increased address validation for multiple hardware types.</li>
          <li>Access to OBlocks in Web Server via JSON messages was added.</li>
          <li>Occupancy Blocks, Portals and Paths used in Warrants can be edited in an optional table style
            like that used in the 'standard' tables (Turnouts, Lights etc). The information is stored in the exact
            same way, so you may change the UI as desired (see Preferences &gt; Display. Restart required)</li>
          <li>Turnouts with 1 Sensor Feedback update to Inconsistent state when the Sensor being followed enters an Unknown or Inconsistent state.
            <br>See <a href="https://www.jmri.org/help/en/package/jmri/jmrit/beantable/TurnoutTable.shtml#Turnout_Feedback">Turnout Feedback</a></li>
        </ul>

   <h3>Virtual Sound Decoder</h3>
        <a id="VSD" name="VSD"></a>
        <ul>
            <li>VSD now supports the "Location Following" (sound follows loco) with occupancy
                sensors and JMRI Blocks. See the
				<a href="https://jmri.org/help/en/manual/DecoderPro/Main_VSD.shtml#VSDLocations">
                documentation</a> for details.</li>
            <li>The "Location Following" (sound follows loco) with occupancy sensors and JMRI Blocks
            now also works with a RosterEntry or RosterId as Block value.</li>
        </ul>

   <h3>Warrants</h3>
        <a id="Wt" name="Wt"></a>
        <ul>
            <li>The table of throttle commands shown when creating or editing warrants has been changed:
            	<ul>
            		<li>The <b>Command</b> column is now a drop down combo box. This will allow the
            			command names to be translated into languages other than English.</li>
            	    <li>The <b>Value</b> column is a drop down combo box for throttle commands
            	    	other than "Speed" or "Run Warrant". Again, done to permit translation
            	    	into other languages.</li>
            	</ul>
            </li>
            <li>The algorithm for executing speed changes due to track conditions for warrants
                has been modified and is better able to restore the scripted speeds once the
                track speed restrictions are lifted.</li>
            <li>The constant used to approximate track speed of trains has been changed to
            	yield a scale speed of 100mph at full throttle. This change has <b>no effect</b>
            	on roster entries having Speed Profiles.</li>
            <li>The Address column of the Warrant Table list and the Address fields of the
            	NXWarrant or Create Warrant windows
            	now accept throttle protocol names and addresses of Markin and ESU ECoS.</li>
            <li>When scripted speeds are overridden due to signals or obstructions ahead, the
            	non-speed script commands are executed at approximately the same elapsed times as
            	were written in the script.</li>
 			<li>Track speeds of running warrants are recorded automatically and a SpeedProfile
            	is built that can be seen by  pressing the <b>View Profile</b> button in the
            	edit warrant window. These profiles can be merged into the existing profiles
            	for the Roster entry used by the loco of the warrant when the layout session
            	is closed. (Recall that Warrant Preferences has 3 options for this merging.)</li>
            <li>An <b>Update Track Speeds</b> button is added to the window where warrant throttle
            	settings and commands are edited. This button updates the <b>Speed</b> column to
            	list the track speeds (mm/sec) for the current Speed Profile measurements of
            	the locomotive address entered in the 'Engine Consist' box.</li>
            <li>Bugs introduced during the past year to the 'Wait Sensor' command and merging of
            	speed profiles are fixed.</li>
			<li>When OBlocks are imported from LayoutEditor blocks, the turnout settings of paths
            	are also added to the imported OPaths.</li>
            <li>A button to translate the throttle settings to track speed in inches/sec
            	or millimeters/sec or scale speed on miles/hr or kilometers/hr has been
            	added to the windows used for editing Warrants or creating NXWarrants.</li>
        </ul>

   <h3>Web Server</h3>
        <ul>
            <li>Switchboard panels on Web Server support all graphic shapes and colors set in the Editor.</li>
            <li>Switchboard "switch" icons fill the whole screen on mobile devices (you can turn this off in Switchboard
              Editor by deselecting "Automatically set optimum grid" in the Options menu.</li>
            <li>Switchboard panels for Lights allow to switch all lights on or off (also in Web Server when Panel
              items control layout is selected in the Editor Options menu).</li>
            <li>Control Panel track colors (Allocated, Not In Use, ...) are now fully supported on Web Server
              panels.</li>
            <li>OBlocks access was added as a JSON Servlet to allow this.</li>
        </ul>

    <h3>Where Used</h3>
        <a id="WhereUsed" name="WhereUsed"></a>
        <ul>
            <li>Implement data collection for CTC references for sensors, signal heads,
            signal masts, turnouts and blocks.</li>
        </ul>

    <h3>Miscellaneous</h3>
        <a id="Misc" name="Misc"></a>
        <ul>
            <li>The jmri.jmrix.SystemConnectionMemo class has become a jmri.SystemConnectionMemo
                interface and a jmri.jmrix.DefaultSystemConnectionMemo class. This may
                require changes to scripts.  If you have a script that references
                jmri.jmrix.SystemConnectionMemo, please change it to either
                jmri.SystemConnectionMemo or jmri.jmrix.DefaultSystemConnectionMemo
                (it's easier to have you just try the two than to explain which
                one will work in which case)</li>
            <li>Added PR automation to check for a comment in the release note when a PR
                is opened, and to ensure that somebody has been assigned to the PR.</li>
            <li>The jmri.JmriPlugin class is deprecated without a replacement. If you depend on
	              on this class, please <a href="https://github.com/JMRI/JMRI/issues/new">raise an issue on GitHub</a>
		            so we can discuss how to meet your requirements through other means.</li>
            <li>"Display Message Log" has been removed from the Debug Menu. Use the
                "System Console" from the Help Menu to view log messages.</li>
            <li>The older "Upload Debugging Information" item
                in the help menu has been replaced by
                a "Report Issue..." item.  This walks you through creating a
                <a href="https://github.com/JMRI/JMRI/issues">JMRI GitHub issue</a> and uploads information
                that will make debugging easier.  You need a (free)
                GitHub account to do the final submission.
                There's more info on the
                <a href="https://jmri.org/help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml">help page</a>.
            <li>The interface jmri.Light has been split into jmri.Light and jmri.VariableLight. Lights
                that supports variable intensity must now implement the jmri.VariableLight interface.
                All lights are still managed by the jmri.LightManager, but a new manager jmri.VariableLightManager
                has been added that keeps a copy of the VariableLights. But register and deregister of
                all lights must still be done thru the LightManager.</li>
            <li>Windows launcher updated to honour return codes to shutdown or reboot host machine</li>
            <li>The Ant version invoked by Maven was bumped to 1.10.8.  No user
                action required, but developers need to be online the first time
                they build using Maven.</li>
            <li>An option (disablePermissiveSignalMastLogic) has been added to SignalMasts and SignalMastLogic
                to enable conditional permissive aspects.  See the jmri.SignalMast Javadoc for details.
            <li>Windows launcher updated to honour return codes to shutdown or reboot host machine</li>
            <li>The Ant version invoked by Maven was bumped to 1.10.8.  No user
                action required, but developers need to be online the first time
                they build using Maven.</li>
            <li>The (English) phrasing in a couple of messages was updated for consistency.</li>
            <li></li>
            <li>YetAnotherAutoTrain.py (YAAT) has been updated to version 2.2.  This version
            includes support for compiling train definitions for faster startup.  It also includes
            the ability to create extensions to the command language.  A Help document has been
            added to the JMRI Help pages.</li>
            <li>The Comments columns in Tools &rArr; Tables have support for multi-line comments.
            The <strong>Edit Comment</strong> option has been added to the right click pop-up
            menu that is normally used to move user names.  A tooltip will be displayed with
            the comment content.</li>
            <li>Improved how JavaHelp handles non-HTML files on some platforms.</li>

        <h4>AbstractProxyManager</h4>
            <a id="Proxy" name="Proxy"></a>
            <ul>
                <li>AbstractProxyManager can now automatically create system specific managers.</li>
                <li>When a NamedBean is added to a proxy manager, there needs to be a system specific
			    manager for that bean unless the bean is for the internal manager. The ProxyMeterManager
			    and AbstractProxyManager automatically creates a new system specific manager if it doesn't
			    already exists. This works as long as the system specific manager doesn't need to have
			    system specific knowledge of the named beans.</li>
                <li>This means that, for example, the user may create a Jython script that creates a Meter
			    for the LocoNet connection but doesn't need to create the LocoNet meter manager since that
			    manager is automatically created.</li>
			    <li>Once a specific connection needs to store specific data about meters, a connection
			    specific manager needs to be created, for example LnMeterManager for LocoNet.</li>
            </ul>
        </ul>


   <!--#include virtual="/Footer.shtml" -->
  </div><!-- closes #mainContent-->
  </div> <!-- closes #mBody-->
 <script src="/js/main.js"></script>
</body>
</html>
