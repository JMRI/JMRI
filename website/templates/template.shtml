<!DOCTYPE html>
<html lang="en">

<head>
    <title>
 	JMRI: ... Title ...
    </title>
    <meta name="author" content="YOUR NAME HERE">
    <meta name="keywords" content="JMRI SOME KEYWORDS"> <!-- make these specific, always include JMRI -->
    <!--#include virtual="/Style.shtml" -->
</head>

<body>
    <!--#include virtual="/Header.shtml" -->
    
    <div id="mBody">
        <!--#include virtual="/Sidebar.shtml" --> <!-- choose from local ("Sidebar.shtml") or global ("/Sidebar.shtml") -->
    <div id="mainContent">

	    <div id="teaser"> <!-- Optional -->
		<h1>Optional Teaser</h1>
		    <p>A teaser is some text on the top of a page that describes something
		    interesting - maybe a 'What's New?' item or other important announcement
		    dealt with in detail later on on this page... </p>

		    <p class="important">
		    	Check out the
				<a href="index.shtml">CSS examples page</a>
			for more markup examples
		    </p>
	    </div> <!-- closes #teaser-->

	    <!-- -------- -->
	    <!-- Page TOC --> <!-- Optional -->
	    <!-- -------- -->

	    <h1>Optional Table of Contents</h1>
	    <p>For a complicated page - like a user guide or technical reference</p>
	    <dl class="toc">
		<dt><a href="#topic1">TOC entry 1</a></dt>
		<dt><a href="#topic2">TOC entry 2</a></dt>
		<dd>Some descriptive info about this TOC entry</dd>
		<dt><a href="#topic3">TOC entry 3</a></dt>
		<dd>
		    <ol>
		    <li>a list of sub items</li>
		    <li>a list of sub items</li>
		    <li>a list of sub items</li>
		    <li>a list of sub items</li>
		    </ol>
		</dd>
		<dt><a href="#topic4">TOC entry 4</a></dt>
		<dd>Some info about this TOC entry</dd>
	    </dl>
	    <p>Alternatively, a simpler page may only need a simple TOC:</p>
	    <ul class="snav">
		<li><a href="#topic1">TOC entry 1</a></li>
		<li><a href="#topic2">TOC entry 2</a></li>
		<li><a href="#topic3">TOC entry 3</a></li>
		<li><a href="#topic4">TOC entry 4</a></li>
	    </ul>
	    <p>Choose one (or neither) ...</p>

	    <!-- ------------- -->
	    <!-- Page Contents --> <!-- Required -->
	    <!-- ------------- -->

	    <h1>Page Title repeated here, start with h1</h1>
		<p class="subtitle">
		    subtitles are used as the first paragraph under a main
		    heading - if at all
		</p>

        <div class="flex-item-70">
		<p>flex-item-70 text Random text Random text Random text Random text</p>
		<p>flex-item-70 text Random text Random text Random text Random text</p>
		<p>flex-item-70 text Random text Random text Random text Random text</p>
		<p>flex-item-70 text Random text Random text Random text Random text</p>
		</div>

        <div id="icon-large" class="flex-item-30">
            <img src="images/ios_prev1_Rel4_22.png" alt="JMRI site viewed on iphone"
                 style="object-fit: scale-down;">
        </div>

		<div class="section">
		    <h2>Examples</h2>

            <div class="flex-item-50">
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>Random text Random text Random text Random text Random text</p>
            </div>

            <div class="flex-item-50">
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>flex-item-50 text Random text Random text Random text Random text</p>
                <p>flex-item-50 text Random text Random text Random text Random text</p>
            </div>

                Code:<br>
                Use the tag <code>&lt;code&gt;</code> to show short pieces of code (will fit in ascrolling box)<br>
                Use the tag <code>&lt;code class="block"&gt;</code> to show multi-line code (it will display
                every whitespace in those lines, so start at the left margin):
                <pre><code class="block">
// Get the navbar
var navbar = document.getElementById("mainNav");
// Get the offset position of the navbar
var sticky = navbar.offsetTop;
function stickyFunction() {
  if (window.pageYOffset >= sticky) {
    mainNav.classList.add("sticky")
  } else {
    mainNav.classList.remove("sticky");
  }
}
            </code></pre>

			<p class="mice">mice text is for editorial comments and the like</p>
			<p class="remark">Remarks get stuff before and after.</p>
			<p class="note">Notes get a "Note:" prepended.</p>

		    <div class="section">
			<h3>h3 Section Title</h3>
			<div class="para">
			    <p>h3 Content</p>
			    <p> ... etc ... </p>
			</div>
			<div class="section">
			    <h4>h4 Section Title</h4>
			    <div class="section">
				<h5>h5 Section Title</h5>
			    </div>
			</div>
		    </div>
		</div>

		<div class="list">
		<h1>List header</h1>
		<p>Lists are used to display single level outlines that benefit from
		    a "topic and discussion" type of display.</p>
		<dl>
		    <dt class="left">Topic</dt>
		    <dd class="first">
			<p>discussion</p>
		    </dd>

		    <dt class="left">Topic</dt>
		    <dd>
			<p>Lists can have sections in them as well...</p>

			<h1>Section Title</h1>
			h1 Content
			<div class="section">
			    <h2>Section Title</h2>
			    h2 Content
			    <div class="section">
				<h3>Section Title</h3>
				h3 Content ... etc ...
			    </div>
			</div>
		    </dd>

		</dl>
		</div> <!-- closes #list -->

        <!--#include virtual="/Footer.shtml" -->

    </div><!-- closes #mainContent-->
    </div> <!-- closes #mBody-->
    <script src="/js/main.js"></script>
</body>
</html>
