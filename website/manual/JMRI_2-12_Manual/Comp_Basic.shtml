<!DOCTYPE html>
<html lang="en">
<head>
<!-- Copyright ($Author: dat7719 $) 2009, 2010 -->
<!-- $Id: Comp_Basic.shtml 18193 2011-08-16 23:19:17Z dat7719 $ -->
<title>Comprehensive Programmer - Basic Pane</title>

    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->
<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<a name="Top"></a>

<h1>DecoderPro&reg; Comprehensive Programmer</h1>
<h1>Expanded Basic Pane</h1>

<div align="right">
  <p align="right">Comprehensive Programmer  
    <a href="Comp_Setup_Roster.shtml">Previous</a> | <a href="Comp_Motor.shtml">Next <br>
  </a>Advanced Programmer 
  <a href="Adv_RosterMedia.shtml">Previous | </a><a href="Comp_Motor.shtml">Next </a></p>
<p>      <a href="index.shtml#Advanced Programmer">Back to Index</a>
    </p>
</div>

<hr>
<p>
One of the first things you will notice about the expanded Basic Pane
in the Comprehensive Programmer is that there are a lot more options than
you found in the Basic Programmer.</p>
<p align="center"><img src="images/Extended_Basic_Program_Roster.png" width="828" height="602" alt="Extended Basix"></p>
<p>
Select 2 or 4 digit <b>addressing</b> radio button to select which mode of addressing you wish to be active</p>
<p>You can enter locomotive addresses in both the <strong>Primary address</strong> and/or the <strong>Extended address</strong>. The address of a decoder is the prefix for the code it responds to.
  This is how you are able to run multiple locomotives on a single line and
  keep all their speeds and functions independent. Decoders originally could have only a two digit address... after all, who could  possibly  need more than 100 locomotives? Some lower-end command stations and decoders still use only two digit addressing. Newer decoders can have up to a four digit address. The "<b>Addressing Mode</b>" option lets you choose between two and four digit addresses. The addresses themselves are input into the appropriate text boxes. The "<b>Extended Addressing</b>" check box turns on and off the 4 digit address mode. This allows you to have two different addresses stored in a decoder, and toggle between the two. Great for locomotives with separate decoders for the motor and for sound.
Exactly  how folks are implementing this is beyond the scope of this manual. 
<p>Set the<strong> Locomotive direction: normal </strong>or<strong> reverse</strong> from the drop-down list. 
The option for <b>Normal direction of movement</b> is important for
people who model railroads like the NS, who ran  diesel  locomotives long hood forward,
or for the person who occasionally makes a mistake and hooks the decoder
up in reverse. It lets you change the direction defined in the decoder
as &quot;forward&quot; (no disassembling and rewiring). </p>
<p><strong>FL Location</strong>: Unless your command station or  decoder can only handle 14 speed steps, you'll find you get much finer control  of your locomotives by using the <strong>28</strong><strong>/128 speed steps</strong> option. If you happen to set the decoder to 14 speed steps by  mistake, and your command station is in 28 step mode, you will find that the  headlight will turn on an off as you move through the speed steps.</p>
<p> <strong>Power Source
</strong><b>Conversion</b> mode allows the decoder to run under regular
analog DC voltage control or DCC commands. If you find that your locomotive
is "breaking away" and running out of control at high speed on a DCC layout, you might want to disable this capability. Decoder equipped locomotives tend to run slower when they are on a conventional analog layout, and lighting functions will be dim or off at low speeds because sufficient voltage is not available.</p>
<p><strong>User ID #1</strong>&quot; and <strong>User ID #2</strong> (off  to the right} there are two CVs that have nothing to do with any function of  the decoder. They simply provide you with a method of electronically marking  your equipment. Use these CVs, even though you may have custom-painted  equipment for your own freelanced railroad - it provides one more way to  identify your decoders if they  are removed from the loco. </p>
<div align="right">
<a href="index.shtml#Advanced Programmer">Back to Index</a>
</div>

<hr>

<h2>The Read and Write Buttons</h2>
<p>
At the bottom of all the programmer panes you will find three rows of buttons, as shown :
<p align="center"><img src="images/Comp_03_Basic.png" width="929" height="168" alt="comp basic buttons">
<p>
The top row operates <span class="ACCENT"><strong>ONLY</strong></span> on the currently visible pane. These buttons are:</p>

<ol>
     <li><b>Read changes on sheet</b> - an "Oops!" button that lets you recover data from the decoder if you've changed it accidentally on the computer (and don't remember what the values were!), but only if       you haven't written it yet.
     <li><b>Write changes on sheet</b> - faster than writing all the data on the sheet, and ideal for tweaking changes in <b>Ops mode</b>, programming on the main track.
  <li><b>Read full sheet</b> - read all data in this pane from the decoder.
     <li><b>Write full sheet</b> - writes all data in this pane to the decoder.
</ol>

<p>The second row of buttons  performs essentially the same functions, but on the <strong>entire range </strong>of CVs for the  decoder. This allows you to read all CVs, for example, or to make a series of  changes across several panes,  and when done then write them all to the decoder. Again, you have the  option of reading/writing only the changed data, or all data. </p>
<p>
Below the two rows of buttons is a text line that shows what the current <b>programming mode</b> is, and a <b>Set</b><strong>...</strong>  button that allows you to change it without exiting the programmer. <a href="Basic_Mode.shtml"><strong>click here</strong></a> for further information on Programming Modes.</p>
<p>
Finally, the bottom line of the pane is a status bar that tells you exactly what the system is doing. It shows <strong>idle</strong> in these screen shots  because the system was  not actively programming decoders when they were made. </p>
<hr>
<div align="right">
  <p><a href="Comp_Motor.shtml"></a><a href="Comp_Setup_Roster.shtml">Previous | </a><a href="Comp_Motor.shtml">Next <br>
  </a>Advanced Programmer <a href="Adv_RosterMedia.shtml">Previous | </a><a href="Comp_Motor.shtml">Next </a></p>
<p> <a href="index.shtml#Advanced Programmer">Back to Index</a> </p>
</div>

<!--#include virtual="/Footer.shtml" -->
</div> <!-- closes #container, started in sidebar -->
<script src="/js/main.js"></script>
</body>
</html>
