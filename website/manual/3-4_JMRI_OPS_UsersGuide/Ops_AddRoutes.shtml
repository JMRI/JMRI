<!DOCTYPE html>
<html lang="en">
<head>
<!-- Copyright ($Author: dat7719 $) 2009 --><!-- $Id: Ops_AddRoutes.shtml 18290 2011-08-25 09:06:42Z dat7719 $ -->

<title>Operations-Add Routes window</title>
    <!--#include virtual="/Style.shtml" -->
</head>
<body>
<!--#include virtual="/Header.shtml" -->
<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<a name="Top"></a>
<h1>Using JMRI&reg; to Operate Trains</h1>
<h1>Add Route Window<br>
</h1>

<div align="right">
<p><a href="Ops_Routes.shtml">Back</a><a href="Ops_Trains.shtml"></a></p>
<p><a href="index.shtml#Operations">Back to Index</a></p>
</div>

<hr>
<p>The <strong>Add Route</strong> Window opens and now you can add a route to your Operations data base.</p>
<p><img src="images/Ops_AddRoute.png" alt="add route" height="239" width="900"></p>
<h4><a href="Ops_Routes_Menu.shtml">Menu Bar</a></h4>Type  the route <strong>Name</strong>
  <input name="textfield" id="textfield" size="30" type="text">
. Each route must have a unique name. 
<p>Then  press 
  <input name="button" id="button" value="Add" type="submit">
located at the bottom of the window. The Add Route window now activates the attributes required to enter the route.</p>
<p><img src="images/Ops_AddRoute01.png" alt="add route" height="239" width="900"></p>
<p> Now  select the location from which the train will depart by selecting the location 
  <select name="select" id="select"><option>North Yard</option></select>
located at the left bottom side of the window. </p>
<p>Select 
  <input name="radio" id="radio" value="radio" checked="checked" type="radio"> 
  Add location to start   
  <input name="radio2" id="radio2" value="radio2" type="radio"> 
  Add location at end
</p>
<p>Press 
  <input name="button2" id="button2" value="Add Location" type="submit">
.Updated Add Route window will be displayed with all the attributes
required active. Repeat until all stops are entered for the route.</p>
<p><img src="images/Ops_AddRoute02.png" alt="add route" height="239" width="900"></p>
<p> Now build your route by selecting the next location the train will
visit, select all locations that the train will pass through even if
the train will not work the location. This way your train's engineer
will know when reading his manifest the towns he will be traveling
through. Each time you add a location to the route, the table shows the
order in which the train will visit. You can move a location up or down
in the sequence if needed. </p>
<p>We will now add all the locations to the route. Now make sure that 
  <input name="radio3" id="radio3" value="radio3" checked="checked" type="radio"> 
<strong>Add location at end</strong> is selected to add after the first location. </p>
<p>Make sure you press  
  <input name="button3" id="button3" value="Save Route" type="submit"> 
  when you are done with entering the locations.
</p>
<p><img src="images/Ops_AddRoute03.png" alt="route" height="350" width="900"></p>
<p>Each <strong>Location</strong> has the train's departure direction(<strong>Train Direction</strong>), number of desired car  <strong>Moves</strong>, and whether car <strong>Pickups?</strong> and or car Drops? are allowed at that  location. </p>
<p>You can also adjust the maximum train length (<strong>Max Length</strong>)
that can depart that location. A car move can be a car pickup or car
drop at that location. For example, 5 moves can be 5 pickups or 5 drops
or any combination of 5 pickups or drops. </p>
<p>The <strong>Grade</strong> is used to determine how many engines the train will  require for that segment. The<strong> X</strong> and<strong> Y</strong>
are the coordinates on your dispatcher's panel for the optional train
icon. You can set the coordinates here, or use the "SetX&amp;Y" train
icon popup menu to teach the program where you want the train icon
placed when the train is at the specified location. Leave the X and Y
coordinates at zero if you want to manually move the icon or you're not
using the icon feature. After setting the number of moves, maximum
length, or coordinates, click on the table to make sure it is
recognized by the program.</p>
<p>You may move the selected location 
  <input name="button10" id="button10" value="Up" type="button">
or
<input name="button11" id="button11" value="Down" type="button"> 
to change position in list.
</p>
<p>You may add a comment for each location. press Comment 
  <input name="button9" id="button9" value="Add" type="button">
  <br>
  <img src="images/Ops_AddRoute_comments.png" alt="comments" height="128" width="268"><br>
</p>
<p>Press
  <input name="button4" id="button4" value="Save Route" type="submit">
which save your route. The program will create a file
(OperationsRouteRoster.xml) in your JMRI directory in a folder called
"operations". A backup file with the last settings for all of your
routes is also created each time <input name="button5" id="button5" value="Save Route" type="submit">
pressed.</p>
<p>Now we have our first route set up.</p>
<p><img src="images/Ops_AddRoute04.png" alt="route" height="365" width="900"></p>
<p>You may start a new route using the Add Route window and entering a new route name and repeat this process for each route.</p>
<p>Now back to the Route window, which will show us a list of all the routes.</p>
<p><img src="images/Ops_Routes01.png" alt="routes" height="310" width="730"></p>
<p>Note that you may press 
  <input name="button6" id="button6" value="Edit" type="submit"> 
on any route and the <strong><a href="Ops_EditRoutes.shtml">Edit Route </a></strong>window opens which is similar to the <strong>Add Route</strong> window.</p>
<p>You may now press 
  <input name="button7" id="button7" value="Add" type="submit"> 
  to add another route, repeating the process just completed.
</p>
<hr>

<div align="right">
<p><a href="Ops_Routes.shtml">Back</a><a href="Ops_Trains.shtml"></a></p>
<p><a href="index.shtml#Operations">Back to Index</a></p>
</div>

<!--#include virtual="/Footer.shtml" -->
</div> <!-- closes #container, started in sidebar -->
<script src="/js/main.js"></script>
</body>
</html>
