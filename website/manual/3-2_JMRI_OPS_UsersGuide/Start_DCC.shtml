<!DOCTYPE html>
<html lang="en">
<head>
<!-- Copyright ($Author: zoo $) 2009 -->
<!-- $Id: Start_DCC.shtml 17977 2011-07-18 17:23:46Z zoo $ -->
<title>DecoderPro Manual: Getting Started</title>

    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->

<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<a name="Top"></a>
<h1><img src="images/Logo.gif" alt="JMRI DecoderPro Logo" width=163 height=117 vspace="15" border=10 class="BOXIT"></h1>

<h1>Getting Started with DecoderPro&reg;</h1>
<h1>What is DCC?</h1>

<div align=right>
<p><a href="Start_DCC_Systems.shtml">Next</a>
<p><a href="index.shtml#GettingStarted">Back to Index</a>
</div>

<hr>

<h3>&nbsp;</h3>

<p>
In short, DCC is Digital Command Control, a system for operating model
railroads in a more prototypical manner. Each locomotive contains a tiny,
specialized controller. These controllers (decoders) accept digital commands over a network (the rails) addressed to them and interprets them to control the locomotive's speed, direction, lighting effects, sound, and other functions. Each decoder responds only to those commands addressed to it. Not every decoder will have functions beyond basic throttle commands available. Although there are NMRA&reg; standards for the format of communication (allowing the decoders from different manufacturers to work on the same railroad), beyond that there is considerable variety in the functions supported and the implementation of those functions.
<p>
Just like any other controller, decoders must be programmed by the user
to reach their full potential. While they come with basic "default" programs,
most users will want to customize the decoder address, motor control, lights,
sound, and other functions to meet their specific needs. You do so by editing
<b>CV</b>s, or <b>Configuration Variables</b>, in the decoder. Some CVs use values ranging from 0 to 255, others use their space in the decoder's memory as
a bank of 8 on/off switches. While this lets you do a lot with very little
memory, it can get very complex for those of us that are not on speaking
terms with binary code.
<p>
DecoderPro attempts to help overcome the inevitable complexity of this
system by providing a clear, usable, user friendly <span class="ACCENT">open
source</span> software solution for programming these on-board decoders.
Programming panel designs are written in <b>XML</b>, (a close relative
of HTML) and can be modified or even created from scratch by users with
even a passing familiarity with the format without previous XML experience. 
<hr>
<div align="right">
<p><a href="Start_DCC_Systems.shtml">Next</a><a href="Basic_Programming.shtml"></a>
<p><a href="index.shtml#GettingStarted">Back to Index</a>
</div>

<!--#include virtual="/Footer.shtml" -->
</div> <!-- closes #container, started in sidebar -->
<script src="/js/main.js"></script>
</body>
</html>
