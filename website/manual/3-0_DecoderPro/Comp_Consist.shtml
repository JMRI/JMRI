<!DOCTYPE html>
<html lang="en">
<head>
<!-- Copyright ($Author: zoo $) 2009, 2010 -->
<!-- $Id: Comp_Consist.shtml 17977 2011-07-18 17:23:46Z zoo $ -->
<title>Comprehensive Programmer - Consisting Functions Pane</title>

    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->

<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<a name="Top"></a>

<h1>DecoderPro&reg; Comprehensive Programmer</h1>
<h1>Consisting Functions Pane</h1>

<div align="right">
<p><a href="Comp_Analog.shtml">Previous | </a>
  <a href="Comp_Advanced.shtml">Next </a>
<p><a href="index.shtml#Advanced Programmer">Back to Index</a>
</div>

<hr>

<p>Consisting is a means to have two or more locomotives respond to orders from the command station, and do it together in unison.  There are a number of terms used to describe consisting, and the manufacturers don't agree what those terms should be.  The NMRA has adopted terminology, so that is what will be used in this discussion.</p>

<p>Address Consisting.  You merely set the address of every locomotive to be the same, and we can use the Basic Programmer pane to do this.  Then a DCC instruction sent to a locomotive with address XX will cause all the locomotives with address XX to respond.  It works well for locomotives that are always run together, and is portable from one layout to the other. The disadvantage is that it's a pain to keep re-addressing your locomotives if you don't always run them together.  </p>

<p>So, the NMRA came up with two additional means of consisting.  One is set up in, and remembered by the command station, and the other is set in the decoders.  </p>

<p>The NMRA calls the command station based system Basic Consisting.  The command station keeps a list of all the locos in the consist. When an action is needed the command station sends an individual packet to every locomotive in the consist, which causes them to then act together.  Since this method is command station based the consist is not portable to another system. Also, since it does not need to be programmed into the decoders, DecoderPro doesn't need to deal with it.</p>

<p>The NMRA calls the decoder based system Advanced Consisting. To implement this system the decoder has to have a special memory space (CV19) which is used to store a consist address.  This type of consisting is portable between layouts, since the information that the loco is part of a consist, and the address information for that consist is carried in the decoder. The disadvantage is that once the locomotive is assigned to a consist it will only respond to the consist address. If you forget to "break" the consist at the end of an operation, you will be puzzled as to why your locomotive won't respond to requests for motion, even though it will respond to some of the lighting functions.</p>


<p>DecoderPro utilizes the Consisting Pane to set up NMRA Advanced Consists and the response of the locomotive to function requests sent to the consist address.
</p>
<h1><img src="images/Comp_07_Consisting.png" width="920" height="799" alt="Consist panel"></h1>
<p>The  Advanced Consist Address is for <strong>EPF</strong> (<strong>Extended Packet Format</strong>, as  defined by the NMRA Recommended Practices for DCC). If the consist address is <strong>any value other than zero</strong>, the  locomotive is considered to be in a consist and will only respond to  instructions sent to the consist address. Thus we set a short address here to  create a multiple engine group that will all respond to the same address. Think  of it as an MU specific locomotive address. Since the address is in the same range as  non-consisted locomotives with short addresses, we need to be sure the address  is unique on the layout. A way of doing  this is to use higher end of the short address range starting from 127 and  going down. Most folks working with  single locomotives with short addresses tend to be using the manufacturer's  default of 3, or other low values, typicallyfor their logging locomotives.</p>
<p>This  Pane also allows one to instruct the decoder what effects are to be active when  the locomotive is in a consist, assuming the decoder is capable of responding  appropriately. As an example, this allows  you to specify if the headlights and other lighting functions are to be always  off if the locomotive is in the middle, or tail end. This can be handy if only the &ldquo;B&rdquo; unit has  sound. You can set it's lights to be off  in a consist, but it can sound it's horn even though it's in the consist.
<p>
If you've had your locomotives on another layout and ran them together, but can't get them to run separately on your home system,  check this to see if it's consist  address has been  set.
<hr>

<div align="right">
<p><a href="Comp_Analog.shtml">Previous | </a> <a href="Comp_Advanced.shtml">Next </a>
<p><a href="index.shtml#Advanced Programmer">Back to Index</a> </div>

<!--#include virtual="/Footer.shtml" -->
</div><!-- closes #mainContent-->
</div> <!-- closes #mBody, started in sidebar -->
<script src="/js/main.js"></script>
</body>
</html>
