<!DOCTYPE html>
<html lang="en">
<head>
<!-- Copyright ($Author: dat7719 $) 2009 -->
<title>Operations-A Trip Through Operations</title>

    <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->

<!--#include virtual="Sidebar.shtml" -->
<div id="mainContent">

<a name="Top"></a>
<h1>Using JMRI&reg; to Operate Trains</h1>
<h2>A Trip through Operations</h2>

<div align="right">
<p><a href="Ops_Trains.shtml">Previous</a></p>
<p><a href="index.shtml#Operations">Index</a></p>
</div>

<hr>
<p>Well, now that we've had an overview of Operations,  let's see if  we can make it work. We could sit down  and enter a whole bunch of information into the Locations, Cars, Engines,  Routes and Trains screens or do it the easy way and use the built-in Demo  Railroad. Since this is a training (pun  intended) exercise, we'll use the Demo files. <br>
To get the demo files entered, Go to the JMRI main menu and click  on Tools, scroll all the way to the bottom to select Operations( or Operations menu is set in Operations settings), and slide sideways  to select Settings. On the Operations Settings  screen select the Tools menu and then select Load Demo  Files. </p>
<p align="center"><img src="images/Ops_Operations01.png" width="742" height="482" alt="operations"></p>
<p align="left">Now go back to the DecoderPro main menu to quit and then  re-start the program. This will load the Demo files. When the program  presents the main JMRI screen, click on Tools menu, scroll all the way to the bottom to select Operations, and it expands to the Operations menu. Select Locations which opens and displays the Location window as shown below. All of the locations are shown as a list sorted by <strong>Name.</strong></p>
<p align="center"><img src="images/Ops_Operations02.png" width="497" height="217" alt="operations"></p>
<p align="left">If you select Lakeview and click on the Edit box way over on  the right of the entry for Lakeview, you'll see a screen like that below, Edit Location,  showing that Lakeview is a staging area that can accommodate almost any kind of  car. This will be the starting point for  our mythical trip.</p>
<p align="center"><img src="images/Ops_Operations03.png" width="766" height="577" alt="location Edit"></p>
<p>We will now exit <strong>Edit Location</strong> window that descibes location Lakeview Staging Area, by clicking  the window close icon (red X) in the upper right corner of the window. Also close the <strong>Locations</strong> winow in the same manner.</p>
<p>  Now, let's take a look at what resources are available to make up our  train. Open the Cars window from the Operations menu. The Cars window now lists all the cars that are in the  Operations Program database and can be chosen to make up a train, so many that there's a  scrollbar on the right to scroll throught the list.  Again clicking on the Edit box on the right we could see the specifics  of any one car and of course Edit the data (if it was our own). We won't bother.</p>
<p align="center"><img src="images/Ops_Operations04.png" width="1022" height="552" alt="cars"></p>
<p>Of course, we'll need Motive Power to pull our train, so  let's look at what's in the Locomotive stable.</p>
<p align="center"><img src="images/Ops_Operations05.png" width="1004" height="505" alt="locomotive"></p>
<p>Since we know we're departing from <strong>Lakeview</strong> we probably want  to eyeball that pair of <strong>Trainmasters</strong> sitting over on track <strong>#97.</strong> The Command Station on our Demo railroad is  obviously an NCE product because these locos are assigned <strong>NCE consist #118.</strong></p>
<p>So how does Operations REALLY work?? Well, once you have all the data entered as  we've seen above, we can generate a set of manifests for the train  operations. To do this we use the Trains  window. Select <strong>Trains</strong> from the <strong>Operations</strong> menu and the <strong>Trains</strong> window will display.</p>
<p align="center"><img src="images/Ops_Operations06.png" width="1124" height="367" alt="trains"></p>
<p>Here there are several trains ready to build. The highlighted train is <strong>LBX from  Lakeview to Bakersfield</strong>. By putting a  check mark in the box under build and then clicking the Build Box at the bottom  of the screen we were able to get the manifest built so that we can preview  it. It's a short run, but still takes more  than one page of fine print instructions for the crew.</p>
<p align="center"><img src="images/Ops_Operations07.png" width="660" height="933" alt="preview"></p>
<p align="center"><img src="images/Ops_Operations08.png" width="664" height="415" alt="preview"></p>
<p>We pick up our locomotives in Lakeview and head over to the yard  to gather up a bunch of cars and a caboose.  Then we get ready to depart at 7:10 on the fast clock. We should arrive at Farmington at 7:14, and  since there were no Farmington bound cars in Lakeview, and nothing in  Farmington bound for 
  Hillsboro or Bakersfield, the program has scheduled no work to do at  Farmington. So we'll keep going. When we arrive at Hillsboro (hopefully at  7:18), we have some set-outs and pick-ups to attend to. Then, we're off to Bakersfield, gliding  through Danville and Port Arthur on the way.  Arriving at Bakersfield right on time at 8:21, we drop the boxcar at  Heritage Furniture, the Coalhopper in the yard, and slide the caboose gently  into the caboose track. Now we can take  the motive power over to the locomotive terminal and call in to Dispatch asking for  the trip to be terminated.<br>
  The trip is terminated by selecting it in the Trains screen  and clicking the terminate button. This  would then enter the new locations of the rolling stock into the data screens  and release them for the next build.<br>
  So that wasn't so difficult, was it? Hope you enjoyed your cab ride.</p>

<hr>

<div align="right">
<p><a href="Ops_Trains.shtml">Previous</a></p>
<p><a href="index.shtml#Operations">Index</a><a href="index.shtml#Operations"></a></p>
</div>

<!--#include virtual="/Footer.shtml" -->

      </div><!-- closes #mainContent-->
    </div> <!-- closes #mBody-->
</body>
</html>
