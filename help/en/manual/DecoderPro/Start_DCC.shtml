<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="generator" content="HTML Tidy for HTML5 for Apple macOS version 5.8.0">
  <title>DecoderPro Manual: Getting Started</title><!--#include virtual="/Style.shtml" -->
  <!-- DecoderPro Styles -->

  <style>
    .dp-center {text-align: center;}
    .dp-middle {text-align: middle;}
    .dp-right {text-align: right;}
    .dp-none {list-style-type: none;}
    .dp-square {list-style-type: square;}
    .dp-upper-alpha {ist-style-type: upper-alpha;}
    .dp-lower-alpha {list-style-type: lower-alpha;}
    .dp-border-2 {border: 2px solid;}
  </style>
</head>
<body>
  <!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <!--#include virtual="Sidebar.shtml" -->

    <div id="mainContent">
      <h1 id="Top"><img src="images/Logo.gif" alt="JMRI DecoderPro Logo" width="163" height="117">
      </h1>

      <h1>Getting Started with DecoderPro&reg;</h1>

      <h2>What is DCC?</h2>

      <div class="dp-right">
        <p><a href="Start_DCC_Systems.shtml">Next</a>
        </p>

        <p><a href="index.shtml#GettingStarted">Back to Index</a>
        </p>
      </div>

      <hr>

      <p>In short, DCC is Digital Command Control, a system for operating model railroads in a more
      prototypical manner. Each locomotive contains a tiny, specialized controller. These
      controllers (decoders) accept digital commands over a network (the rails) addressed to them
      and interprets them to control the locomotive's speed, direction, lighting effects, sound,
      and other functions. Each decoder responds only to those commands addressed to it. Not every
      decoder will have functions beyond basic throttle commands available. Although there are
      NMRA&reg; standards for the format of communication (allowing the decoders from different
      manufacturers to work on the same railroad), beyond that there is considerable variety in the
      functions supported and the implementation of those functions.</p>

      <p>Just like any other controller, decoders must be programmed by the user to reach their
      full potential. While they come with basic "default" programs, most users will want to
      customize the decoder address, motor control, lights, sound, and other functions to meet
      their specific needs. You do so by editing <strong>CV</strong>s, or <strong>Configuration
      Variables</strong>, in the decoder. Some CVs use values ranging from 0 to 255, others use
      their space in the decoder's memory as a bank of 8 on/off switches. While this lets you do a
      lot with very little memory, it can get very complex for those of us that are not on speaking
      terms with binary code.</p>

      <p>DecoderPro attempts to help overcome the inevitable complexity of this system by providing
      a clear, usable, user friendly <span class="ACCENT">open source</span> software solution for
      programming these on-board decoders. Programming panel designs are written in
      <strong>XML</strong>, (a close relative of HTML) and can be modified or even created from
      scratch by users with even a passing familiarity with the format without previous XML
      experience.</p>

      <hr>

      <div class="dp-right">
        <p><a href="Start_DCC_Systems.shtml">Next</a>
        </p>

        <p><a href="index.shtml#GettingStarted">Back to Index</a>
        </p>
      </div>
      <!--#include virtual="/Footer.shtml" -->
    </div>
  </div>
</body>
</html>
