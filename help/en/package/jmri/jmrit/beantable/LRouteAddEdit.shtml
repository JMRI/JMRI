<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Adding/Editing LRoutes</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <meta name="author" content="Bob Jacobsen">
  <meta name="keywords" content="JMRI help LRoute Add Edit">
  <!--#include virtual="/Style" -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1><a name="Adding/Editing LRoutes"></a>Adding/Editing
      LRoutes</h1>

      <p>There are four tabs for adding and editing LRoutes:</p>

      <h3>Tab 1: Basic LRoute</h3>

      <p>The first thing you must do when creating an LRoute is to
      name it. In the box labeled "System Name" enter a unique name
      for your LRoute. The prefix "RTX" will be added to the System
      Name. You can optionally enter a more descriptive name in the
      "User Name" box.</p>

      <dl>
        <dt>Logix Route Type</dt>

        <dd>The radio buttons below the tab descriptions set the
        triggering mode for the "Veto" control variables (see below
        for an explanation of Veto). To emulate the behavior of
        Routes (as opposed to LRoutes) select the <b>Old</b>
        option. (Standard Routes do not not trigger when the Veto
        condition is removed.) If you want the LRoute to trigger
        when the Veto condition is removed, select the <b>New</b>
        option.</dd>
      </dl>The buttons at the bottom of the LRoute Table:

      <dl>
        <dt>Add Route</dt>

        <dd>Push this button to add a new Logix Route.</dd>

        <dt>Cancel</dt>

        <dd>Push this button to cancel editing.</dd>
      </dl>

      <h3>Tab 2: Actions (output)</h3>

      <p>This tab contains a pick list of all the Sensors,
      Turnouts, Lights and Signal Heads that have been created.
      Click the checkbox in the <b>Include</b> column to select the
      device you want to include in the LRoute. Then choose the
      action you want the device to take when the LRoute is
      triggered from the drop down menu in the <b>Set Action</b>
      column.</p>

      <p>The radio buttons allow you to limit the display of
      devices to only those you have already selected.</p>

      <h3>Tab 3: Triggers/Controls (input)</h3>

      <p>This tab contains a pick list of all the Sensors,
      Turnouts, Lights and Signal Heads that have been created.
      Click the checkbox in the <b>Include</b> column to select the
      device you want to use to control in the LRoute. Then choose
      the state you want the device to use for triggering the
      LRoute from the drop down menu in the <b>Trigger State</b>
      column.</p>

      <p>Devices selected with "non-veto" states are grouped as an
      "OR" clause. Triggers selected with a "veto" state are
      grouped as an "AND" clause. That is, when <i>any</i>
      "non-veto" state becomes True, the LRoute is able to trigger.
      However, if <i>any</i> of the "veto" states is True, the
      LRoute will not trigger.</p>

      <p>On Tab 1, the Logix Route Type <b>New</b> will put the
      above logic into a single Logix Conditional. If the
      <b>Old</b> option is selected, each trigger with a "non-veto"
      state is put into a separate Conditional. The behavior for
      this option is: the LRoute will trigger whenever one of these
      device states becomes True - even when the logical expression
      as a whole is already True. Another difference when the
      <b>Old</b> option is specified, is that the "veto" variables
      are not enabled for triggering. This means the actions are
      not triggered when the vetoes are removed. Use the <b>New</b>
      option if you want actions to be triggered when the vetoes
      are removed. In summary, the <b>Old</b> option emulates a
      standard Route and the <b>New</b> option has the behavior of
      a standard Logix Conditional. Variations on these behaviors
      can be tuned with further editing in the Logix Table.</p>

      <p>Note that control variables selected with "On Change"
      states need a separate Logix Conditional in order for the
      LRoute actions to trigger on every change of state of these
      variables.</p>

      <p>The radio buttons allow you to limit the display of
      devices to only those you have selected.</p>

      <h3>Tab 4: Alignment/Locks/Etc.</h3>

      <p>This tab contains a pick list of the Sensors that have
      been created. Click the checkbox in the <b>Include</b> column
      to select a Sensor you want to use for indicating completion
      of the LRoute actions. Then choose the type of action you
      want the Sensor to monitor from the drop down menu in the
      <b>Alignment</b> column. You may choose to have the Sensor
      indicate a particular type (Sensor, Turnout, Light, Signal
      Head or "All")</p>

      <p>The radio buttons allow you to limit the display of
      devices to only those you have selected.</p>

      <p>A sound file may be entered to play when the LRoute is
      triggered. Likewise a script file may be run when the LRoute
      is triggered.</p>

      <p>Back to the <a href="LRouteTable.shtml">LRoute Table help
      page</a>.</p><!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
