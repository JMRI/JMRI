<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<HTML LANG="en">
<HEAD>
<TITLE>JMRI: Sensors Table Help</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META CONTENT="Bob Jacobsen" NAME="Author">
<META NAME="keywords" CONTENT="JMRI help Sensor Table">

<!--#include virtual="/Style" -->
</HEAD>

<BODY>
<!--#include virtual="/Header" -->
  <div class="nomenu" id="mBody">
    <div id="mainContent">

<H1>The Sensors Table</H1>

<P>The Sensors Table contains a list of the Sensors that exist for this
Panel.

<H2>Sensors Table Columns</H2>

<DL>
	<DT>User Name</DT>
	<DD>You can directly enter or change the "User Name" for an
	existing Sensor.</DD>

	<DT>State</DT>
	<DD>Pushing the "State" command button will change the state of an
	existing Sensor.</DD>

	<DT>Delete</DT>
	<DD>Pushing the "Delete" button will remove the Sensor from the
	table. 
	<p>
	Note that this doesn't remove the Sensor from any files you've
	saved that contain it. If you load one of those files, perhaps
	when you restart the program, the Sensor will reappear.
	You should use one of the "Store to file" options in the "File"
	menu to save new versions of any files that contain this Sensor.
	</DD>

	<DT>Inverted</DT>
	<DD>When checked, the Sensor command and status is inverted. For
	example, an inverted Sensor means that when the layout sends an
	"active" Sensor command, the Sensor becomes "inactive" to JMRI.</DD>
    
    <DT>Use Global Delay</DT>
    <DD>When checked, the Sensor will use the system values specified in the
    "Debounce|Defaults..." menu option for the duration which the system waits for
    before it registers the change of state.
    <p><A HREF="#Debounce">See Sensor Debounce below</A>
    </DD>
    <DT>Active Delay/ InActive Delay</DT>
    <DD>Specify the amount of time in milliseconds that the system waits before 
    registering the state change of a Sensor.
    <p><A HREF="#Debounce">See Sensor Debounce below</A></DD>
    
</DL>

<H2>Sensors Table Controls</H2>

There is also a button at the bottom of the Sensor Table

<DL>	
	<DT>Add...</DT>
	<DD>Push this button to add a new Sensor. For more information see
	<A HREF="SensorAddEdit.shtml">Adding/Editing Sensors</A>.</DD>
</DL>

<H2><A NAME="Debounce"></A>Sensor Debounce</H2>
<p>The Sensor Debounce facility is there to help prevent false triggers of a Sensor
being passed into the system and triggering other events in the system.<br>
Such false triggers could be due to a dirty piece of track or electrical interference.

<p>Debounce allows you to assign a period in milliseconds before the change
is registered with the rest of the system.  If within that period the state has
not changed, the Sensor state will be passed onto the rest the of the system.<br>
    
However if the Sensors state is different after the timer has finished, then the 
system will restart the process. This time, after the timer has finished it will
check to see if the Sensor is in the same state as it was before it restarted 
the process. If not, the process is re-started again until the state is the same
before and after the timer is run.
    
    </DD>
<!--#include virtual="/Footer" -->
</div>
</div>
</BODY>
</HTML>

