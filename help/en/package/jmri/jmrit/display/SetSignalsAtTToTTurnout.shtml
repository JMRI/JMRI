<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="generator" content="HTML Tidy for HTML5 for Apple macOS version 5.8.0">
  <title>JMRI: Set Signals at Throat-to-Throat Turnouts Help</title>
  <meta name="author" content="Dave Duchamp">
  <meta name="keywords" content="JMRI help Layout Editor panel">
  <!--#include virtual="/Style.shtml" -->
</head>
<body>
  <!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <div id="mainContent" class="no-sidebar">
      <h1>Set Signals at Throat-to-Throat Turnouts</h1>

      <h2>Introduction</h2>

      <p>This tool provides an automated procedure for assigning signals to two turnouts in close
      proximity oriented throat-to-throat, with the throats connected by a single track segment.
      This arrangement is used where four tracks come together in a small area, so closely that no
      signals are placed at the turnout throats. Such a setup is used to model a double-slip
      turnout, for example, but can also occur in other contexts. Each of the two turnouts may be
      either right-hand (RH), left hand (LH) or wye (WYE) turnouts. Schematically, the final
      throat-to-throat setup looks as shown below:</p>
      <a href="./images/TToTTurnout8.gif"><img src="./images/TToTTurnout8.gif" width="280" height=
      "75" alt="set thoat to thoat signals"></a>
      <p>If requested, this tool will place signal icons on the panel at the continuing and
      diverging legs of the two turnouts, and will set up control logic for specified signal heads.
      Either one or two signal heads may be placed at each leg of the turnouts. The continuing leg
      is the track connected when the turnout is "CLOSED", and the diverging leg is the track
      connected when the turnout is "THROWN".</p>

      <p>Prior to selecting this tool, both turnouts must be on the panel connected
      throat-to-throat by a single track segment, and required signal heads must be in the Signal
      Head Table. This tool places signal heads only when the main track of the turnouts is
      vertical or horizontal (or mostly vertical or horizontal) on the panel, so design your panel
      accordingly. The control logic created by this tool only works correctly if each of the track
      segments connected to the continuing and diverging legs of the two turnouts is assigned to a
      different block. It works best if the track segment connecting the two throats and the two
      turnouts are in a fifth different block, but this is not required.</p>

      <p>When this item is selected, a dialog is shown for entry of the names (system or user) of
      the two turnouts, and the names (system or user) of four to eight signal heads to be assigned
      to the two turnouts. You may enter both turnout names, or enter only one turnout and allow
      the program to find the other. To check that the second turnout has been found correctly,
      click the <strong>Get Saved</strong> button.</p>

      <p>For each signal head, check boxes are available for selecting whether an icon is to be
      placed on the panel, and whether control logic is to be created for the signal head.
      Regardless of whether icons are placed or logic is created, Layout Editor will record that
      the entered signal heads are assigned to the specified turnouts.</p>

      <p>When two turnouts are setup using this throat-to-throat set up tool, Layout Editor keeps
      track of that fact. So if you select <strong>Set Signals...</strong> in the popup menu of
      either turnout, you will return to this dialog with both turnouts filled in. If you should
      later desire to 'unlink' the two turnouts and add signals at their throats, for each of the
      turnouts, select <strong>Set Signals at Turnout...</strong>, fill in the turnout name
      manually, enter signal heads, and click <strong>Done</strong>.</p>

      <h3>The Set Signals at Throat-to-Throat Turnouts Dialog</h3>

      <p>In the <strong>Turnout 1 Name</strong> and <strong>Turnout 2 Name</strong> field, enter
      the name (system or user) of one or two of the turnouts. If only one is entered, the tool
      will find the other when the <strong>Done</strong> or <strong>Get Saved</strong> buttons are
      clicked. If the tool cannot find the second turnout, or if the two entered turnouts are not
      on the panel or not connected throat-to-throat by a single track segment, an error message
      results. It makes no difference which turnout you call <strong>Turnout 1</strong> and which
      you call <strong>Turnout 2</strong>.</p>

      <p>Signal Head names (either system or user) are entered in the next section. If signal heads
      at these turnouts have been entered previously, click <strong>Get Saved</strong> to retrieve
      the signal head names previously entered. The tool provides for entry of two signals at each
      of the continuing and diverging tracks of each turnout (as shown in the figure above). These
      signal heads show the status for moving to the continuing or diverging tracks of the other
      turnout. First the signal heads located at <strong>Turnout 1 - continuing track</strong> are
      entered. The <strong>continuing track</strong> signal head is required, but the
      <strong>diverging track</strong> entry is optional. If only the <strong>continuing
      track</strong> signal head is entered, the tool assumes that head is signaling both tracks of
      the other turnout, similar to when only one signal head is placed at the throat of a single
      turnout.</p>

      <p>Next the signal heads located at <strong>Turnout 1 - diverging track</strong> are entered.
      Remember this is the turnout 1 leg that is connected when the turnout is set THROWN. When two
      heads are entered, the head closest to the points signals the status of the continuing track
      (the turnout CLOSED track) of the other turnout. Similarly, the signal heads located at
      <strong>Turnout 2 - continuing track</strong> and <strong>Turnout 2 - diverging
      track</strong> are entered.</p>

      <p>If there was a signal head previously assigned to any position, and you enter a
      <em>different</em> signal head in the same place, the new signal head will replace the
      previous signal head, and the icon of the previous signal head (if there was one) will be
      deleted from the panel. Similarly, if you replace a previously assigned
      <strong>Diverging</strong> signal head with a blank entry (no signal head), the previous
      entry is deleted, and there will not be any signal head at that position. <strong>If a signal
      head is changed, you must redo any logic that involves it.</strong> In particular, if you
      delete a diverging signal head, you must redo the logic for the continuing signal head
      located on the same track.</p>

      <p>Check <strong>Add Signal Icon to Panel</strong> to request that an icon for a signal head
      be placed on the panel at the turnout position indicated. This tool can only place a signal
      icon on turnouts that are almost vertical or almost horizontal. If this is not so, a message
      is printed, and you should place the signal icon manually using the Layout Editor tool bar.
      Regardless, the signal head name is assigned to the specified turnout position. This
      assignment is important for setting up logic for other signals down the track.</p>

      <p>Check <strong>Set up Logic</strong> to request that the tool set up signal control logic
      for a signal head. For each of these signal heads, the tool creates a Simple Signal Logic for
      that head, and in addition creates a Logix that ensures that the turnout the signal is placed
      on is not thrown against the leg the signal is placed on. The tool will attempt to setup the
      logic and automatically fill in entries from the information available. If the tool does not
      have enough information available to set up the logic, a message results, and you will have
      to return later after more blocks (with occupancy sensors) and/or signals have been assigned
      to turnouts and block boundaries on the panel.</p>

      <h3>Notes</h3>

      <p>The tool will set up the Simple Signal Logic to set all signals red if the block
      containing the two turnouts and their connector track is occupied. If this is not what you
      want, you should edit the Simple Signal Logic by removing the occupancy sensor of that
      block.</p>

      <p>When setting up logic, this tool will follow track within a block until it finds a signal
      at the end of the block away from the turnout being signaled. If your layout contains
      sections that are signaled and sections that are not, to get this tool to set up logic
      correctly, you may have to create and assign a virtual signal (a signal that does not
      correspond to an actual signal on the layout) at the unsignaled end of the block that
      connects track that is signaled with track that is not signaled. (You do not need to add an
      icon for the virtual signal to your panel, but it must exist in your signal head table, and
      must be assigned to a turnout or block boundary using a Set Signals ... tool.) If a block
      ends with an end bumper, no virtual signal is required at the end bumper end.</p>

      <p>If a block has an internal turnout (the turnout, and the track segments at its throat and
      continuing legs are within the block), the program will expect signals at that turnout even
      if it's not at the end of the block. However, at times the user may not want to signal a
      seldom used turnout within a block. When following track through a block, the program will
      skip over unsignaled internal turnouts if <strong>Skip Unsignaled Internal Turnouts</strong>
      is checked in the Layout Editor <strong>Tools</strong> menu. It will always, however, warn
      that it is doing so. <strong>Use this option with caution.</strong> There is no signal
      protecting against a skipped turnout being set incorrectly, so if an unsignaled internal
      turnout is not set correctly, derailed trains could result.</p>

      <p>When setting up the Logix used in the control logic, the tool creates an internal sensor
      to communicate with the Simple Signal Logic. The Logix will appear in your Logix table, and
      the internal sensor will appear in your sensor table. The system names of the Logix and
      internal sensor will be, IX or IS followed by TTT_X_HHH, where TTT is the system name of the
      turnout where the signal head is located, X is either C or T depending on whether the signal
      head is located on the continuing (CLOSED) track or the diverging (THROWN) track, and HHH is
      the system name of the signal head. The purpose of this Logix is to ensure that the aspect of
      the signal head will be red if the turnout where the signal head is located is switched
      against the track the signal is on.</p>

      <p>This tool sets up three-aspect signaling. When a signal head is showing the status when
      moving to a diverging route, the tool will set up for limited speed (the least restrictive
      aspect is not green, but yellow), and the signal will show yellow when it otherwise would
      show green. You can change this with a simple edit (see below).</p>

      <p>If you have a special situation at a signal, you may have to edit the information entered
      by this tool into the Simple Signal Logic. If you would like four-aspect signaling, you can
      easily manually edit the logic to achieve this. Similarly, by simple hand edits of the logic,
      you can add approach lighting. If you don't want yellow when moving to the diverging route,
      but prefer green, open the Simple Signal Logic for the head you want to change and uncheck
      <strong>Limited Speed</strong>. The Simple Signal Logic dialog can be accessed from the popup
      menu of each signal icon. If your special situation cannot be handled by Simple Signal Logic,
      you should refer to Logix to tailor the signal logic to your needs.</p>

      <p><strong>Please remember to save your panel after using this tool.</strong>
      </p>
      <!--#include virtual="/Footer.shtml" -->
    </div>
    <!-- closes #mainContent-->
  </div>
  <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
