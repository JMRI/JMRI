<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Warrants Help</title>
  <meta name="author" content="Pete Cressman">
  <meta name="keywords" content="JMRI Warrant Help"><!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1>Warrants</h1>A Warrant is a collection of information
      sufficient to run an automated train. It will set the
      turnouts for a specified route and drive the train over the
      route. When running, using block occupancy detection and
      signal configuration, it will make a best effort to control
      speed according to signal aspects or by occupancy of other trains or other
      track conditions ahead. A JMRI Warrant is suggestive of what
      a warrant does on a prototype railroad, but there is no
      intention to replicate any particular railroad's mode of
      operation. It is simply the idea of giving an automated train
      the trackage rights to move from point A to point B.

      <p><b>Warrants</b> depend on having an accurate description
      of the layout in terms of <b>OBlocks</b>, <b>Portals</b> and
      <b>OPaths</b>. These elements are created by entering data
      into the <b>Occupancy Block Tables</b> or by using the
      graphical interface of the <b>Circuit Builder</b>. Initially
      neither of these subsystems are visible in Control Panel
      Editor.</p>

      <p>It is important that the scale of your layout is known so
      that the warrant can compute the distances required when
      encountering signals. Go the <b>Warrants</b> panel of
      <b>Preferences</b> to set the layout scale. There are other
      parameters related to warrants there, that you may wish to
      change later, but the defaults are generally sufficient
      without change. See <a href=
      "../../../apps/TabbedPreferences.shtml#Warrants">Warrant
      Preferences</a> for information about configuration of
      warrant parameters.</p>

      <h2>How To Get Started</h2>
		Definitions of OBlocks, Portals and OPaths are found at
        <a href="OBlockTable.shtml">The Occupancy Block
        Tables</a>.
        <ul>
        <li>Opening the Occupancy Block Tables is done by either
        the <b>Tools-&gt;Tables-&gt;Occupancy Blocks</b> menu item
        from the menus in the main PanelPro window, or by
        the <b>Add Items-&gt;Occupancy Blocks</b> menu item 
        from the menus of Control Panel Editor. How to create
        OBlocks, Portals and OPaths using these tables is described in <a href=
        "OBlockEdit.shtml">Creating and Editing OBlocks, Portals
        and OPaths</a>.</li>

        <li>OBlocks, Portals and Paths can also be created using the
        <b>Circuit Builder</b> tool found in the Control Panel
        Editor. Here, OBlocks, Portals and OPaths are created by
        selecting track icons of your layout diagram.
        Initially, the Circuit Builder can be opened using
        the <b>Open Circuit Builder</b> menu item under the
        <b>Warrants</b> menu. Instructions for use are found in
        <a href="../display/CircuitBuilder.shtml">The Circuit
        Builder</a>.</li>
      </ul>

      <h3>What is Circuit Builder</h3>Circuit Builder is an
      interactive tool that creates OBlocks, Portals and Paths
      graphically. It is necessary to have a track diagram of your
      layout expressed with track icons (track segments and turnout
      icons) in a Control Panel Editor panel. OBlocks and OPaths
      are created by clicking on the track icons. The
      Circuit Builder can convert the track segments and turnout
      icons of your layout into Indicator Track and Indicator Turnout
      icons. These icons display the status of the OBlock they
      represent by color, i.e. whether the track circuit of the OBlock
      is occupied or unoccupied, whether a warrant has allocated it
      or whether a train under warrant currently is proceeding over
      the circuit. Details are found at <a href=
      "../display/CircuitBuilder.shtml">The Circuit Builder</a>,

      <h3>Compatibility With Layout Editor</h3>OBlocks, Portals and
      OPaths can be used with Layout Editor. Compatibility is
      achieved by using the same occupancy detection sensors for
      LayoutBlocks as for OBlocks. If there is no corresponding
      Control Panel layout diagram, Circuit Builder cannot be used.
      The Occupancy Block Tables will have to be used to define the
      OBlocks, Portals and Paths.

      <h3>More About Getting Started</h3>In order to create a
      <b>Warrant</b> you must first have created two or more
      OBlocks. These blocks don't have to be fully defined, but
      their existence indicates that you are interested in using
      Warrants, that is, you have a block to start a train and a
      block to stop it. When two or more OBlocks exist Control
      Panel Editor will change the items under the <b>Warrants</b>
      menu to be the following menu items. The Warrant menu items
      are:

      <ul>
        <li><b>Warrant List</b>: - Opens a table of warrants from
        which you can control warrant routes and dispatch trains.
        See <a href="WarrantTable.shtml">The Warrants
        List</a>.</li>

        <li><b>Edit Warrant...</b>: - Shows the list of existing
        warrants. Selecting one will open a Warrant Editing Window.
        The operations of this frame are discussed in <a href=
        "CreateEditWarrant.shtml">Creating and Editing
        Warrants</a>.</li>

        <li><b>Create New Warrant</b>: - After providing system and
        user names this opens a blank Warrant Editing Window to
        create a new warrant. The operations of this frame are
        discussed in <a href="CreateEditWarrant.shtml">Creating and
        Editing Warrants</a>.</li>

        <li><b>Train Trackers</b>: - Opens window where the
        identity of trains can be displayed as they are moved by
        operators from one occupancy block to another.</li>

        <li><b>Create NXWarrant</b> - Opens a window to create a
        temporary eNtry/eXit warrant. this is discussed in <a href=
        "NXWarrant.shtml">About NXWarrants</a>.</li>

        <li><b>Open Session Log</b> - Opens a window to name a file
        that records the warrant and train tracking status
        messages.</li>
      </ul>

	  <h3>Warrants without Occupancy Detection</h3>
	    It is possible to create and run warrants without block 
	    detection.  OBlocks can be defined when they 
	    do not necessarily have to have detection sensors.  Such blocks
	    are called "Dark Blocks".  Dark blocks, the portals and paths
	    within the block can be defined for a layout diagram
	    without detection sensors.  A Warrant
	    can be recorded and can be played back, including 
	    having its route set.  However, be advised for such trains
	    without detection sensors
	    <b><i>there is no protection for having it collide with 
	    other trains or throwing switches under other trains.</i></b>
	    It will proceed <b>only</b> according to the <i>elapsed times</i>
	    and <i>throttle settings</i> that were recorded.

	  <h3>Warrants without Turnout Control</h3>
	    It is possible to create and run warrants without having
	    turnouts thrown by JMRI. JMRI internal turnout devices will
	    show the route on the layout panel, but you will need to manually
	    set and verify that the route is properly set on the layout itself.
	    Again, the train will proceed according to the <i>elapsed times</i>
	    and <i>throttle settings</i> that were recorded.
	    
	    <h3>The Importance of Block Path Lengths</h3>
	    A Warrant detects a position of its train when it enters
	    a block having occupancy detection.  All other positional 
	    information must be calculated. For this, the track speed of the
	    train and the length of the path it is on must be known.

	    <p>To properly respond to a slower speed change required by a 
	    signal aspect, the train should prototypically slow down and
	    complete the speed change before entering the block the signal
	    protects.  This requires the warrant to calculate the time and
	    position for the slowdown to occur.
	    </p><p> 
	    See <a href="SpeedChanges.shtml">When Warrant Speeds Are Modified</a>
	    for what track conditions require speed changes, they are detected
	    and how warrants make gradual changes of speed.
	    
      <h3>Warrant Types</h3>There are three types of warrants:
      <ul>
        <li>A <b>Recorded Script Warrant</b>, where throttle commands 
        are recorded from a throttle you use to drive a train over
        preselected route. The warrant then replicates all the
        commands when played back. To create a recorded script
        warrant, select the <b>Warrants-&gt;Tables-&gt;Create New Warrant</b>
        menu item.</li>

        <li>An <b>NXWarrant</b>, (eNtry/eXit) where throttle commands 
        are generated automatically to move a train between blocks
        chosen "on the fly" by you. To create an NXWarrant, 
        select the <b>Warrants-&gt;Tables-&gt;Create NXWarrant</b>
        menu item.</li>

        <li>A <b>Fast reacting</b> warrant. This type does not follow
        the rules used by warrants, but reacts to signals
        when entering their approach block with an immediate speed
        change. To create such a
        warrant, select the <b>Warrants-&gt;Tables-&gt;Create New Warrant</b>
        menu item.</li>
      </ul>

      <h2>Creating a Warrant</h2>
      A warrant consists of two
      parts; The route over which a train will run and the commands
      it will receive when running over the route. For a Warrant, you
      drive the train over the route you selected and the commands you
      used are recorded for playback later. For an NXWarrant, commands
      are generated automatically for the route you have selected.

      <a name="CreateRoute" id="CreateRoute"></a>
      <h3>Creating the Route</h3>A warrant route is a series of block
      paths linked together so a train may travel over it. A
      warrant route is created by first choosing an <b>origin
      block</b>, a starting path and a portal to exit the
      originating block. Then, a <b>destination block</b> is chosen
      and a path on which to end the route. Optionally, you may
      also chose a <b>Via</b> block, that is, a block that route
      <i>must</i> include and a <b>Avoid</b> block, that is, a
      block the the route <i>must not</i> include. Blocks are
      chosen by typing in the block name or dragging it from a
      displayed OBlock table. Blocks can also be chosen by clicking
      on track icons that represent these OBlocks. To use this
      feature your panel must have your layout depicted by
      Indicator Track Icons placed there by Circuit builder or
      by you manually.
      Successive clicks cycle the choices through the four block
      fields.

      <p>A computer algorithm determines all the intermediate
      blocks, portals and paths to make the route. If more than one
      route meets the criterion, you are presented with a list to
      review and select the route you want. Note that the Portal
      and Paths need to be chosen for the route also. If no route
      is found, a dialog is offered where you can examine the
      routes that were attempted with the current Block, Portal and
      Path selections.
      <a href="CreateEditWarrant.shtml">Creating and Editing
      Warrants</a> has more information about creating routes.</p>

      <h3>Scripting the Train Action</h3>The second part of a
      Warrant are the throttle commands to control the train as it
      traverses the route. These commands are recorded
      automatically by running a train over the route in "Learn
      Mode" or are generated automatically as an "NXWarrant". The
      script commands contain the elapsed time between commands.
      Playback will duplicate this timing. However when a warrant
      is run with a different engine or a different consist, or
      even the same train depending whether the motor is hot or
      cold, this timing may not be replicated exactly. Because of
      this the command script is synchronized upon entering each
      detection OBlock. So, if the train is slow in reaching the
      next block, the commands for the next block will be delayed
      until the train enters the block. Conversely, if the train
      reaches the next block ahead of time, any remaining commands in
      the block just left will issued with no elapsed time so that
      the train can <i>catch up</i> to the script.

      <p>Warrant scripts are recorded or generated with a
      <i>"Clear"</i>, aspect throughout the route even through
      blocks with restricted speeds. These speeds in the script are
      the <i>"Normal"</i> speeds. However, after creation when running, track
      conditions may not be <i>"Clear",</i> due to a signal's speed
      restriction, a block's speed restriction, occupancy by a
      rouge train or even intervention by you to halt the train. 
      Warrants are able to deal with these
      restrictions and will modify their <i>Normal"</i> speeds as needed
      to comply with the restrictions. 
      <a href="SpeedChanges.shtml">When Warrant Speeds Are Modified</a>
      explains this relationship.</p>

      <h4>Recording Scripts</h4>This is done by putting a screen
      throttle into <i>Learn Mode</i> that records all the throttle
      commands you make when driving the train over the route. This
      script can then be replayed to drive the train automatically.
      All possible throttle functions can be recorded and played
      back. <a href="CreateEditWarrant.shtml">Creating and 
      Editing Warrants</a> details how to do this.

      <p>With LocoNet you may steal the address and manual
      LocoNet throttle. For other command systems, a WiFi
      throttle may take the same address as the screen throttle 
      and be used to record a walk around script.</p>

      <h4>Generated Scripts</h4>For NXWarrants the script is
      generated by the warrant itself. It ramps the train up to a
      specified speed and ramps it down at the destination. It
      obeys all the traffic occupancy and signals as do the
      recorded warrants. See <a href="NXWarrant.shtml">About
      NXWarrants</a> for how to run them.

      <h4>"Normal" Track Speeds</h4>
      When recording a warrant throttle command script, the train
      should be run with all track conditions set to "Clear". 
      NXwarrant script are generated using "Clear" track conditions also.
      This is reported in status messages as the "<b>Normal</b>"
      speed.  However, when running the warrant, the train may 
      be confronted with occupation ahead by another train or
      a signal required a reduction of speed. Warrants respond
      to these and other track conditions by automatically
      modifying the scripted throttle settings.
      <a href="SpeedChanges.shtml">When Warrant Speeds Are Modified</a>
      has details about how warrants modify recorded speeds.

      <h3>Customizing the Script</h3>A warrant script can be edited
      to modify the recorded commands. Additional non-throttle
      events can be added to the script such as triggering or
      responding to external sensors. <a href=
      "CreateEditWarrant.shtml">Creating and Editing Warrants</a>.
      has more information about creating and customizing scripts.


      <h2>Using the Warrant List</h2>The <b>Warrant List</b> menu
      item opens the <b>Warrant Table</b>. Each row is a warrant
      that has been created and saved or is a running NXWarrant.
      The Warrant Table reports the current status of each warrant
      in the list and can issue commands to Halt, Resume or Abort.
      Warrant routes can be allocated, i.e. reserved for that
      warrant, the turnouts for route can be set and when the
      warrant is run, its status is shown and controlled using the
      columns in the table. See <a href="WarrantTable.shtml">The
      Warrant List</a> for information about the table.

      <h2>Tracking Trains</h2>Any train running on the layout can
      be tracked. The layout must be represented with Indicator
      Track Icons to track trains. The fourth Warrants menu item
      opens the <b>Tracker Table</b>. Pressing the <b>New
      Tracker</b> button in this window opens a dialog to enter a
      train name and the OBlock it occupies. Pressing the done
      button creates a row in the Tracking Table. The row shows the
      train name and the block it currently occupies and the length
      of time it has occupied the block. As the train moves from
      block to block, this status is updated. The Indicator Track
      Icons can display the train name.

      <div style="margin-left: 2em">
        <b>Note:</b> The <b>Edit Icon</b> popup menu item opens a
        dialog for Indicator Track Icons have a <b>Display Train
        Name when occupied</b> checkbox to select to display text
        for train tracking or warrant running.
      </div>The window also has a <b>Refresh Tracker Info</b>
      button to poll the trackers listed in the Tracker table and a
      <b>OBlock Pick List</b> button to display a picklist.

      <p>The location of the train can be set by typing, by
      dragging block name from the picklist, or by clicking on a
      Indicator Track Icon in the panel.</p>

      <p>Tracking can also be done for a train by dragging and
      dropping a Loco Icon onto the OBlock the train occupies. This
      is the most simple way of tracking in that both the names and
      location are done with a single drag and drop.</p>

      <h2>Using Warrants in Logix</h2>Several of the operations
      that can be done from the Warrant List and Warrant Editing
      frame can be done with Logix Conditionals. You may design and
      implement a dispatcher's panel using the Warrant state
      variables and actions found in Logix.

      <h3>Warrant State Variables</h3>When a warrant has been
      allocated or is in effect, the following state variables can
      be tested in a Logix conditional.

      <ul>
        <li><b>Route Free</b>: - True when all blocks in the
        warrant route are not allocated to anyone and are not
        occupied. False otherwise.</li>

        <li><b>Route Set</b>: - True when all blocks in the warrant
        route are allocated and the turnouts set for this warrant.
        False otherwise.</li>

        <li><b>Route Allocated</b>: - True when all blocks in the
        warrant route are allocated to this warrant. False
        otherwise.</li>

        <li><b>Route Occupied</b>: - True when none of the blocks
        in the warrant route, other than the origin block, are
        occupied. (Assumes the train of this warrant is occupying
        the origin block). False otherwise.</li>

        <li><b>Train Running</b>: - True when the train specified
        in the warrant is running either in Learn Mode or Auto Run
        Mode. False otherwise.</li>
      </ul>

      <h3>Warrant Actions</h3>

      <ul>
        <li><b>Allocate Warrant Route</b>: - Allocates the route to
        this warrant.</li>

        <li><b>Deallocate Warrant</b>: - Deallocates the route of
        this warrant (only). This will not deallocate the route of
        a different warrant.</li>

        <li><b>Set Route Turnouts</b>: - Sets the signals and
        turnouts for the route as far along the route that it can
        until it reaches an occupied block or a block allocated to
        another warrant.</li>

        <li><b>Auto Run Train</b>: - Issue the throttle commands to
        the train in the warrant. This should only be done when the
        train occupies the Origin block.</li>

        <li><b>Set Train Id</b>: - Set the engine consist to be
        used in the warrant from a trainId in the Engine Roster.
        Alternatively, the DCC address can be used to identify the
        engine.</li>

        <li><b>Set Train Name</b>: - Set the name of the train to
        display in the loco marker indicating the current position
        of the train when running.</li>

        <li><b>Control Train</b>: - Send a control command
        (<b>Halt</b>, <b>Resume</b> or <b>Abort)</b> to a running
        train under warrant.</li>
      </ul><!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
