<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="generator" content="HTML Tidy for HTML5 for Apple macOS version 5.8.0">
  <title>JMRI: LogixNG Debugger</title>
  <meta name="author" content="Daniel Bergqvist">
  <meta name="keywords" content="JMRI logixng debugger"><!--#include virtual="/Style.shtml" -->
</head>
<body>
  <!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <!--#include virtual="../../../../html/tools/logixng/Sidebar.shtml"-->

    <div id="mainContent">
      <h1>JMRI: LogixNG Debugger</h1>

      <p>Sometimes it can be difficult to understand exactly what's going on in a ConditionalNG.
      LogixNG therefore has a debugger that allows to step by step walk thru a ConditionalNG to
      see what it's actually doing.</p>

      <p>To use the debugger, it must be enabled. In <i>Preferences -> LogixNG</i>, the option
      <i>Install debugger</i> must be enabled.</p>



      <h2>Using the debugger</h2>

      <p>The debugger starts when the ConditionalNG is executed, for example when one of its
      actions or expressions triggers it. The ConditionalNG can also be executed by selecting
      the menu choice <i>Debug -> Execute</i>.</p>

      <p>When the ConditionalNG has started executing, the debugger will stop it before the
      first action. This is shown by a frame around the action where the upper border will be
      thick.</p>

      <p>You can then step by step thru the ConditionalNG by selecting the menu item <i>Debug -> Step into</i>.
      The debugger will then stop both before and after executing/evaluating the action/expression.
      When the debugger stops at an action/expression, the item will be marked by a border. When the debugger
      stops before the item, the upper border will be thick. When the debugger stops after the item, the lower
      border will be thick.</b>

      <p>If the item has children, you can jump over the children by instead selecting the menu item
      <i>Debug -> Step over</i>.</p>

      <p>If you want to run the ConditionalNG instead of stopping on each item, you select the menu item
      <i>Debug -> Run</i>.</p>


      <h2>Status pane</h2>

      <p>On the right side of the debugger window, there are three panes. The top pane shows status if it's
      available. Example of status is the return value of expressions. If the debugger stops after an
      expression, the status pane will show the result of the expression, for example <i>Return value True</i>.</p>


      <h2>Local variables pane</h2>

      <p>On the right side of the debugger window, the middle pane shows the current local variables.</p>


      <h2>LogixNG threads and the debugger</h2>

      <p>Then the debugger is stops before or after an action/expression in the ConditionalNG,
      it blocks further execution of both this ConditionalNG and all other
      ConditionalNGs that is executed in the same thread. It's therefore recommended to move
      the ConditionalNG to a separate thread when the debugger is used, so that the debugger
      doesn't block the other ConditionalNGs.</p>

      <p>To change the thread a ConditionalNG is using, <a href="LogixNGTableEditor.shtml">edit</a> the
      LogixNG that the ConditionalNG belongs to and click on the button <i>Edit threads</i> for the
      ConditionalNG. There is a pre created thread, <i>Debug thread</i>, that can be used for this.</p>


      <!--#include virtual="/Footer.shtml" -->
    </div>
    <!-- closes #mainContent-->
  </div>
  <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
