<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id$ -->

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Adding/Editing SignalMast Logic</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <meta content="Kevin Dickerson" name="Author">
  <meta name="keywords" content=
  "JMRI help SignalMast Logic Add Edit"><!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1><a name="Adding/Editing Routes"></a>Adding/Editing Signal
      Mast Logics</h1>

      <p>The first thing you must do when creating a Signal Mast
      logic is to select the source followed by the destination
      Signal masts. The source signal mast is one which you wish to
      control at set the appearances on. The destination signal
      mast is the next signal mast down the line, the appearance of
      the destination mast along with the state of the turnouts and
      blocks will have a direct effect on the appearance of the
      source signal mast.<br>
      If you are not using the Layout Editor, then NO validation is
      performed of the source and destination mast. If the layout
      editor is being used, then the system will try and determine
      if the destination mast is reachable from the source
      mast.</p>

      <p><b>In Edit Mode Only</b> The maximum permissable path
      speed between the two signalmast is displayed, this is
      determined by the speeds configured against the blocks and
      turnout.</p>

      <p>The check box "Use Layout Editor Paths" allows you to get
      the system to automatically generate the required blocks,
      turnout and signal masts along with their states that are
      located between the source and destination signal masts.<br>
      On selecting "Using Layout Editor Paths", two further check
      boxs will appear, "Use Turnout Details From Layout Editor"
      and "Use Block Details From Layout Editor" Selecting either
      of these will determine what information from the layout
      editor is used when the system automatically generates the
      route.<br>
      The automatically generated information is not saved with the
      panel file, this information is generated each time the
      layout panel is opened.<br>
      If the information on the layout editor panel is edited, the
      change is not reflected in the SignalMast Logic, you will
      need to store the panel, close JMRI and re-open the panel for
      the Logic to be updated.</p>

      <p>The "Allow The Logic to Automatically Determine
      Conflicting SignalMast" option tries to determine which
      signals could possibly cause a conflicting route if they were
      not set to danger.</p>

      <p>The "Lock Turnouts when Signal Mast Logic is Active"
      feature allows you to selectively disable accessory
      (turnouts) commands from cabs and/or locally-wired
      pushbuttons. JMRI disables pushbuttons by sending pushbutton
      disable commands to the turnout decoders when the route is
      locked, and enables the pushbuttons when the route is
      unlocked. When locking a turnout from cab commands, the JMRI
      program will monitor the turnout's accessory address and if
      it detects a change command from a cab, will cancel the
      command immediately by sending out the opposite command to
      the turnout. All turnouts that are being monitored by the
      JMRI program and are included in the route will be
      locked.</p>

      <p>The radio button below the "Lock Turnout when Signal Mast
      Logic is Active" allows you to show only the turnouts,
      sensors, blocks or signal masts that are part of this signal
      mast logic.</p>

      <p>There four tabs below the "Show" button, each contains the
      details of Blocks, turnouts, sensors and signalmasts that
      make up the Signalmast logic. In each of these tab, there is
      an editable table that allows you to manually select which
      item should be included in the Signal Mast logic and the
      state which this item should be in.<br>
      Below that is a further table that shows the automatically
      generated items (except in the sensor tab). Manually entered
      items over-ride the automatically generated items, therefore
      if you wish to over-ride any item in automatically generated
      list then in the manual table select the corresponding item
      and set the state. Click the "Include" box in any of the
      tables to add the desired item to your signalmast logic. Next
      to the "Include" box is the state option which that item must
      be in for the Signal Mast to come active. For example, if you
      wish the turnout to be in a thrown state to trigger the
      logic, then select "Thrown" in the drop down box. If you wish
      to over-ride a turnout that has automatically included, and
      you don't care what state it is set to, select "Any State"
      from the drop down box.</p>

      <p>Update Signal Mast Logic</p>This will add or update your
      Signal Mast Logic to the system, once added, the tables
      holding the automatic generated data will then be
      re-populated. <!--#include virtual="/Footer" -->
    </div>
  </div>
</body>
</html>
