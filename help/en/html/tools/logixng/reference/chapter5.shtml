<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="generator" content="HTML Tidy for HTML5 for Apple macOS version 5.8.0">
  <title>LogixNG Reference - Chapter 5</title>
  <meta name="author" content="Daniel Bergqvist">
  <meta name="author" content="Dave Sand">
  <meta name="keywords" content="jmri LogixNG reference action items">
  <!--#include virtual="/Style.shtml" -->
</head>
<body>
  <!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <div id="mainContent" class="no-sidebar">
      <h1>LogixNG Reference - Chapter 5</h1>

      <h2>Action Descriptions</h2>

      <p>The action descriptions are grouped by the socket type and category.</p>

      <ul>
        <li>Digital action
          <ul>
            <li>
              <a href="#digital_action_item">Item</a>
            </li>

            <li>
              <a href="#digital_action_common">Common</a>
            </li>

            <li>
              <a href="#digital_action_display">Display</a>
            </li>

            <li>
              <a href="#digital_action_mqtt">MQTT <span class="since">since 4.99.7</span></a>
            </li>

            <li>
              <a href="#digital_action_loconet">LocoNet</a>
            </li>

            <li>
              <a href="#digital_action_other">Other</a>
            </li>
          </ul>
        </li>

        <li>Digital boolean action
          <ul>
            <li>
              <a href="#digital_boolean_action_common">Common</a>
            </li>
          </ul>
        </li>

        <li>Analog action
          <ul>
            <li>
              <a href="#analog_action_item">Item</a>
            </li>

            <li>
              <a href="#analog_action_common">Common</a>
            </li>
          </ul>
        </li>

        <li>String action
          <ul>
            <li>
              <a href="#string_action_item">Item</a>
            </li>

            <li>
              <a href="#string_action_common">Common</a>
            </li>
          </ul>
        </li>
      </ul>

      <h2>Action dialogs</h2>

      <p>When the category and type has been selected, the detail action dialog will be displayed.
      The content of the dialog will vary depending on the category and type. The typical digital
      action item dialog is described below.</p>

      <p>The dialog for adding and editing digital action items consists of an upper part that
      contains the item and the actions for that item. The lower part is common to all actions.</p>

      <p>For some actions, for example Signal head, you need to first select the item and then you
      can select the action to do on that item. For example, for Signal head, you first select the
      signal head to act on and then you can select the appearence to set for that signal head.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/typical_action.png"><img src="images/chapter5/typical_action.png"
        alt="Chapter 5 typical action" width="922" height="270"></a>
      </div>

      <p>The <strong>Edit</strong> screen is the same except for the title, the Create button and
      the current content will be in the fields.</p>

      <p>The left section is normally used to select the item, such as a turnout or a sensor. The
      right section is the action to be performed. The default mode will be to use the
      <strong>Direct</strong> tabs.</p>

      <p>See <a href="chapter7.shtml">Reference</a>, <a href="chapter8.shtml">Local Variable</a>
      and <a href="chapter9.shtml">Formula</a> for details about the other tabs.</p>

      <p>The lower section contains a standard set of items</p>

      <dl>
        <dt>Error Handling</dt>

        <dd>
          If <strong>Use default</strong> is selected, the value in <a href=
          "../LogixNG.shtml#preferences">Preferences</a> will be used. For other options see
          <a href="../ErrorHandling.shtml">error handling</a>.
        </dd>

        <dt>Catch "Abort execution"</dt>

        <dd>If the error handling (see previous) for any child node is set to <strong>Abort
        execution</strong>, a parent node should have this option checked. This lets the parent
        node handle the error.</dd>

        <dt>Edit comment</dt>

        <dd>Each action can have a comment. The comment dialog has a multiline text area. Click
        <strong>OK</strong> to save the comment.</dd>

        <dt>Formula functions</dt>

        <dd>
          These are explained in the <a href="chapter9.shtml">Formula</a> chapter.
        </dd>

        <dd>
        </dd>

        <dt>Cancel</dt>

        <dd>Close the dialog without applying any changes.</dd>

        <dd>
        </dd>

        <dt>Create/OK</dt>

        <dd>Save the new action or the changes to an existing action.</dd>

        <dd>
        </dd>
      </dl>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_item">Digital action :: Item</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_item.png"><img src=
        "images/chapter5/digital_action_item.png" alt="Chapter 5 digital action item list"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Audio</h4>

      <p>Control the selected Audio item.</p>

      <ul>
        <li>Play</li>

        <li>Play toggle</li>

        <li>Pause</li>

        <li>Pause toggle</li>

        <li>Resume</li>

        <li>Stop</li>

        <li>Fade in</li>

        <li>Fade out</li>

        <li>Rewind</li>

        <li>Reset position</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Block</h4>

      <ul>
        <li><strong>Block Sensor Active:</strong> Set the sensor that provides occupancy to
        active.</li>

        <li><strong>Block Sensor Inactive:</strong> Set the sensor that provides occupancy to
        inactive.</li>

        <li><strong>Alternate Color On:</strong> Enable alternate color for the related layout
        block.</li>

        <li><strong>Alternate Color Off:</strong> Disable alternate color for the related layout
        block.</li>

        <li><strong>Empty (null):</strong> Set the block value to the null value.</li>

        <li><strong>Value:</strong> Set the block value to a string or via a reference such as from
        a memory variable.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Clock<span class="since">updated 4.99.7</span></h4>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/clock_action.png"><img src="images/chapter5/clock_action.png"
        alt="Chapter 5 clock action"></a>
      </div>

      <ul>
        <li><strong>Set Fast Clock:</strong> Sets the time on the fast clock to the entered time.
        The time can be entered as hh:mm where hh is hours and mm is minutes on a 24-hour clock or
        as the number of minutes since midnight, such as 720 for noon. This action sets the fast
        clock to the specified time regardless of whether the fast clock is running or stopped.</li>

        <li><strong>Start Fast Clock:</strong> Starts the JMRI fast clock running. If the fast
        clock is already running, this action has no effect.</li>

        <li><strong>Stop Fast Clock:</strong> Pauses the JMRI fast clock. If the fast clock is not
        running, this action has no effect.</li>
      </ul>

      <p>In addition to setting the time using a constant value, the other LogixNG modes can be
      used.   For example, the new time can be in a memory variable which will be used to set the
      fast clock time.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/clock_memory.png"><img src="images/chapter5/clock_memory.png"
        alt="Chapter 5 clock memory source"></a>
      </div>

      <p>The Memory <strong><em>listen</em></strong> option can used to automatically update the
      fast clock time when the memory variable changes.  This eliminates the need to have a separate
      expression to invoke the <strong>Set Fast Clock</strong> action.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Clock Rate<span class="since">since 4.99.7</span></h4>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/clock_rate_action.png"><img src="images/chapter5/clock_rate_action.png"
        alt="Chapter 5 clock rate action"></a>
      </div>

      <ul>
        <li><strong>Set Clock Rate:</strong> Sets the rate for the fast clock to the entered value.
        For example, a value of 4 will set the fast clock rate to 4:1, which is 15 real minutes for
        a fast clock hour.</li>

        <li><strong>Increase Clock Rate:</strong> Increase the fast clock speed by the entered
        value.</li>

        <li><strong>Decrease Clock Rate:</strong> Decrease the fast clock speed by the entered
        value.</li>
      </ul>

      <p>The rate values can be whole numbers or decimals, such as .5.  The rate values can also
      be supplied from the other LogixNG modes, such as a memory variable.</p>


      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Dispatcher</h4>

      <p>A Dispatcher train only exists from the time it is created until it is terminated.
      LogixNG uses the Dispatcher TrainInfo file to refer to a potential Dispatcher train.
      See the <em>Saving and Retrieving Active Train Information</em> section at
      <a href="https://www.jmri.org/help/en/package/jmri/jmrit/dispatcher/NewTrain.shtml">
      Activate New Train</a>.  If the related train does not exist when the LogixNG action occurs,
      the action will be ignored.  There will be no notification.</p>

      <ul>
        <li><strong>Load train from train info file:</strong> Create a new Dispatcher train using
        the selected train info file.</li>
        <li><strong>Terminate train:</strong> Terminate a Dispatcher train that was previously
        started using LogixNG.</li>
        <li><strong>Set train priority:</strong> Change the priority of a train.  The default is
        5.  The allowed range is 0 to 100.</li>
        <li><strong>Set Reset when Done:</strong> Enable or disable the <em>Reset when Done</em>
        option.</li>
        <li><strong>Set Terminate when Done</strong> Enable or disable the <em>Terminate when Done</em>
        option.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Enable/Disable Logix</h4>

      <ul>
        <li><strong>Enable:</strong> Enables the specified logix. Specify the logix to enable by
        selecting its name.</li>

        <li><strong>Disable:</strong> Disables the specified logix. Specify the logix to disable by
        selecting its name.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Entry/Exit</h4>

      <ul>
        <li><strong>Set NX Pair Enabled:</strong> Enables the specified Entry/Exit Pair. Specify
        the Entry/Exit Pair to enable by selecting its name.</li>

        <li><strong>Set NX Pair Disabled:</strong> Disables the specified Entry/Exit Pair. Specify
        the Entry/Exit Pair to disable by selecting its name.</li>

        <li><strong>Set NX Pair Segment Active / Inactive</strong> Request that the route segment
        for the specified Entry/Exit Pair be activated if not active or deactivated if active.
        Specify the Entry/Exit Pair to enable by selecting its name.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Light</h4>

      <ul>
        <li><strong>Off:</strong> Set the selected light off.</li>

        <li><strong>On:</strong> Set the selected light on.</li>

        <li><strong>Toggle:</strong> Toggle the selected light.</li>

        <li><strong>Set Intensity:</strong> Sets the intensity of a specified variable intensity
        light to the entered intensity value. Specify the light to set by selecting its name.
        Specify the intensity by entering the percent intensity as an integer in the range 0 to
        100. If the specified light is not a variable light, or if the intensity value entered is
        not an integer in the required range, an error message is displayed.</li>

        <li><strong>Set Transition Time:</strong> Sets the transition time of a specified variable
        intensity light to the entered time. Specify the light to set by selecting its name.
        Specify the transition time by entering the number of fast clock minutes needed to move
        from 0% intensity to 100% intensity. If the specified light is not a variable light, or if
        a positive integer is not entered for the number of fast clock minutes, an error message
        results.</li>

        <li><strong>Unknown:</strong> Set the selected light state to unknown.</li>

        <li><strong>Inconsistent:</strong> Set the selected light state to inconsistent.</li>

      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Light intensity</h4>

      <p>The Light intensity action is an alternate method to set the Variable Light Intensity
      value. The standard method sets the value directly from the action using any of the standard
      input methods.</p>

      <p>This action creates a child analog expression called <strong>Intensity</strong>. Analog
      expressions are normally used to create a dynamic values, such as random numbers. Using the
      <code>sin()</code> function along with the <a href="chapter6.shtml#MidnightMinutes">Minutes
      since midnight</a> analog expression, it is possible to change light intensity based on the
      time of the day using the fast clock or the system clock.</p>

      <p>Here is an example using the sin() function.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/intensity_example.png"><img src=
        "images/chapter5/intensity_example.png" alt="Chapter 5 intensity example" width="432"
        height="87"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Local variable</h4>

      <p>Local variables are described in <a href="chapter8.shtml">Chapter 8 - Local
      Variables</a>.</p>

      <p>Instead of specific actions, local variables use <strong>tabs</strong> to select the
      action.</p>

      <ul>
        <li><strong>Null:</strong> Select the <strong>Null</strong> tab to set the selected local
        variable to the null value.</li>

        <li><strong>Constant:</strong> Select the <strong>Constant</strong> tab and enter a string
        value for the selected local variable.</li>

        <li><strong>Memory:</strong> Select the <strong>Memory</strong> tab and select the memory
        which will provide the value for the selected local variable.</li>

        <li><strong>Block:</strong> Select the <strong>Block</strong> tab and select the block
        which will provide the value for the selected local variable.</li>

        <li><strong>Reporter:</strong> Select the <strong>Reporter</strong> tab and select the
        reporter which will provide the <em>current report</em> for the selected local variable.</li>

        <li><strong>Variable:</strong> Select the <strong>Variable</strong> tab and enter the local
        variable name which will provide the value for the selected local variable.</li>

        <li><strong>Table:</strong> See <a href="chapter11.shtml#tableCellSelection">Simplified
        Table Cell Reference</a>.  The rest of chapter 11 has all of the details on tables.</li>

        <li><strong>Formula:</strong> Select the <strong>Formula</strong> tab and set the selected
        local variable to the result of a formula calculation.</li>
      </ul>

      <p>Note: The Memory, Block and Reporter tabs have an option to listen to changes to their
      value.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Memory</h4>

      <p>Instead of specific actions, memory uses <strong>tabs</strong> to select the action.</p>

      <ul>
        <li><strong>Null:</strong> Select the <strong>Null</strong> tab to set the selected memory
        to the null value.</li>

        <li><strong>Constant:</strong> Select the <strong>Constant</strong> tab and enter a string
        value for the selected memory.</li>

        <li><strong>Memory:</strong> Select the <strong>Memory</strong> tab and select the memory
        which will provide the value for the selected memory.</li>

        <li><strong>Table:</strong> See <a href="chapter11.shtml#tableCellSelection">Simplified
        Table Cell Reference</a>.  The rest of chapter 11 has all of the details on tables.</li>

        <li><strong>Variable:</strong> Select the <strong>Variable</strong> tab and enter the local
        variable name which will provide the value for the selected memory.</li>

        <li><strong>Formula:</strong> Select the <strong>Formula</strong> tab and set the selected
        memory to the result of a formula calculation.</li>

      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>OBlock</h4>

      <ul>
        <li><strong>Deallocate Block:</strong> Deallocates an Occupancy block. Specify the OBlock
        by selecting its name.</li>

        <li><strong>Set Block Value:</strong> Set a value for the selected block.</li>

        <li><strong>Set Block Error:</strong> Set the selected block status to "block error".</li>

        <li><strong>Clear Block Error:</strong> Remove the "block error" status for the selected
        block</li>

        <li><strong>Set Block OutOfService:</strong> Sets the status of an Occupancy block to
        Out-Of-Service. Specify the OBlock by selecting its name.</li>

        <li><strong>Clear Block OutOfService:</strong> Sets the status of an Occupancy Block to the
        current normal status. Specify the OBlock by selecting its name.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Power</h4>

      <ul>
        <li><strong>Off:</strong> Turn track power off.</li>

        <li><strong>On:</strong> Turn track power on.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Reporter</h4>

      <p>The Reporter action is used to copy the report content to a memory variable or a LogixNG
      local variable.  There are three kinds of information.</p>

      <ul>
        <li><strong>Current Report:</strong> The current value unless the hardware says there is
        nothing to report.  In that case the value will be null.</li>

        <li><strong>Last Report:</strong> Normally the current report and last report are the same.
        If the current report is null, this will be most recent valid report.  If no report has ever
        been received, this will be null.</li>

        <li><strong>State:</strong> A number that represents the last report.</li>
      </ul>

      <p>Note:  The meaning of the reports and the state number are defined by originating
      hardware.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Route</h4>

      <ul>
        <li><strong>Trigger route:</strong> Triggers the specified route. Specify the route by
        selecting its name.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4 id="script">Script</h4>

      <ul>
        <li><strong>Run script:</strong> Starts the specified script. Specify the script to start
        by entering its name in the field provided or use the "..." file selector.</li>

        <li><strong>Jython command:</strong> Enter the command in the Script field</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Sensor</h4>

      <p>The delayed options are handled by <a href="#ExecuteDelayed">Execute Delayed</a>.</p>

      <ul>
        <li><strong>Inactive:</strong> Set the selected sensor to inactive.</li>

        <li><strong>Active:</strong> Set the selected sensor to active.</li>

        <li><strong>Toggle:</strong> Toggle the state of the selected sensor.</li>

        <li><strong>Unknown:</strong> Set the selected sensor state to unknown.</li>

        <li><strong>Inconsistent:</strong> Set the selected sensor state to inconsistent.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Signal head</h4>

      <ul>
        <li><strong>appearance:</strong> Sets the specified signal head to the selected appearance.
        Specify the signal head to set by selecting its name. Select the appearance Appearance
        list.</li>

        <li><strong>lit:</strong> Sets the specified signal head to lit. Specify the signal head by
        selecting its name.</li>

        <li><strong>not lit:</strong> Sets the specified signal head to not lit. Specify the signal
        head by selecting its name.</li>

        <li><strong>held:</strong> Sets the specified signal head to hold. Specify the signal head
        to hold by selecting its name.</li>

        <li><strong>not held:</strong> Clears the hold on the specified signal head. Specify the
        signal head by selecting its name.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Signal mast</h4>

      <ul>
        <li><strong>aspect:</strong> Sets the specified signal mast to the selected aspect. Specify
        the signal mast to set by selecting its name. Select the aspect from the Aspect list.</li>

        <li><strong>lit:</strong> Sets the specified signal mast to not lit. Specify the signal
        mast by selecting its name.</li>

        <li><strong>not lit:</strong> Sets the specified signal mast to not lit. Specify the signal
        mast by selecting its name.</li>

        <li><strong>held:</strong> Sets the specified signal mast to held. Specify the signal mast
        to hold by selecting its name.</li>

        <li><strong>not held:</strong> Clears the hold on the specified signal mast. Specify the
        signal mast by selecting its name.</li>

        <li><strong>permissive sml disabled:</strong> Disable permissive SML for the selected
        signal mast.</li>

        <li><strong>permissive sml not disabled:</strong> Enable permissive SML for the selected
        signal mast.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Sound</h4>

      <p>Plays the specified sound file. Specify the sound file to play by entering its name in the
      field provided. Click the file selection button to bring up a file selection dialog to aid in
      finding the file. Navigate to your sound file, then click your sound file's name in the
      dialog and the name will be copied to the field.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Throttle</h4>

      <p>The Throttle action controls a throttle.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/throttle_action.png"><img src="images/chapter5/throttle_action.png"
        alt="Chapter 5 throttle action" width="500" height="300"></a>
      </div>

      <dl>
        <dt>Address &mdash; Analog Expression</dt>
        <dd>Value between 1 and 9999.</dd>

        <dt>Speed &mdash; Analog Expression</dt>
        <dd>Value between 0.0 and 1.0.</dd>

        <dt>Direction &mdash; Digital Expression</dt>
        <dd>True for forward.</dd>

        <dt>Function &mdash; Analog Expression</dt>
        <dd>Value between 0 and 28.</dd>

        <dt>FunctionOnOff &mdash; Digital Expression</dt>
        <dd>True for function on</dd>
      </dl>

      <p>The analog expressions can be an analog memory expression or an analog constant
      expression. In the future, AnalogIO will also be available.</p>

      <p>The digital expressions are either <strong>Always true</strong> or <strong>Always false
      </strong>.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Turnout</h4>

      <p>The delayed options are handled by <a href="#ExecuteDelayed">Execute Delayed</a>.</p>

      <ul>
        <li><strong>Closed:</strong> Set the selected turnout closed.</li>

        <li><strong>Thrown:</strong> Set the selected turnout thrown.</li>

        <li><strong>Toggle:</strong> Toggle the state of the selected turnout.</li>

        <li><strong>Unknown:</strong> Set the selected turnout state to unknown.</li>

        <li><strong>Inconsistent:</strong> Set the selected turnout state to inconsistent.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Turnout, lock</h4>

      <p>Locks or unlocks a turnout. Select the name for the turnout, and choose the operation from
      the popup menu. Note: To control the type of turnout lock go to the Turnout Table and select
      the Lock Mode.</p>

      <ul>
        <li><strong>Lock:</strong> Lock the selected turnout.</li>

        <li><strong>Unlock:</strong> Unlock the selected turnout.</li>

        <li><strong>Toggle:</strong> Toggle the lock state for the selected turnout.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Warrant</h4>

      <ul>
        <li><strong>Allocate Warrant Route:</strong> Allocates (reserves) the OBlocks comprising
        the route of the warrant for use by the warrant. Specify the warrant by selecting its
        name.</li>

        <li><strong>Deallocate Warrant:</strong> Deallocates the OBlocks comprising the route of
        the warrant so they may be allocated to other warrants. Specify the warrant by selecting
        its name.</li>

        <li><strong>Set Route Turnouts:</strong> Sets all the turnouts comprising the route of the
        warrant. Specify the warrant by selecting its name.</li>

        <li><strong>Auto Run Train:</strong> Starts playback of the recorded script for the train
        specified in the warrant. Specify the warrant by selecting its name.</li>

        <li><strong>Manually Run Train:</strong> Serves a "clearance" to an operator that a humanly
        run train has running rights for the extent of the warrant's route. Specify the warrant by
        selecting its name.</li>

        <li>
          <strong>Control Auto Train:</strong> Issues the specified command to an auto run train.
          Specify the warrant of the train by selecting its name. The Commands are:
          <ul>
            <li>Halt</li>

            <li>Resume</li>

            <li>Abort</li>
          </ul>
        </li>

        <li><strong>Set Train ID:</strong> Set the train ID from the roster or the DCC address.
        When a DCC address is used, also specify Long or Short. Example: 1234(L) or 10(S).</li>

        <li><strong>Set Train Name:</strong> Set the train Name for the selected Warrant.</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_common">Digital action :: Common</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_common.png"><img src=
        "images/chapter5/digital_action_common.png" alt="Chapter 5 digital action common list"
        width="204" height="188"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Digital Formula<span class="since">since 4.25.8</span></h4>

      <p>The <strong>Digital Formula</strong> action provides the ability to create formulas that
      are not directly related to other items, such as sensors, which use the Formula tab.</p>

      <p>The formula action is in particular useful when working with local variables. You can for
      example increase a local variable by the formula <code>index++</code> or make some
      calculations, like <code>turnout = name.substring(2)</code> which removes the first two
      characters from the string.</p>

      <p>The dialog for creating a Digital Formula consists of a single text field.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_formula_dialog.png"><img src=
        "images/chapter5/digital_formula_dialog.png" alt="Chapter 5 digital formula dialog"
        width="556" height="213"></a>
      </div>

      <p>See <a href="chapter9.shtml">Chapter 9 - Formula</a> for details.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4  id="ExecuteDelayed">Execute delayed</h4>

      <p>Delay the execution of the following action for a specified amount of time. This is the
      same as the Logix <strong>Delayed Set ...</strong>. The main difference is that this can be
      used with any action, such as signals. The time delay units are milliseconds, seconds,
      minutes and hours.</p>

      <p>The default mode is that once a timer starts, subsequent requests will be ignored. If
      <strong>Restart timer if already started</strong> is selected and a timer is already running,
      it will be canceled and started again.  The subsequent action will be delayed until the timer
      finishes.  If <strong>Use individual timers</strong> is selected, each request will be
      independent.</p>

      <p>See <a href="#timeout">Timeout</a> for a conditional delayed execution.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/execute_delay.png"><img src="images/chapter5/execute_delay.png"
        alt="Chapter 5 execute_delay" width="531" height="352"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>For</h4>

      <p>For is a for-loop. It has four children.</p>

      <ul>
        <li><strong>Init</strong> - this action is executed only one time. It's used to initialize
        the loop, for example setting a Memory to a particular value.</li>

        <li><strong>While</strong> - this expression decides if the loop should run one lap more.
        The loop will continue to run until this condition will be <strong>false</strong>.</li>

        <li><strong>AfterEach</strong> - this action is executed at the end of the loop. It can for
        example be used to increment a counter in a Memory.</li>

        <li><strong>Do</strong> - this action is executed in each loop. It does the main work.</li>
      </ul>

      <p>When For is executed, the Init action is run once. After that, the While expression is
      evaluated. If the While returns <strong>true</strong>, the Do action is executed and at last
      the AfterEach action is executed. Then the process is repeated, except that the Init action
      is only executed once.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>If Then Else</h4>

      <p>Reads a digital child expression and if the answer is <strong>true</strong> it executes
      the <strong>then</strong> child action, else it executes the <strong>else</strong> child
      action.</p>

      <p>There are two options:</p>

      <ul>
        <li><strong>Execute on change:</strong> Executes the Then or the Else action only when the
        If expression has changed from True to False, or from False to True.  Note that the
        expression is assumed to be changed whenever the LogixNG is first enabled (including when
        the xml data file is loaded with "enabled" checked). In the simple example  below, Light IL2
        will be set "on" when the LogixNG is first enabled (Sensor IS1 status is "unknown").  When
        the sensor is changed to "inactive" the lights will not change.  When the sensor is then
        changed to "active," the Light IS1 will also go "on".</li>

        <li><strong>Always execute:</strong> Executes the Then or the Else action every time the
        <strong>If Then Else</strong> action is executed, regardless of whether the expression has
        changed value.</li>
      </ul>

      <div style="margin-left: 2em;">
         <a href="images/chapter5/if_then_else.jpg"><img src=
         "images/chapter5/if_then_else.jpg" alt="Chapter 5 if then else"
         width="287" height="165"></a>
       </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Many</h4>

      <p>The Many action executes many child actions.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Read analog and set analog</h4>

      <p>Read an analog child expression and execute an analog child action.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Read string and set string</h4>

      <p>Read a string child expression and execute a string child action.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Sequence</h4>

      <p>The Sequence action executes a series of action/expression pairs. For each pair, the
      action will be performed and then the expression will wait until it becomes true. When it is
      true, the next action/expression pair will be started.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/action_sequence_options.png"><img src=
        "images/chapter5/action_sequence_options.png" alt="Chapter 5 sequence options"></a>
      </div>

      <p>Options:</p>

      <ul>
        <li><strong>Start sequence immediately on load</strong> &mdash; Run the sequence when the
        data file loading is done.</li>

        <li><strong>Run sequence continuously</strong> &mdash; The sequence will repeat forever or
        until stopped.  If this option is not selected, the sequence will run one time and the
        sequence can be started again later.</li>
      </ul>

      <p>When a sequence action is added, it has connections for <strong>Start</strong>, <strong>
      Stop</strong> and <strong>Reset</strong> expressions.

      <ul>
        <li><strong>Start:</strong> When the <strong>Start</strong> expression is true, the sequence
        will start with the first action/expression pair or resume if a stop occurred during the
        sequence.</li>

        <li><strong>Stop:</strong> When the <strong>Stop</strong> expression is true, the sequence
        will stop running.</li>

        <li><strong>Reset:</strong> When the <strong>Reset</strong> expression is true, the sequence
        will be interrupted if running, and return to the first action/expresson pair.</li>
      </ul>

      <div style="margin-left: 2em">
        <a href="images/chapter5/action_sequence.png"><img src=
        "images/chapter5/action_sequence.png" alt="Chapter 5 sequence action"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Table: For each</h4>

      <p>See <a href="chapter11.shtml#TableActions">Chapter 11 - Table Actions</a> for details on
      table actions.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Timer</h4>

      <p><strong>Timer</strong> has a number of actions, each executed after a period of time. The
      time to wait can be 0, which means the related action is executed immediately. The Timer can
      be configured to only execute the actions once or continuously. The Timer can also be
      configured to start when the xml data file is loaded or only start when the "Start"
      expression returns True. The Timer stops when the "Stop" expression returns True. The time
      unit is selected from the combo box.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/timer_dialog.png"><img src="images/chapter5/timer_dialog.png" alt=
        "Chapter 5 timer dialog" width="995" height="377"></a>
      </div>

      <p>If all times to wait are zero, the timer will automatically stop after executing all the
      actions once, even if it is set to run continuously. This is a safety feature to avoid
      locking up JMRI.</p>

      <p>To add a socket for the Timer action, edit the Timer and click the <strong>Add
      timer</strong> button and a new socket will be added to the end. To remove a socket for the
      Timer action, edit the Timer and click the <strong>Remove timer</strong> button and the last
      socket will be removed. The socket can only be removed if there is no action connected to
      it.</p>

      <p>This example shows using the Timer to implement a traffic light. Note: This example shows
      renaming the A1, A2, etc. sockets to meaningful names.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/timer_example.png"><img src="images/chapter5/timer_example.png"
        alt="Chapter 5 timer example" width="356" height="333"></a>
      </div>

      <p>Another example is using a Timer to blink a light. Create a Timer with a single socket and
      a Light action that toggles the light on/off. If you want different times for on and off,
      create a Timer with two sockets where the first socket turns the light on and the second
      socket turns the light off.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_display">Digital action :: Display</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_display.png"><img src=
        "images/chapter5/digital_action_display.png" alt="Chapter 5 digital action display list"
        width="184" height="26"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Icon/Label on panel</h4>

      <p>Disable/Enable/Hide/Show an icon or label on a specific panel.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_mqtt">Digital action :: MQTT <span class="since">since 4.99.7</span></h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_mqtt.png"><img src=
        "images/chapter5/digital_action_mqtt.png" alt="Chapter 5 digital action mqtt list"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Publish</h4>

      <p>This action publishes a message. Both the topic and the message can be entered directly in
      the action or indirectly using a local variable or a memory.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/mqtt_publish.png"><img src=
        "images/chapter5/mqtt_publish.png" alt="Chapter 5 digital action mqtt publish"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Subscribe</h4>

      <p>This action subscribes to a topic. When someone publishes a message, this action triggers
      the execution of the CondtionalNG. It can also optionally put the topic and the message into
      local variables. The topic can use wildcard, like loco/# where # is the wildcard.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/mqtt_subscribe.png"><img src=
        "images/chapter5/mqtt_subscribe.png" alt="Chapter 5 digital action mqtt subscribe"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_loconet">Digital action :: LocoNet</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_loconet.png"><img src=
        "images/chapter5/digital_action_loconet.png" alt="Chapter 5 digital action loconet list"
        width="184" height="44"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Clear loconet slots</h4>

      <p>This action clears the slot status in the command station if you are using LocoNet.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Update loconet slots</h4>

      <p>This action forces an update of the LocoNet slot status in JMRI.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_action_other">Digital action :: Other</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_action_other.png"><img src=
        "images/chapter5/digital_action_other.png" alt="Chapter 5 digital action other list" width=
        "184" height="188"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Call module</h4>

      <p>See <a href="chapter10.shtml#DigitalActionModule">Chapter 10 - Modules</a> for
      details.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Listen on beans</h4>

      <p>See <a href="chapter7.shtml#ListenOnBeans">Chapter 7 - Listen on beans</a> for
      details.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Listen on beans - Table</h4>

      <p>See <a href="chapter11.shtml#TableActions">Chapter 11 - Table Actions</a> for details.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4 id="ActionLogData">Log data</h4>

      <p>While developing a ConditionalNG, it can be helpful to see field content, make note of the
      location within the tree, etc. Adding the <strong>Log data</strong> type in the
      <strong>Other</strong> category will display a dialog to configure the <strong>Log
      data</strong>
      options.</p>

      <p>Another approach for displaying data is to use the <a href="#showDialog">Show dialog
      action.</a></p>

      <p>Select either or both Log options</p>

      <ul>
        <li><strong>Log to the log:</strong> Help &rArr; System Console.</li>

        <li><strong>Log to the Script Output:</strong> Scripting &rArr; Script Output.</li>
      </ul>

      <div style="margin-left: 2em">
        <a href="images/chapter5/action_log_data.png"><img src=
        "images/chapter5/action_log_data.png" alt="Chapter 5 action log data" width="565" height=
        "506"></a>
      </div>

      <p>There are three format types.</p>

      <ul>
        <li><strong>Only text:</strong> The text typed into the Format box will be displayed on the
        log. The data in the table is ignored.</li>

        <li><strong>Comma separated list:</strong> The values for the items in the table will be
        displayed separated by commas. The content in the format field is ignored.</li>

        <li>
          <strong>String.format:</strong> Use the format string to format the data in the table.
          See the java method <a href=
          "https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#syntax">String.format()</a>
          for the syntax of the format string. Note: The format is similar <code>sprintf</code>.
        </li>
      </ul>

      <div style="margin-left: 2em">
        <a href="images/chapter5/log_data_format.png"><img src=
        "images/chapter5/log_data_format.png" alt="Chapter 5 log data format" width="187" height=
        "62"></a>
      </div>

      <p>The table lists the data sources for the comma separated and and string format
      options.</p>

      <p>Click on the <strong>Add</strong> button to add an entry to the table. Select the source
      type and add the name or a reference in the Data field.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/log_data_sources.png"><img src=
        "images/chapter5/log_data_sources.png" alt="Chapter 5 log data sources" width="421" height=
        "116"></a>
      </div>

      <p>This example uses the string.format option to combine text with the contents of two memory
      variables.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/log_data_sample.png"><img src=
        "images/chapter5/log_data_sample.png" alt="Chapter 5 log data sample" width="556" height=
        "506"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Log local variables</h4>

      <p>See <a href="chapter8.shtml#LogLocalVariables">Chapter 8 - Debugging local variables</a>
      for details.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Logix</h4>

      <p>LogixNG has an action called Logix that emulates how JMRI Logix works. The action Logix
      has one expression and a number of boolean actions. A boolean action is an action that takes
      a boolean value (true/false) and then decides what to do. The action Logix was added mainly
      to support import of JMRI Logix to LogixNG.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4 id="showDialog">Show dialog<span class="since">since 4.25.8</span></h4>

      <p>The <strong>Show dialog</strong> action displays a window that can be used to provide
      notification of an event that has occurred or needs to be handled.  It can also be used to
      request whether an action should be performed by the LogixNG.</p>

      <p>Normally, warnings and such can be handled by displaying a message in the system console.
      The dialog is useful when an immediate notification is needed.</p>

      <p>The <strong>Show dialog</strong> definition is similar to the <a href="#ActionLogData">
      Log data</a> definition.  See Log data for details on formating and including variables.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_dialog.png"><img src=
        "images/chapter5/show_dialog_dialog.png" alt="Chapter 5 show dialog dialog"
        width="600" height="475"></a  >
      </div>

      <p>Additional Features:</p>

      <dl>
        <dt>Buttons</dt>
        <dd>One or more buttons can be included in the dialog.  At least one button must be selected.</dd>

        <dt>Modal</dt>
        <dd>A dialog can be <strong>modal</strong> or non-modal.  Modal means that the dialog window
        remains above any other window and the user cannot do anything in any other JMRI window
        until it is closed.</dd>

        <dt>Multiline</dt>
        <dd>The multiline option enables the ability to have multiple lines displayed by the dialog.
        To get a new line, use the HTML <strong>&lt;br&gt;</strong> tag.</dd>

        <dt>Selected button</dt>
        <dd>If a predefined local variable is supplied, the selected button number is copied to the
        local variable.  The button numbers are shown next to the button text in the button
        selection section.</dd>

        <dt>Input string<span class="since">since 4.99.1</span></dt>
        <dd>If a predefined local variable is supplied, a text input field is included. The current
        value of the variable will be displayed in the text input field.  When the dialog is closed
        using one of the buttons, the value in the input field will be copied to the local
        variable.</dd>
      </dl>

      <p class="noted">Note:  When the dialog is displayed, the rest of the conditional continues
      to run.  In the first example, the A3 action will execute while the dialog is displayed.</p>

      <p>After the dialog action has been created, two new rows are added.  These are both optional
      and can be left empty.</p>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_validate_execute.png"><img src=
        "images/chapter5/show_dialog_validate_execute.png" alt="Chapter 5 show dialog validate execute"
        width="280" height="86"></a>
      </div>

      <dl>
        <dt>Validate</dt>
        <dd>The <strong>Validate</strong> expression can be used to check for valid input when using
        an input local variable.  If the expression is false, the dialog will remain open until the
        expression is true.  The close button on the window can be used to bypass validation and
        execution.  If the expression is true or no expression was defined, the Execute action will
        run.</dd>

        <dt>Execute</dt>
        <dd>The <strong>Execute</strong> action is run when the validation expression is true or if
        one was not defined.  A common use is handling a multiple button dialog that has the
        selected button local variable.</dd>
      </dl>

      <h5>Sample dialog with button checking</h5>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_yes_no.png"><img src=
        "images/chapter5/show_dialog_yes_no.png" alt="Chapter 5 show dialog yes no"
        width="414" height="103"></a>
      </div>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_button_process"><img src=
        "images/chapter5/show_dialog_button_process.png" alt="Chapter 5 show dialog button process"
        width="581" height="380"></a>
      </div>

      <h5>Sample multiline dialog with string.format</h5>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_multiline.png"><img src=
        "images/chapter5/show_dialog_multiline.png" alt="Chapter 5 show dialog multiline"
        width="234" height="135"></a>
      </div>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_ml_sample"><img src=
        "images/chapter5/show_dialog_ml_sample.png" alt="Chapter 5 show dialog multiline sample"
        width="500" height="300"></a>
      </div>

      <h5>Sample input dialog with validation using a digital formula</h5>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_input_sample.png"><img src=
        "images/chapter5/show_dialog_input_sample.png" alt="Chapter 5 show dialog input sample"
        width="323" height="129"></a>
      </div>

      <div style="margin-left: 2em">
        <a href="images/chapter5/show_dialog_input_code"><img src=
        "images/chapter5/show_dialog_input_code.png" alt="Chapter 5 show dialog iniput code"
        width="596" height="300"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Shutdown</h4>

      <p>The ShutdownComputer action can either shutdown or restart the computer, or shutdown or
      restart JMRI.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4 id="timeout">Timeout<span class="since">since 4.25.8</span></h4>

      <p>The <strong>Timeout</strong> action is used to execute a default action if an expression is
      not true within the specified time internval.</p>

      <p>The Timeout action dialog is similar to the <a href="#ExecuteDelayed">Execute Delayed
      </a> dialog. The <strong>Timeout</strong> configuration also requires an expression.
      If the expression is true before the time expires, the action is not executed.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/delayed_vs_timeout.png"><img src=
        "images/chapter5/delayed_vs_timeout.png" alt="delayed vs timeout"
        width="500" height="300"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Web browser</h4>

      <p>The web browser action opens a web page in the web browser.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="digital_boolean_action_common">Digital boolean action :: Common</h2>

      <p>To make import from Logix to LogixNG easier, LogixNG has a special action, Logix, that
      works similar to a Conditional in Logix. The LogixNG Logix action has a digital expression
      socket and a digital boolean action socket. The usual setup in LogixNG is a Logix action with
      a Many child with a number of OnChange children.</p>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/digital_boolean_action_common.png"><img src=
        "images/chapter5/digital_boolean_action_common.png" alt=
        "Chapter 5 digital boolean action common list" width="119" height="44"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Many</h4>

      <p>The Many action is used together with the Logix action to let the Logix action have more
      than one action child.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>On change</h4>

      <p>This action is used together with the LogixNG Logix action and gives you the option to
      decide if the child action should be executed. The options are:</p>

      <ul>
        <li>On change to true</li>

        <li>On change to false</li>

        <li>On change</li>
      </ul>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="analog_action_item">Analog action :: Item</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/analog_action_item.png"><img src=
        "images/chapter5/analog_action_item.png" alt="Chapter 5 analog action item list" width=
        "141" height="44"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Light intensity</h4>

      <p>Sets the intensity of the selected variable light to an analog value.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Memory</h4>

      <p>Sets a memory to an analog value.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2  id="analog_action_common">Analog action :: Common</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/analog_action_common.png"><img src=
        "images/chapter5/analog_action_common.png" alt="Chapter 5 analog action common list" width=
        "119" height="26"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Many</h4>

      <p>Sets the value of many analog actions.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2 id="string_action_item">String action :: Item</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/string_action_item.png"><img src=
        "images/chapter5/string_action_item.png" alt="Chapter 5 string action item list" width=
        "119" height="44"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Memory</h4>

      <p>Sets a memory to a string value.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>StringIO</h4>

      <p>The StringIO sets the string of a StringIO. There is currently one StringIO that can be
      used with this action: The LocoNet "LCThrottles" StringIO that sends a message to the LocoNet
      throttles.</p>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h2  id="string_action_common">String action :: Common</h2>

      <div style="margin-left: 2em;">
        <a href="images/chapter5/string_action_common.png"><img src=
        "images/chapter5/string_action_common.png" alt="Chapter 5 string action common list" width=
        "119" height="26"></a>
      </div>

      <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->

      <h4>Many</h4>

      <p>Sets the value of many string actions.</p>

      <hr>

      <p><a href="chapter6.shtml">Chapter 6 - Expression Descriptions</a>
      </p>

      <p><a href="index.shtml">Return to the Reference TOC</a>
      </p>
      <!--#include virtual="/Footer.shtml" -->
    </div>
    <!-- closes #mainContent-->
  </div>
  <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
