<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">
  <!-- Copyright ($Author$) 2016 -->

  <title>JMRI: Dispatcher System</title>
  <!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
  <!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header.shtml" -->
  <div class="nomenu" id="mBody">
    <div id="mainContent">

      <h1>Dispatcher System</h1>

      <p>The Dispatcher System is a set of Python tools to extend the capabilities of the
      Dispatcher.</p>

      <div class="toc">
        <ul>
          <li><a href="#introduction">Introduction</a>
            <ul>
              <li><a href="#steps">Steps in setting up the system</a></li>
              <li><a href="#requirements">System Requirements</a></li>
            </ul>
          </li>
          <li><a href="#stage1">Running Stage 1 &mdash; Editing the panel</a></li>
          <li><a href="#stage2">Running Stage 2 &mdash; Producing the transits</a></li>
          <li><a href="#stage3">Running Stage 3 &mdash; Final checks</a></li>
          <li><a href="#running">Running the Program</a>
            <ul>
              <li><a href="#register">Register a Train</a></li>
              <li><a href="#dispatch">Set up a dispatch</a></li>
            </ul>
          </li>
          <li><a href="#logic">Editing the Signal Logic</a></li>
        </ul>
      </div>

      <a name="introduction" id="introduction"></a>
      <h2>Introduction</h2>
      <p>This is an automated system designed to enable you to run trains using the Dispatcher
      system between locations (normally sidings or stations, but really any set of blocks)
      designated by yourself.</p>

      <p>Provided you have set up a system as described in System Requirements, by pressing
      a few buttons on theSystem Generation Panel, a complete system will be set up for you
      complete with Transits, Train Info files, and buttons for you to press which will
      route trains across your layout.</p>

      <p>A network will be set up behind the scenes which will find the best route from
      the train's location to the required location, and set  in place a set of transits
      which will guide the train to the required location.</p>

      <p>The train will either stop at all stations on the route, or travel without
      stopping at intermediate stops, depending on whether express or stopping mode is
      selected</p>

      <p>Provision is made for multiple train operation, the trains stopping for each other.
      This is a feature of Dispatcher, but the system allows easy selecting of each train
      to control each one.</p>

      <p>Unfortunately there is a fault somewhere either in the program or dispatcher and
      two trains cannot work at once. The first train stops when the second starts.</p>

      <a  name="steps" id="steps"></a>
      <h3>Steps in setting up the system</h3>

      <p>There are several stages to set up the system for automatic train running:</p>

      <p>Fulfill the prerequisites, which include having speed profiled your locos that you wish to run with the system</p>

      <ul>
        <li>Start JMRI with no panel displayed. </span></li>
        <li>The panel should have:
          <ul>
            <li>SignalMasts</li>
            <li>SignalMast Logic</li>
            <li>No Transits (if there are any they will be deleted)</li>
            <li>No Train Info Files (if there are any they will be deleted)</li>
            <li>SignalMasts</li>
          </ul>
        </li>
        <li>Bring up the Dispatcher System Panel</li>
        <li>Run Stage1 to generate an intermediate panel with icons to move trains</li>
        <li>Restart</li>
        <li>Run Stage2 to generate a run system panel</li>
        <li>Restart</li>
        <li>Run Stage3 to check the dispatcher options</li>
        <li>Check the system logic produced automaticlly and modify by hand</li>
        <li>Save in a modified run panel</li>
        <li>Run the train</li>
      </ul>

      <a name="requirements" id="requirements"></a>
      <h3>System Requirements</h3>

      <p>To use the Dispatcher System there are several prerequisites</p>
      <ul>
        <li>You should have set up the system with signal masts</li>
        <li>The locos you want to run on the system should be:
          <ul>
            <li>entered in the Roster</li>
            <li>set up with a speed profile</li>
          </ul>
        </li>
        <li>the required stopping places (blocks) should be indicated by entering stop in the comments field for the appropriate block</li>
        <li>Provision is made for a station announcement to be made when a train departs from a station.</li>
        <li>If the block name is unpronounceable, a good stop name can be entered in the comments field for the departure announcements</li>
        <li>Typical blocks comments would be</li>
        <li><img src="images/NewItem31.png" alt="" /></li>
      </ul>

      <a name="stage1" id="stage1"></a>
      <h2>Running Stage1 &mdash; Editing the panel</h2>

      <p>Run DispatcherSystem.py in the main jython directory. You will get something like this:</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem3.png"></p>
      <p>You are prompted to run Stage1 which adds all the icons required to run the system on a new panel.</p>
      <p>if the old panel name was WR.xml, the new panel will be WR_icons.xml</p>
      <p>Some checks are done first</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem4.png"></p>
      <p>The following checks are made</p>
      <ul>
        <li>All blocks have a sensor</li>
        <li>No two blocks have the same sensor</li>
        <li>stops are set up</li>
        <li>all blocks have lengths</li>
      </ul>
      <p>If no trains are present in the roster with speed profiles, this will be picked up, and can be corrected at run time.</p>
      <p>When the icons file is produced, a message similar to the following will be produced:</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem34.png"></p>
      <p>A new panel has been created. You should close down and load the new panel, instead of the original.</p>
      <p>Note:</p>
      <p>The panel will have been created by loading the original xml file (in this case WR.ml), editing the details and saving to a new file (WR_icons.xml). </p>
      <p>If there were any unsaved edits in the original file these will not be present in the new file, but you will not loose them provided you save them either to the original file or another file once Stage1 has completed. We advise saving all edits before running Stage1, so they are picked up.</p>


      <a name="stage2" id="stage2"></a>
      <h2>Running Stage2 Producing the transits</h2>

      <p>PanelPro should be restarted and the icons file produced in stage 1 should be loaded.</p>
      <p>A screen similar to the following will be produced:</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem6.png"></p>
      <p>Once the Stage2 button is pressed one gets a confirmatory messages:</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem7.png"></p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem8.png"></p>
      <p>Transits required to move the train from stop to stop will be produced, and corresponding
      train-info files which contain the information required for running the train are produced.
      Some of the information is overwritten when the train-info files are used such as the train name,
      so train info files do not have to be produced for each train.</p>
      <p>Train-info files are produced for each route allowed, and all routes are allowed which
      are physically possible to travel. Train-info files are produced for forward and reverse operation,
      so there can be quite a number produced.</p>
      <p>Once the transits and train-info files are produced we get a message:</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem35.png"></p>
      <p>You should then restart JMRI and load the run panel instead of the icons panel, in this example WR_run.xml</p>

      <a name="stage3" id="stage3"></a>
      <h2>Running Stage3 Final Checks</h2>

      <p></p>
      <p>Restart JMRI and load the newly produced run panel, in our example WR_run.xml</p>
      <p">Run dispatcher System again to get</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem11.png"></p>
      <p>Click Stage3 and one gets two screens opening,the Dispatcher options screen and another
      saying the options that need to be set for the Dispatcher system to work</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem12.png"></p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem13.png"></p>
      <p>Set the required option and we get a message reminding you to save the changed options</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem14.png"></p>
      <p>Select the dispatcher window that has opened automatically and click Options =&gt; Save Options</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem32.png"></p>

      <a name="running" id="running"></a>
      <h2>Running the Program</h2>

      <p>To run the system it is advised to have the thread monitor running (Panels =&gt; Thread Monitor)</p>
      <p>You will notice several buttons in the top RH corner.</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem15.png"></p>
      <p>The first two start and end the four threads required for the program to run. The
      threads need to be in operation for the other buttons to work.</p>
      <p>If one inadvertently presses the run button twice eight threads will be produced.
      It is best to start again. Clicking the stop Dispatcher System will close four of them,
      but the other will need to be closed from the Thread monitor.</p>
      <p>Choosing the Direction</p>

      <a name="register" id="register"></a>
      <h3>Register a Train</h3>

      <p>The first step is to register a train in a siding or at a stop. Drive a train to
      the required stop, and press Setup Train in Siding.</p>
      <p>We need to tell the system which way the train is pointing. </p>
      <ul>
      <li>At a siding it's easy there is one direction the train can go, and we say which way it is facing out of the siding</li>
      <li>At another stop we have to indicate which way we are talking about and we highlight one direction</li>
      </ul>
      <p>suppose we have the following layout</p>
      <p><img width="617" height="140" alt="" style="padding : 1px;" src="images/NewItem16.png"></p>
      <p>Choosing the Train</p>
      <p>We click SetupTrain in siding</p>
      <p>If the train is siding 1b as indicated one gets the following message</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem17.png"></p>
      <p>Where if we click the dropdown we get all the trains in the system with a speed profile.
      We choose the required train and click OK</p>
      <p>Register the Direction the train is facing</p>
      <p>The following message then pops up</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem18.png"></p>
      <p>Select the correct direction and click OK.</p>
      <p>The train will appear in the memory location for the block</p>
      <p><img width="629" height="140"  alt="" style="padding : 1px;" src="images/NewItem20.png"></p>

      <a name="dispatch" id="dispatch"></a>
      <h3>Set up a dispatch</h3>

      <p>To set up a dispatch a train (or several trains bust be registered with the system, and located in a stop).</p>
      <p>Clicking a red button will allow a dispatch to be set up to that location.</p>
      <p>Suppose one has the following layout with a train in siding1. Click the Passing Loop button
      as indicated to set up a dispatch to Passing Loop.</p>
      <p><img alt="" width="681" height="304" style="padding : 1px;" src="images/NewItem24.png"></p>
      <p>There is an express icon. If set the train type will default to express (moves
      without stopping at intermediate stations), If unset, will default to stopping as shown.</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem26.png"></p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem25.png"></p>
      <p>Select the required train from the drop down, and a dispatch will be set up to the next stop (Siding1A).</p>
      <p><img alt="" width="692" height="157" style="padding : 1px;" src="images/NewItem27.png"></p>
      <p>The train will start moving, and the speed indicated in the Auto trains window.</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem28.png"></p>
      <p>The train will move to Siding1B, stop and the dispatch will terminate, another dispatch
      will start up to the next stop which will be to passing loop.</p>

      <a name="logic" id="logic"></a>
      <h2>Editing the Signal Logic</h2>

      <p>Automatic Signal Logic is not perfect. It works well when there is one turnout per section,
      but when there are more it may get one or more routes in a section wrong.</p>
      <p>This can be overcome by editing the signal logic. You can see whether the logic is wrong
      either by attempting to run a train over the route, or by setting the turnouts along
      the route and seeing whether the signals are green</p>
      <p>In the set route from goods siding and back one can see that the automatic signal logic failed.</p>
      <p><img alt="" style="padding : 1px;" src="images/NewItem22.png"><span class="rvts8">.</p>
      <p>Right click on the signal mast and bring up the signal mast logic editor.for one of the routes (Board2toPT11) we get when we press the edit button:</p>
      <p><img style="padding : 1px;" src="images/NewItem37.png" alt="" width="667" height="495" /></p>
      <p>You can see that for this route Board2toPT11 (the route from the bottom to top) only 2 turnouts instead of 4 are shown, and also one of the aspects is closed instead of thrown. The Dispatch will not work. </p>
      <p>Note that the essential thing to note is that all the turnouts used in the route should be present in the signal logic, and that they should have the correct aspect. If that isn't the case we should delete and replace.</p>
      <p>Delete the route, Press Add Signal Logic. And add a new route. </p>
      <p>Ensure Use Layout Paths, Use Turnout Details from Layout Editor and Use Block Details from Layout Editor are ticked (this will ensure that the transits already produced will not get broken, and set up the transit. Save the panel and restart.</p>
      <p>Dispatcher should now run along the route.</p>

      <!--#include virtual="/Footer.shtml" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
