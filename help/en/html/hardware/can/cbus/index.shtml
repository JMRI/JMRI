<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">
  <meta name="keywords" content="MERG CBUS supports JMRI help support">
  <title>JMRI Hardware Support - MERG CBUS Main Support</title><!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
     <h1>JMRI Hardware Support: MERG CBUS Main Support Page</h1>
      <ul class="snav">
        <li><a href="#documentation">JMRI Documentation</a></li>
        <li><a href="#connecting">Connecting</a></li>
        <li><a href="#cbusevents">MERG CBUS Events</a></li>
        <li><a href="#dcc">DCC over MERG CBUS</a></li>
        <li><a href="#signalling">Signalling</a></li>
        <li><a href="#thirdparty">3rd Party / Support</a></li>
      </ul>
      
        <img src="http://mergcbus.sourceforge.net/cbus.png" align=
      "right" alt="MERG CBUS logo" height="45" width="90">
        <img src=
      "https://www.merg.org.uk/merg_images/merg_logo.png" align=
      "right" alt="MERG logo" height="48" width="102">
      
    <h2><a name="documentation" id="documentation">JMRI Documentation</a></h2>
      <div>
      <p>As support for MERG CBUS continues to evolve, 
      this is not a definitive MERG CBUS network guide. </p>
      
      <p>These JMRI user guides contain considerable simplification of the MERG CBUS scheme, 
      and are aimed at helping new users to JMRI or MERG CBUS, not systems developers. </p>
      
      <p> The latest developers guide and full specification is held on the
      <a href="#thirdparty" >MERG CBUS wiki</a> hosted by MERG.</p>
      
     <h3>JMRI MERG CBUS Support Pages</h3>
        <ul>
        <li><a href="index.shtml">JMRI MERG CBUS Support</a> This Page
            <ul>
            <li><a href="#documentation">JMRI Documentation</a></li>
            <li><a href="#connecting">Connecting</a></li>
            <li><a href="#cbusevents">MERG CBUS Events</a></li>
            <li><a href="#dcc">DCC over MERG CBUS</a></li>
            <li><a href="#signalling">Signalling</a></li>
            <li><a href="#thirdparty">3rd Party / Support</a></li>
            </ul>
      </li>
      <li><a href="Names.shtml">Naming events in JMRI</a>
        
            <ul>
            <li><a href="Names.shtml#events">Event Name and Numbering</a></li>
            <li><a href="Names.shtml#sysname">System Names</a></li>
            <li><a href="Names.shtml#summary">Summary of MERG CBUS Events</a></li>
            <li><a href="Names.shtml#namingspec">Event Naming Specification</a></li>
            <li><a href="Names.shtml#hex">Sending hex strings</a></li>
            <li><a href="Names.shtml#opc">Op Codes in JMRI</a></li>
            </ul>        
        
        </li>
        <li><a href="Details.shtml">Connection Details</a> - MERG CAN connection options in the main JMRI preferences.
        
            <ul>
            <li><a href="Details.shtml#c1">CAN via MERG CAN-RS or CAN-USB</a></li>
            <li><a href="Details.shtml#c2">CAN via MERG Network Interface</a></li>
            <li><a href="Details.shtml#c6">CAN Simulation</a></li>
            </ul>
        </li>
        <li><a href="../index.shtml">JMRI CAN Support</a></li>
        <li><a href="../scripting.shtml">JMRI Scripting for CAN frames ( jython )</a></li>
        </ul>
      
    <h3>JMRI MERG CBUS Tools Support Pages</h3>
      <img src=
      "../images/MERG_Menu.png" alt="MERG menu" align="right"
      height="134" width="188">

      <ul>
        <li><a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml">
        Console</a> - Tool for viewing and sending CAN frames / events.
            <ul>
            <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml#logtofile"
            >Logging to a File</a></li>
            <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml#stats"
            >Statistics</a></li>
            <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml#highlighter"
            >Event Highlighter</a></li>
            </ul>
        </li>

        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/eventtable/EventTablePane.shtml">
        Event Table</a> - Monitors events and presents them in a table full of statistics.
        
           <ul>
           <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/eventtable/EventTablePane.shtml#stats"
           >Event Statistics</a> On / Off / In / Out </li>
            <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/eventtable/EventTablePane.shtml#status"
            >Requesting Event Status</a> + Event Feedback</li>
        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/eventtable/EventTablePane.shtml#importexport"
        >Table Import and Export</a></li>
           </ul>
        </li>

        <li><a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/nodeconfig/NodeConfigToolPane.shtml">
        Node Config Tool</a> - For MERG CBUS node configuration and editing Node Variables.
        
        <ul>
        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/nodeconfig/NodeConfigToolPane.shtml#variables">Node Variables</a></li>
        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/nodeconfig/NodeConfigToolPane.shtml#events">Node Events</a></li>
        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/nodeconfig/NodeConfigToolPane.shtml#nodenumber">Node Numbers</a></li>
        </ul>
        
        </li>
        
        <li><a href="../../../../package/jmri/jmrix/can/swing/send/CanSendFrame.shtml"
        >Send Frame</a> - Send CAN frames or MERG CBUS events
        
            <ul>
            <li><a href="../../../../package/jmri/jmrix/can/swing/send/CanSendFrame.shtml#sequencer"
            >Sequencer</a> Send a sequences of event frames in a loop </li>
            </ul>
        </li>

        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/configtool/ConfigToolFrame.shtml"
        >Event Capture Tool</a> - Capture MERG CBUS events

            <ul>
                <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/configtool/ConfigToolFrame.shtml#examinemultipleevents"
                >Examine Multiple Events</a>, <a href=
                "../../../../package/jmri/jmrix/can/cbus/swing/configtool/ConfigToolFrame.shtml#capturenextevent"
                >Capture the Next event</a></li>
            </ul>

        </li>

      </ul>
      </div>
    <h2><a name="connecting" id="connecting">Connecting</a></h2>
      <div>
      <h3>Typical first-time Connection Steps</h3>
      <ul>
      <li>Many Modern Operating Systems do not require device drivers to be installed when connecting a MERG CANUSB4 to a computer.
      <br>Plug in, and check that no major error messages appear. </li>
      <li>Install JMRI</li>
      <li><a href="Details.shtml">Connection Preferences</a> - Select MERG connection, 
      use "CAN via MERG CAN-RS or CAN-USB" for a CANUSB4 with default settings.
      <br>You could also choose CAN Simulation if you have no physical connection to a MERG CBUS network.
      </li>
      <li>Save / Restart JMRI</li>
      <li>If you are using DCC over the MERG connection, check that JMRI Preferences > Defaults 
      are set correctly, see <a href="#dcc">DCC over MERG CBUS</a>.
      <br>Restart JMRI a few times, checking that the default connection preferences have stuck.
      </li>
      <li>A new menu item MERG appears in the PanelPro or DecoderPro window, containing the MERG tools.
      <br>Help > Window Help will show relevant info in the tools and any JMRI window.</li>
      <li>Test events can be sent from the MERG <a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml">Send CAN Frame tool</a>.  
      <br>
      Set the test event, eg Frame packets "+1" and / or "-2" ( without the quotation marks ), 
      waiting 500 msec and click Start Sending to generate steady MERG CBUS network traffic.
      <br>
      Check that these events are actually being sent over the MERG CBUS network by using a module such as a CANACT.</li>
      <li>Use an external producer module to test connectivity receiving events, confirming they appear in the <a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml">MERG CBUS console</a>.
      </li>
      <li>The <a href="../../../../package/apps/SystemConsole.shtml">JMRI System Console</a>
      is a good tool for diagnosing issues during setup and operation. </li>
      </ul>
       </div>
      
      <h2><a name="cbusevents" id="cbusevents">MERG CBUS Events</a></h2>
      <div>
      
      <p>MERG CBUS events are transmitted as a one-to-many network, 
      connected modules receive all network data then choose whether or not to act on them.
      <br>This enables multiple modules to act on a single event, eg : </p>
      
      
            <ul>
            <li>A physical turnout ( UK - point ) microswitch sensor is wired to a 
            MERG CBUS <b>producer</b> module . 
            <br>The module has been taught to send a particular event when the switch is closed.</li>
            <li>This event is received by a relay driver ( <b>consumer</b> ), which changes the frog polarity.</li>
            <li>The event is also received by an LED module which has not been taught the event, so does nothing.</li>
            <li>The event is also received by an LED module ( <b>consumer</b> ), lighting a LED on a mimic panel.</li>
            <li>The event is also received by JMRI ( <b>consumer</b> )
            <li>A <a href="../../../tools/Sensors.shtml">JMRI sensor</a> has been created with the event number, 
            causing the sensor status to change
            <br>A <a href="../../../tools/Turnouts.shtml">JMRI turnout</a> ( point ) has its 
            <a href="../../../../package/jmri/jmrit/beantable/TurnoutTable.shtml#Turnout_Feedback"
            >turnout feedback</a> set by this sensor.
            <br>
            <a href="../../../apps/PanelPro/PanelPro.shtml">JMRI panel(s)</a> 
            update to reflect the new point position.</li>
            <li><a href="../../../tools/signaling/SignalMastLogic.shtml"
            >JMRI Signalling Logic</a> recalculates, and on the JMRI panel, 
            a signal protecting the point changes from Red to Green.
            </li>
            
            <li>The <a 
            href="../../../tools/signaling/SignalMasts.shtml">JMRI Signal Mast</a> 
            mapping is checked and the relevant MERG CBUS event is sent to change that on the layout ( <b>producer</b> ) </li>
            <li>This event is received by a LED ( or servo ) module which changes a physical on-layout signal ( <b>consumer</b> ) </li>
            <li>This event is also received by a LED module which changes a signal on a mimic panel ( <b>consumer</b> )</li>
            
            <li>A train, controlled by (  <a href="../../../../package/jmri/jmrit/dispatcher/Dispatcher.shtml"
            >JMRI DispatcherPro</a> for a <a href="../../../../package/jmri/jmrit/display/LayoutEditor.shtml"
            >JMRI Layout Editor</a> Panel ) or ( 
            <a href="../../../../package/jmri/jmrit/logix/Warrant.shtml">JMRI Warrants</a> for a <a 
            href="../../../../package/jmri/jmrit/display/ControlPanelEditor.shtml"
            >JMRI Control Panel Editor</a> panel ),<br> sees that the signal ahead has cleared and can increase its speed.
            
            <br>DCC commands are generated from JMRI and sent over MERG CBUS using special events ( <b>producer</b> ) </li>

            <li>These MERG CBUS events are received by a MERG CANCMD ( <b>consumer</b> ), 
            which then sends the actual DCC command out to the track or boosters.
            <br>
            
            <br>This train had requested the section ahead of it, JMRI Dispactcher/Warrants 
            had allocated it ( after checking occupancy and other rules ), 
            then sent the turnout event ( <b>producer</b> ) to change the points.
            <br>The event was received by a Servo or solenoid module ( <b>consumer</b> ) 
            which had triggered correctly, changing the point sensor right at the top of this example.
            
            <br>
            <br>
            </li>
            

            
            <li>You can start small and think big, 
            adding more modules as your time and experience allows.

            <br>Many people use MERG CBUS and JMRI purely for displaying turnout positions, adding things like track occupancy, on-layout signals, mimic panels etc. at a later date.
            
            
            <br>If you anticipate adding track occupancy, 
            especially track circuit electrical block ( Train On Track Indicators ),
            ideally plan the electrical scheme for this on your layout at any early stage.
            
            </li>

            </ul>
      
      
      <p>MERG CBUS events generally come in two types: "ON" and "OFF".</p>
      
      <p>Events can be short ( SLiM ) events, eg <code>+11</code> for event 11 on.</p>
      
      <p>Events can be long ( FLiM ) events, eg <code>-N2E7</code> for node 2 event 7 off.</p>
      
      <p>JMRI, being both a <b>consumer</b> and <b>producer</b> of events, can send and receive on any node number and any event.</p>
      
      </div>
      
    <h3>Adding events to JMRI</h3>
    <div>
      <img src="../images/merg-cbus-add-light-short-400x292.png" align="right" alt="merg cbus add light" width="400" height="292">
    
      <p>MERG CBUS events are stored as </p>
      <ul>
      <li><a href="../../../tools/Sensors.shtml" title="JMRI Sensors">JMRI Sensors</a> ( Inputs ) 
      </li>
      <li><a href=
      "../../../tools/Turnouts.shtml" title="JMRI Turnouts">JMRI Turnouts</a> ( Outputs )
      </li>
      <li><a href=
      "../../../tools/Lights.shtml" title="JMRI Lights">JMRI Lights</a> ( Outputs ).</li>
      </ul>
      
      <p>These are accessed via JMRI Tables, ie PanelPro > Tools > Tables > (

       <a href="../../../../package/jmri/jmrit/beantable/SensorTable.shtml" title="JMRI Sensor Table">Sensors</a>,
       <a href="../../../../package/jmri/jmrit/beantable/TurnoutTable.shtml" title="JMRI Turnout Table">Turnouts</a> or
       <a href="../../../../package/jmri/jmrit/beantable/LightTable.shtml" title="JMRI Light Table">Lights</a> ) .

      <br>When the table loads, click on " Add... " button at bottom left to create an item.</p>
      
    <img src="../images/merg-cbus-add-sensor-short-781x187.png" alt="merg cbus add sensor" width="646" height="155">
    
      <p>For most short events, you just need to enter the number. Here's a few examples : </p>
      
      <img src="../images/merg-cbus-turnout-long-400x118.png" alt="merg cbus add turnout" width="400" height="118" align="right">
      
      <table border="1">
        <tbody>
        <tr>
          <th>Hardware Address</th>
          <th>Meaning</th>
          <th>Event Consumed<br>as Sensor</th>
          <th>Event Produced<br>as Turnout</th>
          <th>Event Produced<br>as Light turned</th>
        </tr>
        <tr>
          <td><code>+18</code></td>
          <td>Event 18 On
          <br>Event 18 Off</td>
          <td>Sets sensor Active<br>Sets sensor Inactive</td>
          <td>Thrown<br>Closed</td>
          <td>On<br>Off</td>
        </tr>
        <tr>
          <td><code>+18;+21</code></td>
          <td>Event 18 On
          <br>Event 21 On</td>
          <td>Sets sensor Active<br>Sets sensor Inactive</td>
          <td>Thrown<br>Closed</td>
          <td>On<br>Off</td>
        </tr>
        <tr>
          <td><code>+18;-21</code></td>
          <td>Event 18 On 
          <br>Event 21 Off</td>
          <td>Sets sensor Active<br>Sets sensor Inactive</td>
          <td>Thrown<br>Closed</td>
          <td>On<br>Off</td>
        </tr>
        <tr>
          <td><code>+N2E18</code></td>
          <td>Node 2 Event 18 On
          <br>Node 2 Event 18 Off</td>
          <td>Sets sensor Active<br>Sets sensor Inactive</td>
          <td>Thrown<br>Closed</td>
          <td>On<br>Off</td>
        </tr>
        </tbody></table>
        
        <img src="../images/merg-add-sensor-invalid-622x245.jpg" align="right" 
        alt="merg cbus add new invalid name" width="400" height="156">
    
        <p>You will need to enter the Hardware Address in a JMRI recognised format to create the event.
        <br>If the create button is grayed out, check your hardware naming format.</p>
        
        
        
        <p>Adding a User Name ( using any characters ) when creating a table item may 
        make accessing it easier in JMRI. </p>  
        <p>Remember to save your tables!</p>
        
        <p>For more on events, see 
        <a href="Names.shtml">JMRI system naming with MERG CBUS</a>.</p> 
        
        <!--
        A big chunk of text discussing naming options + naming table moved to /help/en/html/hardware/can/cbus/Names.shtml
        @icklesteve June 2018
        -->
        </div>
        
      <h2><a name="dcc" id="dcc">DCC over MERG CBUS</a></h2>
      
        <img src="../images/merg-jmri-preferences-defaults-800x409.jpg"
        width="500" height="251" alt="JMRI MERG CONNECTION DCC DEFAULT PREFERENCES" align=
        "right">
      
        <p>DCC is not a requirement for MERG CBUS or JMRI. Many DC layouts use 
        MERG CBUS + JMRI for route setting, signalling and track occupancy purposes.
        </p>      
      
        <p>JMRI will send the DCC events over the MERG CBUS network and can be monitored within the MERG CBUS console</p>

        <p>The MERG system allows for advanced consisting to be set using CANCMD and CANCABs.</p>
        
        
        <p><a href="../../../../html/tools/consisttool/ConsistTool.shtml" 
        title="JMRI Consisting">JMRI Consisting</a> 
        : Advanced Decoder Consisting ( Decoder Assisted Consist) is currently unsupported,
        hence this is set to Internal.
        
        <p>Primary Address Consists are supported however.</p>
      
      
      <h3>Connecting a MERG DCC Command Station CANCMD</h3>
        
        <p>Make sure that main <a href="../../../../package/apps/TabbedPreferences.shtml#Defaults"
        >JMRI Preferences Defaults</a> are set to your MERG connection for 
        Throttles, Power Control, Command Station, Service Programmer and Ops Mode Programmer.</p>
        <p>Although the CANCMD supports Advanced Consisting, this has not been implemented within JMRI at present.</p>
      
        <p>You can use an existing DCC command station, 
        or have a separate DCC command station for a programming track 
        ( eg. a <a href="../../../../html/hardware/sprog/SPROG.shtml">Sprog</a> ) by setting these options.</p>

        <p>Events do not need to be set up to connect a MERG DCC Command Station CANCMD.</p>
        
        <p>DCC Accessory Decoders can be controlled over MERG CBUS and a CANCMD by creating turnouts with explicit RDCCx Opscode commands, 
        see <a href="Names.shtml#hex">MERG CBUS hex event naming</a>.
        <br>
        This is also discussed within the <a href="#thirdparty">MERG CBUS WIKI</a> documentation.</p>
        
      <h3>Programming Train CV's</h3>
    
        <p>Program train CV's using DecoderPro</p>
        
        <p>CANCMD fully supports DCC CV programming.</p>


    <h2><a id="signalling" name="signalling">Signalling</a></h2>
      <div>
      <p>There are multiple ways to interface 
      <a href="../../../../html/tools/signaling/index.shtml">JMRI signalling</a> with MERG CBUS modules.</p>
      <p>You are strongly advised to let JMRI control your signal logic, 
      however it's also possible to link JMRI with 3rd party signalling over MERG CBUS.</p>
      
      <p>JMRI includes various UK signalling definitions, a popular choice being 
      <a href="../../../../../../xml/signals/BR-2003/index.shtml">BR2003</a>, however 
      for some layouts <a href="../../../../../../xml/signals/LMS-1932/index.shtml">LMS 1932</a> or <a 
      href="../../../../../../xml/signals/GWR-1931/index.shtml">GWR 1931</a> may be more appropriate.</p>
      
        <p>Once you've got basic signalling setup, you can customise your layout with things like 
        the UK East Coast Main Line flashing green aspects.
        <br>Add JMRI Logix to listen for the correct conditions to display the aspect and send events to the layout.
        </p>
      
      
      
      <h3>Sending JMRI Controlled Signal Logic to your layout</h3>
      
        <img src="../images/signal-mast-turnout-contolled-540x613.jpg"
        width="400" height="454" alt="JMRI signal mast turnout controlled" align= "right">
      
      
        <p>There are multiple ways of sending cbus events from JMRI out to LED or servo 
        signal control modules, this is just one approach. </p>
        
        <ul>
        <li>Add all aspects to the signal in question to the Turnout Table, eg
            <br>Signal1Red : Hardware address : <code>+N256E412</code> ( Set Node to whatever your JMRI node is, only uses the ON event )
            <br>Signal1Flashing Precautionary : Hardware address : <code>+N256E416</code>
            <br>Signals which can only display 2 aspects ( eg a Servo controlling a semaphore signal ) 
            can be setup with 1 MERG CBUS event, using the ON and OFF status, eg Signal5RedGreen : <code>+N256E418;-N256E418</code> .
        </li>
        
        <li>It's also worth creating an internal turnout named something like DummySignalOutput.
        <br>You can use this output for signals which have not yet been installed with CAN events but may have in future.
        </li>

        <li>Add the Signal Mast via the Signal Mast Table</li>
        <li>Specify type : Turnout Controlled</li>
        <li>Specify which turnout ( aka JMRI message output ) you 
        wish to show to show for each aspect, eg. Signal1Red Thrown.
        </li>
        
        <li> 
        For virtual signal masts which are not yet physically installed on your layout, 
        use the DummySignalOutput internal turnout created earlier.
        </li>
        </ul>
    
        <p>With this approach, you can easily add and edit which MERG CBUS events are sent 
        from a JMRI controlled signal without editing or re-creating the underlying signal logic.</p>
        <p>It also ensures that only 1 MERG CBUS message is sent for flashing aspects, 
        specify this flashing in the module board, not JMRI!  
        Some Signal Mast types send 1 MERG CBUS message for each flash.
        <br>A layout with 20 quad aspect signals could send 40 odd cbus events every 0.5seconds, 4,800 events per minute. 
        This could make network diagnosis awkward, although very unlikely to swamp a MERG CBUS network.</p>
        <p>As stated previously, this is just one approach. 
        There are may ways of interfacing JMRI with MERG CBUS signalling systems.</p>
      
      <h3>Receiving Module supplied or existing Signal Logic into JMRI</h3>
      <p>This is normally done the other way round, however people may have 
      existing systems in place which they do not want to change.</p>
      
        <ul>
        <li>Create a virtual Signal Mast, named something like SignalMast7</li>
        <li>Create incoming MERG CBUS event(s) as sensor(s), eg "SignalMast7Red".</li>
        <li>For each signal state ( eg. Stop or Proceed ), 
        create a new <a href="../../../tools/Logix.shtml">JMRI Logix</a> 
        in the <a href="../../../../package/jmri/jmrit/beantable/LogixTable.shtml"
        >JMRI Logix Table</a> to set the signal head or mast as appropriate, similar to
        <br>
        If SignalMast7Red is active, set SignalMast7 to Stop
        </li>
        <li>Repeat for each signal state</li>
        </ul>
    </div>
    <h2><a id="thirdparty" name="thirdparty">Third Party / Support</a></h2>
     <div>
      <ul>
        <li><a href="https://www.merg.org.uk/merg_resources/cbus.php"
        >https://www.merg.org.uk/merg_resources/cbus.php</a>
        The Model Electronic Ralway Group MERG CBUS introduction page.
        </li>
        
        <li><a href="https://www.merg.org.uk/merg_wiki/doku.php?id=public:cbuspublic:start"
        >https://www.merg.org.uk/merg_wiki/doku.php?id=public:cbuspublic:start</a>
        The Model Electronic Ralway Group MERG CBUS Wiki with full protocol specification.
        </li>
      
        <li><a href="https://www.merg.org.uk/merg_resources/cbus-dcc.php"
        >https://www.merg.org.uk/merg_resources/cbus-dcc.php</a> 
        The Model Electronic Railway Group MERG-DCC help page.
        </li>
        
        <li><a href="https://www.merg.org.uk/kits.php#sect35"
        >https://www.merg.org.uk/kits.php</a>
        MERG CBUS kits. Constructing kits may not be an easy task for all, it requires a 
        certain amount of technical ability, and foremost the willingness to learn.
        <br>
        Classic refers to a 15v AC kit power supply ( most <i>easily</i> adaptable for 12v DC ), 2G are all 12v DC kits.
        <br>
        Classic and 2G modules can both be on the same network with an element of care, seek further advice if in any doubt, do not guess!
        <br>
        Reliabiliy soldering MERG kits together may not be the best cbus route for all. 
        If you are in the least bit impatient, you may be better suited to a commercial offering.
        <br>
        If you wish to learn about electronics and their application in a model railway environment however, 
        the member resources available are many and varied!
        </li>

        <li>Please ask for help by other <a href="https://groups.io/g/jmriusers/">JMRI Users at Groups.io</a>, 
        or if a MERG member on the very active MERG members forum.
        </li>
        
        <li><a href="https://github.com/JMRI/JMRI/issues?q=is%3Aissue+is%3Aopen+merg"
        >https://github.com/JMRI/JMRI/issues?q=is%3Aissue+is%3Aopen+merg</a> 
        Current known ( open ) issues relating to MERG by the JMRI developers on Github.
        <br>Github is <b>not</b> a support tool.</li>
        
        <li><a href="https://github.com/MERG-DEV">https://github.com/MERG-DEV</a>
        MERG CBUS Development on Github - Much of it is licensed under the GNU General Public License v3.0.
        </li>
        
        <li><a href="https://github.com/phillipsnj/mergCbusServer">https://github.com/phillipsnj/mergCbusServer</a> 
        MERGCBUS Server - enables multiple network connections to a MERG CANUSB4 using 
        <a href="https://nodejs.org">Node.js</a> , MIT License.
        </li>
        
        <li><a href="https://github.com/amaurial/mergCanBus">https://github.com/amaurial/mergCanBus</a>
        MERG CBUS implementation for Arduino. ( + have a look at Amauria's other MERG CBUS Github projects )
        </li>
        
        <li><a href="http://www.oscale.net/?q=en/cbus">http://www.oscale.net/?q=en/cbus</a>
        MERG CBUS on an Arduino using CAN BUS shields - See download links at bottom ( in English + German )
        </li>
        
        <li><a href="https://www.npmjs.com/search?q=keywords:MERG">https://www.npmjs.com/search?q=keywords:MERG</a>
        node.js modules to create a MERG CBUS module + Class to create a MERG CBUS module conneted via ethernet.
        </li>

        <li><a href="http://www.rickdavis.co.uk/rail/control-cbus.php">http://www.rickdavis.co.uk/rail/control-cbus.php</a>
        Middle Earth Model Railway has over 70 MERG CBUS modules installed on it and uses JMRI.
        </li>

        </ul>
        
        
        <p>Originally named CBUS by co-founder Gil Fuchs, MERG CBUS isn't a MERG 
        project and is "open source" or public domain.
        <br>In 2007, when the scheme was being developed, MERG had a website willing to host the project 
        and organised the kits ( many designed by the other MERG CBUS co-founder Mike Bolton ).
        <br>The scheme is now called MERG CBUS to avoid conflict with a home automation 
        system which has trademark on a similar name. </p>
    
        <p>MERG CBUS co-founders : Gil Fuchs, Mike Bolton</p>
        <p>Mike Bolton designed hardware and coded firmware for many of the initial modules, 
        lead for CAN-RS module and code </p>
        
        
        <p>The standalone MERG DCC programmer was the inspiration behind the popular 
        <a href="../../../../html/hardware/sprog/SPROG.shtml">SPROG DCC programmer</a>, which is fully supported in JMRI.</p>
        
        <p>Andrew Crosland has been heavily involved with JMRI through both SPROG and MERG CBUS, 
        writing much code to enable JMRI to support MERG CBUS. 
        <br>Anything to do with CANUSB, CANUSB4 and Gridconnect etc, he's an expert! 
        <br>Andrew also he wrote the MERG CANCMD code and designed the MERG CANUSB4</p>
        <p>Kevin Dickerson was instrumental in writing the original JMRI to MERG CBUS interfaces, supported by Andrew.</p>
        
        <p>Pete Brownlow has updated the CANCMD firmware, also lead for the CANEther module, and the MERG JMRI go-to person!</p>
        
        <p>Amauri Albuquerque has been the main SW writer for the CANPiWi 
        ( based on the RPi Zero W and is an interface between ED/ WiThrottle and CBUS ), and CANPi.
        <br>CANPi is a version of this for a RPi 3B ( with Ian Hart's CAP.)
        </p>
        
        <p>Ian Hart designed the Pi CAP, also the popular CANMIO range of modules.</p>
        
        <p>Roger Healey is also key to the MERG CBUS success story being lead developer on the FCU, 
        a Windows configuration utility for setting up FLiM modules ( independent of JMRI ) </p>
    
        <p>N J Philips established the mergCbusServer and keeps it up to date.</p>
        
        <p>The MERG kit elves who package the kit parts are amazing, 
        having enabled thousands of MERG CBUS module kits to be sent out to members.</p>
        
        <p>The JMRI developers do a fantastic job of keeping updates flowing, making JMRI easier to use on each release :-)</p>
        
        <p>Apologies to anyone missed out or inaccuracies, let us know and I'll gladly edit the page! - SY</p>
        </div>
    
      <!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>