<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id$ -->
<html lang="en">
<head>
<title>JMRI: DCC++</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta content="Mark Underwood" name="Author">
<meta name="keywords" content="DCC++ java model railroad JMRI install">

<!-- Style -->
<LINK REL="stylesheet" TYPE="text/css" HREF="/css/default.css"
	MEDIA="screen">
<LINK REL="stylesheet" TYPE="text/css" HREF="/css/print.css"
	MEDIA="print">
<LINK REL="icon" HREF="/images/jmri.ico" TYPE="image/png">
<LINK REL="home" TITLE="Home" HREF="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">

<h1>
	JMRI Hardware Guide: DCC++
</h1>

<h2>Overview</h2>

    DCC++ is an Open Source Arduino-based Do-it-Yourself DCC command station.
    
    For more information on how to construct and program a DCC++ Base Station,
    refer to the following:
    <ul>
        <li><a href="https://github.com/DccPlusPlus">GitHub Repository</a></li>
        <li><a href="https://www.youtube.com/channel/UCJmvQx-fe0OMAIH-_g-_rZw/feed">
        YouTube Channel</a></li>
        <li><a
    href="http://www.trainboard.com/highball/index.php?threads/introducing-dcc-a-complete-open-source-dcc-station-and-interface.84800/">Trainboard.com
    Discussion</a></li>
    <li><a href="http://www.arduino.cc">Arduino Project Site</a></li>
    <li><a href="http://www.sparkfun.com">Sparkfun</a> - one of many
    places to acquire hardware</li>
    </ul>

<h2>Supported Hardware</h2>

<h3>Command Stations</h3>

    Currently DCC++ Base Stations can be built from either the Arduino Uno
    or Arduino Mega platforms.  JMRI should support either platform via USB.
</div>

<h3>Computer Interfaces</h3>

 Currently, three interfaces are supported:
 <ul>
     <li>Serial/USB: Direct connection to Arduino via a USB cable</li>
     <li>Simulator: Simulated Base Station for off-line operation and testing.</li>
     <li>DCC++ Over TCP: Remote network connection to a Base Station</li>
 </ul>
 
 For the DCC++ Over TCP, a host computer must be connected to the Base Station
 over a Serial connection.  This host computer then runs the DCC++ Over TCP
 Server.  A remote computer (or several remote computers) can then use the
 DCC++ Over TCP interface to remotely access and control the Base Station.
 
<a name=Limitations><h2>Limitations</h2></a>

<div class=list>
    <dl>
    	<dt class=left>JMRI</dt>
	<dd class=first>
	<p>JMRI currently supports the UNO_V1.5 Base Station Interface.
	</dd>

     </dl>
</div>


<h2>Connecting to a DCC++ Base Station via USB</h2>
<ol>
    <li>
    <li>To connect your computer to one of these XPressNet based DCC
    systems, you can use a Lenz LIUSB interface unit.  Connect the LIUSB 
    to your DCC command station via their XPressNet connections.  Then
    connect the LIUSB to your computer's USB port using the supplied
    cable.

    <li>Install the appropriate drivers.
    <ul>
    <li> For the DCC++ Base Station with JMRI, you must first install a
    software driver on your computer.  Internally, the device contains a
    FTDI FT232BM USB to Serial converter.  There are two drivers available
    for this device, make sure you obtain the Virtual Comm Port (VCP)
    driver.<br />
    
    The device drivers for Linux are included with recent versions of
    the Linux kernel.<br />
    Device drivers for Linux, and MacOS (8,9 and X ) and Windows are
    available from the <a href="http://www.ftdichip.com/">FTDI  website</a>
    (direct link to the drivers current as of this writing: <a 
    href="http://www.ftdichip.com/Drivers/VCP.htm">http://www.ftdichip.com/Drivers/VCP.htm</a>).
    </li>
    </ul>
    
    <p> When the device drivers are installed, connect the Arduino Base Station
        to your computer using a standard USB cable.

    <li>Once the drivers are installed, you are ready to configure
    JMRI.  Start one of the JMRI-based programs, Then go to the
    preferences panel. This opens automatically the first time a program
    is run, or you can select it from the "Edit" menu.  </li>

    <li>Select "DCC++" from the top selection box ("System Manufacturer"). </li>
    <li>Select "DCC++ Serial Port" from the second selection box ("System Connection")</li>
    <li>Select the appropriate USB/Serial port from the third selection box 
        ("Serial Port")    </li>
    
    <li>Click "Save". You'll be asked if it's OK for the program to  
        quit, click "Yes".</li>

    <li>Restart the program. You should be up and running.</li>
</ol>

<h2>Connecting to a DCC++ System using DCC++ Over TCP</h2>
 
<ol> 
    <li>First, connect the DCC++ Base Station to the host computer via the
        Serial interface as described above.</li>
    <li>On the host computer select "DCC++ Over TCP Server" from the DCC++ Menu.
        Check the settings, then press the "Start Server" button.  If you want
        the server to automatically start when JMRI is launched, click the
        checkbox provided.</li>
    <li>The Host computer must be running with the DCC++ Server active before
        launching the Client computer.</li>
    <li>On the client computer, launch JMRI on the Client computer.</li>
    <li>In the Connection Preferences, select DCC++ as the System Manufacturer</li>
    <li>Select "DCC++ Over TCP" as the System Connection Type</li>
    <li>Enter the network name or IP address of the host computer and verify
        that the port number is the same as on the host computer.</li>
    <li>Save the prferences and restart.</li>
</ol>

<p>Once both the Host and Client instances of JMRI are configured,  you can use
    the Client JMRI just the same as if it were directly connected to the Base
    Station.  The client JMRI instance can be on the same computer, in the same
    house, or across the country from the host.</p>
 


<h2>Connecting to the DCC++ Simulator</h2>
<ol> 
    <li> Start one of the JMRI-based programs, Then go to the preferences panel.    
    This opens automatically the first time a program is run, or you can select
     it from the "Edit" menu.  

    <li>Select "DCC++ Simulator" from the top selection box. There are no
    additional configuration steps required to use the DCC++ Simulator.
    
    <li>Click "Save".  You'll be asked if it's OK for the program to  
    quit, click "Yes".

    <li>Restart the program. You should be up and running.
</ol> 

<h2>Documentation</h2>

Additional documentation will be provided on other pages linked here:

<!--#include virtual="/Footer" -->
</body>
</html>
