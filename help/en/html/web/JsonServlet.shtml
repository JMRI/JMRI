<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="generator" content="HTML Tidy for HTML5 for Apple macOS version 5.8.0">
  <title>JMRI JSON Servlet</title><!--#include virtual="/Style.shtml" -->

  <style type="text/css">
    table#jsonResponses {
      border-collapse: collapse;
    }

    table#jsonResponses td {
      border: 1px solid gray;
      width: 33%;
    }

    table.data {
      margin: initial;
      margin-left: 2em;
    }

    code {
      white-space: normal;
    }
  </style>
</head>
<body>
  <!--#include virtual="/Header.shtml" -->

  <div id="mBody">
    <!--#include virtual="Sidebar.shtml" -->

    <div id="mainContent">
      <h1>JMRI JSON Servlet</h1>

      <p>The JMRI <a href="https://en.wikipedia.org/wiki/JSON">JSON</a> Servlet provides a RESTful
      API and a <a href="https://en.wikipedia.org/wiki/WebSocket">WebSocket</a> API for accessing
      and editing user defined objects in JMRI. This document describes how to enable the JMRI JSON
      servlet and provides some examples of use.</p>

      <p><strong>Note</strong> the JMRI JSON protocol is documented in <a href=
      "https://jmri.org/JavaDoc/doc/jmri/server/json/package-summary.html">JMRI API
      Documentation</a>.</p>

      <h2 id="jmri_json_servlet">JMRI JSON Servlet</h2>

      <p>An overview of how Web Server operates using JSON between JMRI and the web browser, using
      web.servlet.panel as an example, can be found on <a href=
      "PanelServlet.shtml#example">PanelServlet Help page</a>.</p>

      <h2>Setting up the JSON Servlet</h2>

      <p>The JMRI JSON Servlet is a feature that is part of the Web Server. To use this
      service:</p>

      <ol>
        <li>Ensure the web server's port is unique:
          <ul>
            <li>Open the Preferences dialog</li>

            <li>Click <strong>Web Server</strong> on the left side</li>

            <li>Ensure the port number is unique (for example 12080). Other ports are used by
            WiThrottle, JSON Server, etc.</li>

            <li>Click Save</li>
          </ul>
        </li>

        <li>Click <strong>Actions</strong> and <strong>Start Web Server</strong> to ensure the web
        server is running (<strong>Tools &rArr; Servers &rArr; Start JRMI Web Server</strong> in
        PanelPro).</li>

        <li>If you want the Web Server to run each time you start JMRI:
          <ul>
            <li>Open the JMRI <strong>Preferences</strong> dialog</li>

            <li>Select <strong>Start Up</strong> in the left column</li>

            <li>Click <strong>Add &#9662;</strong></li>

            <li>Select <strong>Perform action...</strong></li>

            <li>Select <strong>Start Web Server</strong></li>

            <li>Click <strong>OK</strong></li>
          </ul>
        </li>
      </ol>

      <h2>Paths</h2>

      <p>The servlet responds to the following paths:</p>

      <dl>
        <dt>/json</dt>

        <dd>
          Depending on protocol:
          <dl>
            <dt>HTTP</dt>

            <dd>Open a JSON WebSocket console that allows experimentation with JSON sockets.</dd>

            <dt>WS</dt>

            <dd>Open a JSON WebSocekt.</dd>
          </dl>
        </dd>

        <dt>/json/<em>type</em></dt>

        <dd>
          Using the HTTP protocol:
          <dl>
            <dt>GET</dt>

            <dd>request a list of objects of <em>type</em></dd>

            <dt>PUT</dt>

            <dd>add an object of <em>type</em></dd>
          </dl>
          A JSON array of valid types for your JMRI installation is available by using the
          <em>type</em> "<code><a href="http://localhost:12080/json/type">type</a></code>" (with
          JMRI Web Server running). See the <a href=
          "https://jmri.org/JavaDoc/doc/jmri/server/json/package-summary.html">protocol
          documentation</a> for more details.
        </dd>

        <dt>/json/<em>type</em>/<em>name</em></dt>

        <dd>
          Using the HTTP protocol:
          <dl>
            <dt>GET</dt>

            <dd>request the object of <em>type</em> with name <em>name</em></dd>

            <dt>POST</dt>

            <dd>modify the object of <em>type</em> with name <em>name</em></dd>

            <dt>DELETE</dt>

            <dd>remove the object of <em>type</em> with name <em>name</em></dd>
          </dl>
        </dd>
      </dl>

      <h2 id="jmri_json_server">JMRI JSON Server</h2>

      <p>The JMRI JSON server is functionally identical to the JSON WebSocket interface, but
      running over a standard network socket.</p>

      <h2 id="jquery_jmri">jquery.jmri.js</h2>

      <p><a href=
      "https://github.com/JMRI/JMRI/blob/master/web/js/jquery.jmri.js"><em>jquery.jmri.js</em></a>
      is a <a href="https://jquery.com">jQuery</a> library that ships with JMRI and makes the JSON
      protocol support "just work" on most current browsers.</p>

      <p>Examples of use of the jquery.jmri.js JavaScript library that ships with JMRI include:</p>

      <dl>
        <dt>Operations Conductor</dt>

        <dd>
          source <a href=
          "https://github.com/JMRI/JMRI/blob/master/web/ts/operations.js">/ts/operations.js</a>
        </dd>

        <dt>Panel</dt>

        <dd>
          source <a href=
          "https://github.com/JMRI/JMRI/blob/master/web/ts/panel.js">/ts/panel.js</a>
        </dd>

        <dt>JSON Console</dt>

        <dd>
          source <a href=
          "https://github.com/JMRI/JMRI/blob/master/web/ts/json-console.js">/ts/json-console.js</a>
        </dd>

        <p>Note: The source code for the above is found in the web/ts directory, which contains
            the JavaScript and Typescript source code.  This is
            <a href="../doc/Technical/Patterns.shtml#typescript">compiled to the web/js directory</a>
            for actual execution.

        <dt>
          <a href="/web/power.html">Power Demonstration</a>
        </dt>

        <dd>
          source <a href=
          "https://github.com/JMRI/JMRI/blob/master/web/power.html">/web/power.html</a>
        </dd>
      </dl>
      <!--#include virtual="/Footer.shtml" -->
    </div>
    <!-- closes #mainContent-->
  </div>
  <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
