<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//FR"
"http://www.w3.org/TR/html4/strict.dtd">

<html lang="fr">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Portable File Access</title>
  <meta name="author" content="Bob Jacobsen">
  <meta name="keywords" content="JMRI technical code portable file location">
  <!-- La combinaison des commentaires "Define" et {Header,Style, Logo et Footer} -->
  <!-- sont un mod&#232;le de conception arbitraire utilis&#233; par le script update.pl pour -->
  <!-- remplacer facilement le code commun d'en-t&#234;te/pied de page pour toutes les pages web -->
  <!-- supprimer les 2 suivants D&#233;finit si vous voulez utiliser le logo JMRI par d&#233;faut -->
  <!-- ou les modifier pour refl&#233;ter votre logo alternatif -->
  <!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
  <!-- /Style -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->
<div id="mBody">
  <!--#include virtual="Sidebar.shtml" -->
  <div id="mainContent">

  <h1>Code JMRI : Acc&#232;s au fichier portable</h1>
      <p>JMRI utilise des fichiers pour les ic&#244;nes,
      des images, des fichiers de panneau, des scripts et bien d'autres choses encore.
      Les r&#233;f&#233;rences &#224; ces &#233;l&#233;ments sont couramment utilis&#233;es par divers codes, et
      stock&#233;es dans des fichiers XML. Certains de ces fichiers sont distribu&#233;s avec
      JMRI, et certains sont cr&#233;&#233;s en dehors de la distribution de JMRI
      par l'utilisateur local.</p>

      <p>En outre, JMRI est une application multiplateforme, et nous
      vouulons pouvoir d&#233;placer les fichiers XML JMRI d'un ordinateur &#224; l'autre
      , m&#234;me d'un type diff&#233;rent, et les  les faire travailler encore.</p>

      <p> Pour ce faire, nous avons cr&#233;&#233; un syst&#232;me de pseudo-URL pour
      l'acc&#232;s aux emplacements des fichiers. Les noms de fichiers sont utilis&#233;s en interne et
      stock&#233;s dans des fichiers XML avec des pr&#233;fixes qui identifient o&#249;  se trouve le fichier 
      de mani&#232;re ind&#233;pendante du syst&#232;me.

      <dl>
        <dt>programme:</dt>
        <dd>Traite le chemin comme un chemin relatif sous le r&#233;pertoire d'installation de JMRI.
          Dans JMRI 2.13.1 et ant&#233;rieurs, c'&#233;tait le pr&#233;fixe <code>resources:</code>.</dd>

        <dt>preference:</dt>
        <dd>Traite le chemin comme un chemin relatif sous l'arborescence des fichiers (ou pr&#233;f&#233;rences) 
        de l'utilisateur. Dans JMRI 2.13.1 et avant, c'&#233;tait le pr&#233;fix <code>file:</code> .</dd>
          
        <dt>profil:</dt>
        <dd>Traite le chemin comme un chemin relatif sous le r&#233;pertoire du profil de configuration.</dd>
          
        <dt>settings:</dt>
        <dd>Traite le chemin comme un chemin relatif sous le r&#233;pertoire des param&#232;tres 
        (le r&#233;pertoire o&#249; sont stock&#233;es les pr&#233;f&#233;rences par ordinateur).</dd>
        
        <dt>home:</dt>
        <dd>Traite le chemin comme un chemin relatif sous le r&#233;pertoire d'origine de l'utilisateur.</dd>
      </dl>
      
      Sinon, traitez le nom comme un chemin relatif sous le 
      r&#233;pertoire du programme pour assurer la r&#233;trocompatibilit&#233;. 
      Dans tous les cas, les noms de chemin absolus fonctionneront, 
      mais ne seront pas compatible avec les diff&#233;rentes plates-formes.

      <h2>Mise en &#339;uvre</h2>
      Le <a href=
      "https://jmri.org/JavaDoc/doc/jmri/util/FileUtil.html">jmri.util.FileUtil</a>
      fournit des routines de traduction pour rendre cela automatique :

      <dl>
        <dd>static public String getExternalFilename(String
        pName)</dd>

        <dt>Convertir un nom interne (avec les pr&#233;fixes comme ci-dessus) en
        un nom de chemin absolu &#224; utiliser sur l'ordinateur local. Il n'y a
        aucune garantie que le fichier ou le r&#233;pertoire qui l'accompagne est
        r&#233;ellement pr&#233;sent, mais le nom du chemin sera syntaxiquement
        valable sur l'ordinateur actuel.</dt>

        <dd>static public String getPortableFilename(File
        fichier)</dd>

        <dd>static public String getPortableFilename(String
        nom de fichier)</dd>

        <dt>Convertir un fichier ou une cha&#238;ne de caract&#232;res en un nom de cha&#238;ne
        avec le pr&#233;fixe appropri&#233;.</dt>
      </dl>
      <p> Vous devez appeler getExternalFilename() avant de passer le nom 
      d'un fichier &#224; tout fichier Java commun, et getPortableFilename()
      chaque fois que vous obtenez un fichier ou un nom de fichier d'une classe Java. 
      Il faut appeler l'un ou l'autre plusieurs fois, car ils ne feront que passer 
      dans ce cas. En particulier, appelez getPortableFilename() avant de le 
      stocker dans un fichier XML.</p>
      <!--#include virtual="/Footer.shtml" -->

    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
