<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">
<!--UpDated by Herv&#233; Blorec  2013/9/09-->

<html lang="fr">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Utilisation de Sch&eacute;ma XML</title>
  <meta content="Bob Jacobsen" name="Author">
  <meta name="keywords" content=
  "JMRI technical code xml schema usage">
  <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
  <!-- are an arbitrary design pattern used by the update.pl script to -->
  <!-- easily replace the common header/footer code for all the web pages -->
  <!-- delete the following 2 Defines if you want to use the default JMRI logo -->
  <!-- or change them to reflect your alternative logo -->
  <!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div id="mBody">
    <!--#include virtual="Sidebar" -->

    <div id="mainContent">
      <h1>JMRI: Utilisation de Sch&eacute;ma XML</h1>JMRI utilise
      XML pour un certain nombre d'objectifs: tenir les
      d&eacute;finitions d&eacute;codeur, pour son <a href=
      "XmlPersistance.shtml">syst&egrave;me de persistance</a> des
      informations de configuration et de panneau, et de
      cr&eacute;er des parties du site web &agrave; partir d'autres
      fichiers. Cette page d&eacute;crit comment nous
      pr&eacute;ciser le contenu de ces fichiers &agrave; l'aide de
      <a href=
      "http://www.w3schools.com/schema/schema_intro.asp">schema
      XML</a>.

      <p>Pour des exemples (pas un tutoriel!) sur la structure de
      notre sch&eacute;ma, voir la <a href=
      "XmlSchemaExamples.shtml">page exemples</a>.</p>

      <p>Le sch&eacute;ma courant peut &ecirc;tre vu en ligne dans
      le <a href="http://jmri.org/xml/schema">r&eacute;pertoire
      schema</a>. Le plus couramment utilis&eacute; est le <a href=
      "http://jmri.org/xml/schema/layout.xsd">sh&eacute;ma pour
      fichiers de panneau layout.xsd</a>. Voir ci-dessous comment
      il est organis&eacute;.</p>

      <h2>Acc&egrave;s aux D&eacute;finitions de
      Sch&eacute;ma</h2>JMRI utilise Schema XML pour d&eacute;finir
      le format de ses fichiers.

      <p>Ces sch&eacute;ma XML peuvent &ecirc;tre disponibles pour
      le programme quand il lit les fichiers, car ils
      d&eacute;finissent les valeurs par d&eacute;faut pour les
      attributs manquants et les autres informations
      n&eacute;cessaires.</p>

      <p>Dans les distributions JMRI, celles-ci sont
      stock&eacute;es dans le r&eacute;pertoire <a href=
      "/xml/schema">xml/schema</a>. Notez qu'elles ne sont pas
      enregistr&eacute;es dans chaque r&eacute;pertoire aux
      c&ocirc;t&eacute;s des fichiers XML. Il y a tout simplement
      de trop nombreux lieux pour garder un tel ensemble de
      fichiers de d&eacute;finitions de sch&eacute;ma &agrave;
      jour. JMRI lui-m&ecirc;me, via la classe jmri.jmrit.XmlFile,
      fournit une aide pour localiser ces fichiers lorsque
      l'analyseur XML en a besoin.</p>

      <h2>D&eacute;veloppement de Sch&eacute;ma JMRI</h2>Notre
      organisation pr&eacute;f&eacute;r&eacute;e pour le
      sch&eacute;ma XML est bas&eacute;e sur la structure du code
      sous-jacent: Une *classe XML particuli&egrave;re est
      l'unit&eacute; de r&eacute;utilisation

      <p>Beaucoup de classes descendent de
      jmri.configurexml.XmAdapter: (<a href=
      "http://jmri.org/JavaDoc/doc/jmri/configurexml/XmlAdapter.html">voir
      Javadoc</a>)</p>

      <p>Par convention, fournir des &eacute;l&eacute;ments
      &lt;xsd:appinfo&gt;&lt;xsd:annotation&gt; contenant le nom de
      classe qui lit/&eacute;crit l'&eacute;l&eacute;ment:</p>
      <pre style="font-family: monospace;">
    &lt;xs:annotation&gt;
        &lt;xs:documentation&gt;
        beaucoup de docs lisibles sont ici
        &lt;/xs:documentation&gt;
        &lt;xs:appinfo&gt;
            &lt;jmri:usingclass configurexml="false"&gt;jmri.managers.DefaultSignalSystemManager&lt;/jmri:usingclass&gt;
        &lt;/xs:appinfo&gt;
    &lt;/xs:annotation&gt;
</pre>

      <h3>Le Mod&egrave;le de Store V&eacute;nitien</h3>Nous nous
      dirigeons vers la structuration de notre XML en utilisant le
      "Mod&egrave;le Store V&eacute;nitien". Dans ce style, les
      &eacute;l&eacute;ments de haut niveau qui sont &eacute;crits
      par les classes ont des types d&eacute;finis pour eux. Tous
      les &eacute;l&eacute;ments qui rel&egrave;vent de ceux-ci
      sont d&eacute;finis de fa&ccedil;on anonyme, au sein de ces
      &eacute;l&eacute;ments. Pour un exemple, voir le fichier
      <a href=
      "http://jmri.org/xml/schema/types/sensors.xsd">types/sensors.xsd</a>,
      qui d&eacute;finit un type pour les &eacute;l&eacute;ments
      "capteurs" &eacute;crit pour SensorManagers. Dans cela, il
      est inclu une d&eacute;finition d'un &eacute;l&eacute;ment
      "capteur", et un &eacute;l&eacute;ment "commentaire" au sein
      de celui-ci.

      <p>Cela limite le nombre de types, et conserve les fichiers
      sch&eacute;ma &agrave; peu pr&egrave;s align&eacute;s avec
      les classes qui font la lecture et l'&eacute;criture.</p>

      <p>Il y a quelques &eacute;l&eacute;ments
      (&eacute;l&eacute;ments et groupes d'attributs) qui
      s'&eacute;tendent sur plusieurs types. Ils sont
      d&eacute;finis dans le fichier <a href=
      "http://jmri.org/xml/schema/types/general.xsd">types/general.xsd</a>.</p>

      <p>Plus d'informations sur des mod&egrave;les de conception
      de sch&eacute;ma XML sont disponible &agrave; <a href=
      "http://www.ibm.com/developerworks/xml/library/ws-soa-xmlwsdl.html#N1012B">
      DeveloperWorks</a>. <a href=
      "http://developers.sun.com/jsenterprise/archive/nb_enterprise_pack/reference/techart/design_patterns.html">
      developers.sun</a>, et <a href=
      "http://www.javapassion.com/webservices/XMLSchemaDesignPatterns.pdf">
      javapassion</a>.</p>

      <h3>Types D&eacute;finis Disponibles</h3>

      <dl>
        <dt>systemNameType</dt>

        <dd>Noms Syst&egrave;me, pour finalement &ecirc;tre
        resserr&eacute; &agrave; un v&eacute;ritable test de
        validit&eacute;</dd>

        <dt>userNameType</dt>

        <dd>Noms utilisateurs, non compris le nom vide</dd>

        <dt>nullUserNameType</dt>

        <dd>Des noms d'utilisateurs, avec une valeur vide
        permise</dd>

        <dt>beanNameType</dt>

        <dd>Soit le nom utilisateur ou le nom syst&egrave;me</dd>

        <dt>turnoutStateType</dt>

        <dd>droit, d&eacute;vi&eacute;</dd>

        <dt>signalColorType</dt>

        <dd>rouge,jaune, etc</dd>

        <dt>yesNoType</dt>

        <dd>oui, non</dd>

        <dt>trueFalseType</dt>

        <dd>vrai,faux</dd>
      </dl>

      <h3>Versions des Sch&eacute;mas</h3>Les exigences pour les
      versions de XML Schema sont beaucoup plus simples que celles
      des DTDs, surtout parce les articles individuels ont une
      port&eacute;e beaucoup plus claire .

      <ul>
        <li>Vous <em>faites</em>une Version d'un sch&eacute;ma
        quand vous faites un changement dans le sch&eacute;ma tel
        que des fichiers pr&eacute;c&eacute;dents ne seront plus
        valides avec le sch&eacute;ma actuel.

          <p>Dans ce cas, juste faire vos changements de
          sch&eacute;ma dans le document courant de sch&eacute;ma,
          et les soumettre en retour &agrave; CVS.</p>
        </li>

        <li>Vous <em>ne faites pas</em> une nouvelle version du
        sch&eacute;ma, si vous ajoutez ou modifiez des choses
        telles que les fichiers existants continuent &agrave;
        &ecirc;tre valides.

          <p>Dans ce cas, les &eacute;tapes pour la nouvelle
          version du sch&eacute;ma sont:</p>

          <ol>
            <li>Copiez le fichier du sch&eacute;ma actuel pour un
            nouveau avec le num&eacute;ro de version
            <em>suivant</em>. Par exemple Copier
            types/turnouts-2-9-6.xsd dans types/turnouts-2-9-8.xsd.
            Faites vos changements et soumettez la nouvelle
            version.</li>

            <li>Si c'est un sous-fichier, tel que le
            types/turnouts-2-9-6.xsd, qui est inclut dans un
            sch&eacute;ma principal comme un layout-2-9-6.xsd, le
            fichier principal a aussi besoin d'&ecirc;tre
            copi&eacute;, en incluant les changements et soumit
            &agrave; CVS.</li>

            <li>Ensuite, modifiez le code Java qui &eacute;crit la
            r&eacute;f&eacute;rence de sch&eacute;ma pour le sommet
            de fichiers de sortie pour utiliser le nouveau nom de
            fichier. Par exemple, les fichiers r&eacute;seau
            (panneau) sont &eacute;crits par
            <code>src/JMRI/configurexml/ConfigXmlManager.java</code></li>

            <li><code>Si les feuilles de style XML (s) en XMLXSLT
            doivent &ecirc;tre modifi&eacute;es, les versions sont
            modifi&eacute;es d'une fa&ccedil;on similaire, y
            compris le changement de code o&ugrave; la
            r&eacute;f&eacute;rence de style est
            incluse.</code></li>
          </ol>
        </li>
      </ul><code>Dans tous les cas, il est important d'inclure
      suffisamment de fichiers de test pour que les tests unitaires
      trouvent tous les probl&egrave;mes avec le nouveau
      sch&eacute;ma et l'ancien. Voir la <a href="#test">Section
      test ci-dessous</a>.</code>

      <h2><code>V&eacute;rification des Sch&eacute;mas
      JMRI</code></h2><code>XML Schema est plus prolixe que les
      DTDs auquels nous sommes habitu&eacute;s. Avec cette
      complexit&eacute;, nous exprimons plus de puissance, mais
      dans le m&ecirc;me temps les moyens mettent plus de
      d&eacute;sordre.</code>

      <p><code>Il est important que les d&eacute;finitions du
      sch&eacute;ma JMRI soient s&eacute;mantiquement correctes. Il
      y a certains aspects subtils des sch&eacute;ma XML pour
      lesquels il nous faudra du temps pour nous familiariser avec,
      et si nous laissons trop de probl&egrave;mes s'accumuler dans
      l'intervalle, nous finirons par avoir beaucoup de retour de
      correction &agrave; faire. La ligne de l' <a href=
      "http://www.w3.org/2001/03/webdata/xsv">outil W3C de
      validation schema</a> est un tr&egrave;s bon outil pour
      v&eacute;rifier que les modifications du sch&eacute;ma JMRI
      sont encore techniquement correctes. Vous devriez
      v&eacute;rifier vos modifications avec lui avant de les
      soumettre &agrave; CVS. Malheureusement, il ne semble pas
      v&eacute;rifier la conformit&eacute; avec les
      &eacute;l&eacute;ments du sch&eacute;ma imbriqu&eacute;, par
      exemple de DocBook (voir ci-dessous) ou JMRIschema, mais
      c'est toujours un contr&ocirc;le tr&egrave;s
      utile.</code></p>

      <p><code>L'utilisation de l'outil JMRI "Valider le fichier
      XML" dans le menu "Debogage" valide un fichier. xml ("fichier
      d'exemple") qui utilise votre nouveau sch&eacute;ma ou
      sch&eacute;ma mis &agrave; jour est un frein
      important.</code></p>

      <p><code>Vous devez aussi ajouter <a href="JUnit.shtml">test
      JUnit</a> qui v&eacute;rifie le sch&eacute;ma et un
      sch&eacute;ma typique. La fa&ccedil;on la plus facile de le
      faire (voir par exemple
      test/jmri/configurexml/SchemaTest.java ) est d'h&eacute;riter
      de votre classe de test depuis
      jmri.configurexml.LoadFileTestBase, et puis appelez</code>
      validate(File f) dans un fichier test. Le fichier test XML
      peut &ecirc;tre mis avec le fichier de test Java dans
      l'arborescence de fichier "test/"</p>
      <pre style="font-family: monospace;">

    public void testValidateRoster() {
        validate(new java.io.File("java/test/jmri/configurexml/RosterSchemaTest.xml"));
    }
</pre>

      <p>Pour une v&eacute;rification rapide de fichiers,les
      utilisateurs de Linux et Mac OS X peuvent valider &agrave;
      partir de la ligne de commande avec par exemple</p>
      <pre style="font-family: monospace;">

 cd xml
 xmllint -schema schema/aspecttable.xsd -noout signals/sample-aspects.xml
</pre><code>xmllint</code> ne peut pas v&eacute;rifier les fichiers
de sch&eacute;ma eux-m&ecirc;mes, malheureusement, parce que leur
sch&eacute;ma n'est pas quelque chose qu'il peut g&eacute;rer

      <p>Votre docs sch&eacute;ma doit pointer sur notre feuille de
      style standard dans leur en-t&ecirc;te:</p>
      <pre style="font-family: monospace;">
&lt;?xml-stylesheet href="schema2xhtml.xsl" type="text/xsl"?&gt;
</pre>C'est un style assez basique, vraiment suffisant pour montrer
la structure de base. Pour un exemple de la sortie qu'il produit,
cliquez sur ce lien vers le fichier de sch&eacute;mas
      <a href="http://jmri.org/xml/schema/aspecttable.xsd">aspecttable.xsd</a>
      e. Si quelqu'un connait une meilleure feuille de style, nous
      pouvons certainement basculer vers elle.

      <h3><a id="test" name="test">Test JUnit</a></h3><a id="test"
      name="test">Nous testons les sch&eacute;ma XML et les
      fichiers de deux mani&egrave;res: Les faire valider
      correctement, et pouvoir correctement lire et
      r&eacute;&eacute;crire certains fichiers. Le deuxi&egrave;me
      test est plus compliqu&eacute;, bien s&ucirc;r, mais aussi
      plus pr&eacute;cieux.</a>

      <p>Pour tester la validation, d&eacute;poser un fichier XML
      dans le r&eacute;pertoire
      <code>test/jmri/configurexml/files</code> . Celui-ci va
      automatiquement &ecirc;tre test&eacute; pour s'assurer qu'il
      est valide. Si vous changez la version d'un sch&eacute;ma,
      vous devez ex&eacute;cuter quelques-uns de ces fichiers par
      le biais de PanelPro (par exemple, les lire et ensuite les
      r&eacute;&eacute;crire avec le nouveau format) et inclure de
      nouvelles copies pour tester le nouveau format.</p>

      <p>De petits fragments qui d&eacute;montrent les
      caract&eacute;ristiques sp&eacute;cifiques du sch&eacute;ma
      peuvent &ecirc;tre mis dans les r&eacute;pertoires (les
      dossiers du r&eacute;pertoire "&eacute;chec" sont attendus
      pour "&eacute;chouer" pour une raison sp&eacute;cifique
      document&eacute;e via les commentaires dans le fichier)
      <code>test/jmri/configurexml/pass</code>
      et<code>test/jmri/configurexml/fail</code>.</p>

      <p>Pour lire et &eacute;crire , voir l'exemple dans
      <code>test/jmri/configurexml/LoadFileTest.java</code></p>

      <h2>Normes Externes et Travaux Futurs&gt;</h2>La <a href=
      "http://www.oasis-open.org/">collaboration OASIS</a>
      d&eacute;finit un certain nombre de sch&eacute;mas et
      d'&eacute;l&eacute;ments de sch&eacute;ma qui sont devenus
      des standards bien connus. Si possible, nous devrions
      utiliser ces <a href=
      "http://www.oasis-open.org/specs/index.php">&eacute;l&eacute;ments
      standards</a> pour am&eacute;liorer
      l'interop&eacute;rabilit&eacute;. Les premiers
      int&eacute;r&ecirc;t sont:

      <ul>
        <li>
          <a href="http://docbook.org/">DockBook</a>qui
          d&eacute;finit les &eacute;l&eacute;ments de plusieurs
          concepts que nous utilisons:

          <ul>
            <li>auteur
            (http://www.docbook.org/tdg/en/html/author.html)</li>

            <li>adresse
            (http://www.docbook.org/tdg/en/html/address.html)</li>

            <li>historique des r&eacute;visions
            (http://www.docbook.org/tdg/en/html/revhistory.html)</li>
          </ul>Voir

          <ul>
            <li><a href=
            "http://www.docbook.org/specs/docbook-5.0-spec-cs-01.html">
            http://www.docbook.org/specs/docbook-5.0-spec-cs-01.html</a></li>

            <li><a href=
            "http://www.docbook.org/xml/5.0/xsd/">http://www.docbook.org/xml/5.0/xsd/</a></li>

            <li><a href=
            "http://www.docbook.org/xml/5.0/xsd/docbook.xsd">http://www.docbook.org/xml/5.0/xsd/docbook.xsd</a></li>
          </ul>

          <p>Nous avons nos propres sous-ensemble DocBook que nous
          utilisons, parce que le sch&eacute;ma DocBook complet 5.0
          prend un temps tr&egrave;s long &agrave; analyser, et
          n'est pas totalement compatible avec les versions
          d'autres logiciels que nous utilisons. Nous utilisons
          l'espace de noms 5.0 DocBook normal, donc on peut
          facilement convertir plus tard, &agrave; un sch&eacute;ma
          plus complet de mani&egrave;re transparente. Notre petit
          sch&eacute;ma est situ&eacute; &agrave;: <a href=
          "http://jmri.org/xml/schema/docbook/docbook.xsd">http://jmri.org/xml/schema/docbook/docbook.xsd</a>
          (notre emplacement du sch&eacute;ma habituel). Il est
          <em>seulement</em> r&eacute;f&eacute;renc&eacute;
          &agrave; partir de fichiers de sch&eacute;ma JMRI, non
          par des exemples de fichiers, de sorte que nous pouvons
          le transformer plus tard, avec les travaux finis.</p>
        </li>

        <li><a href=
        "http://www.oasis-open.org/committees/ubl/faq.php">UBL</a>,
        bien destin&eacute;s aux op&eacute;rations d'entreprises ,
        d&eacute;finit les &eacute;l&eacute;ments pour
        repr&eacute;senter des parties (entreprises, personnes),
        p&eacute;riph&eacute;riques, les num&eacute;ros de
        mod&egrave;le, etc.</li>

        <li><a href=
        "http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office">
        OpenDocument</a> (OODF) d&eacute;finit un ensemble
        d'&eacute;l&eacute;ments et de structures pour calculs dans
        le cadre de son module de tableur. (Mais ils fournissent
        Relax-NG sch&eacute;ma, pas W3C XML Schema, donc cela
        n'aide pas tellement)</li>
      </ul>Apprendre &agrave; les utiliser n&eacute;cessitera
      quelques travaux, comme nous ne pouvons pas supposer que les
      ordinateurs utilisant JMRI aient acc&egrave;s &agrave;
      Internet, on ne peut donc pas simplement faire
      r&eacute;f&eacute;rence au sch&eacute;ma entier comme des
      entit&eacute;s isol&eacute;es.

      <h2>Copyright, Auteur et Information des Versions</h2>Pour
      diverses raisons, nous devons passer au format DocBook pour
      les informations de copyright, l'auteur et des versions dans
      notre XML (fichiers exemple).

      <p>Exemple XML:</p>
      <pre style="font-family: monospace;">
  &lt;db:copyright&gt;
        &lt;db:year&gt;2009&lt;/db:year&gt;
        &lt;db:year&gt;2010&lt;/db:year&gt;&lt;
        db:holder&gt;JMRI&lt;/db:holder&gt;&lt;/db:copyright&gt;

  &lt;db:authorgroup&gt;
    &lt;db:author&gt;
        &lt;db:personname&gt;&lt;db:firstname&gt;Sample&lt;/db:firstname&gt;&lt;db:surname&gt;Name&lt;/db:surname&gt;&lt;/db:personname&gt;
        &lt;db:email&gt;name@com.domain&lt;/db:email&gt;
    &lt;/db:author&gt;    
  &lt;/db:authorgroup&gt;

  &lt;db:revhistory&gt;
    &lt;db:revision&gt;
        &lt;db:revnumber&gt;1&lt;/db:revnumber&gt;
        &lt;db:date&gt;2009-12-28&lt;/db:date&gt;
        &lt;db:authorinitials&gt;initials&lt;/db:authorinitials&gt;
    &lt;/db:revision&gt;    
  &lt;/db:revhistory&gt;
</pre>

      <p>Exemple de description de sch&eacute;ma: (Mais voir le
      vrai, qui est fourni dans le sch&eacute;ma/docbookok)</p>
      <pre style="font-family: monospace;">
    &lt;xs:element ref="docbook:copyright" minOccurs="1" maxOccurs="1" &gt;
      &lt;xs:annotation&gt;&lt;xs:documentation&gt;
      DocBook element(s) providing copyright information in standard form.
      Must be present.
      &lt;/xs:documentation&gt;&lt;/xs:annotation&gt;
    &lt;/xs:element&gt;

    &lt;xs:element ref="docbook:authorgroup" minOccurs="1" maxOccurs="unbounded" &gt;
      &lt;xs:annotation&gt;&lt;xs:documentation&gt;
      DocBook element(s) describing the authors in standard form
      &lt;/xs:documentation&gt;&lt;/xs:annotation&gt;
    &lt;/xs:element&gt;

    &lt;xs:element ref="docbook:revhistory" minOccurs="1" maxOccurs="unbounded" &gt;
      &lt;xs:annotation&gt;&lt;xs:documentation&gt;
      DocBook element(s) describing the revision history in standard form
      &lt;/xs:documentation&gt;&lt;/xs:annotation&gt;
    &lt;/xs:element&gt;
</pre><!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
