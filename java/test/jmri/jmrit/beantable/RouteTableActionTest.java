package jmri.jmrit.beantable;

import jmri.Route;
import jmri.util.JUnitUtil;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

/**
 * Tests for the jmri.jmrit.beantable.RouteTableAction class
 *
 * @author	Bob Jacobsen Copyright 2004, 2007
 */
public class RouteTableActionTest extends AbstractTableActionBase {

    @Test
    public void testCreate() {
        Assert.assertNotNull(a);
    }

    @Override
    public String getTableFrameName() {
        return Bundle.getMessage("TitleRouteTable");
    }

    @Test
    public void testConstants() {
        // check constraints required by implementation,
        // because we assume that the codes are the same as the index
        // in a JComboBox
        Assert.assertEquals("Route.ONACTIVE", 0, Route.ONACTIVE);
        Assert.assertEquals("Route.ONINACTIVE", 1, Route.ONINACTIVE);
        Assert.assertEquals("Route.VETOACTIVE", 2, Route.VETOACTIVE);
        Assert.assertEquals("Route.VETOINACTIVE", 3, Route.VETOINACTIVE);
    }

    @Override
    @Test
    public void testGetClassDescription() {
        Assert.assertEquals("Route Table Action class description", "Route Table", a.getClassDescription());
    }

    /**
     * Check the return value of includeAddButton. The table generated by this
     * action includes an Add Button.
     */
    @Override
    @Test
    public void testIncludeAddButton() {
        Assert.assertTrue("Default include add button", a.includeAddButton());
    }

    // The minimal setup for log4J
    @Before
    public void setUp() {
        JUnitUtil.setUp();
        jmri.util.JUnitUtil.initDefaultUserMessagePreferences();
        a = new RouteTableAction();
    }

    @After
    public void tearDown() {
        JUnitUtil.tearDown();
    }
}
