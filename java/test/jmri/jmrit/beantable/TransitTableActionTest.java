package jmri.jmrit.beantable;

import jmri.Block;
import jmri.BlockManager;
import jmri.InstanceManager;
import jmri.Section;
import jmri.SectionManager;
import jmri.util.JUnitUtil;
import jmri.util.junit.annotations.ToDo;
import org.junit.*;

/**
 *
 * @author Paul Bender Copyright (C) 2017	
 */
public class TransitTableActionTest extends AbstractTableActionBase {

    @Test
    public void testCTor() {
        Assert.assertNotNull("exists",a);
    }

    @Override
    public String getTableFrameName(){
       return Bundle.getMessage("TitleTransitTable");
    }

    @Override
    @Test
    public void testGetClassDescription(){
         Assert.assertEquals("Transit Table Action class description","Transit Table",a.getClassDescription());
    }

    /**
     * Check the return value of includeAddButton.  The table generated by 
     * this action includes an Add Button.
     */
    @Override
    @Test
    public void testIncludeAddButton(){
         Assert.assertTrue("Default include add button",a.includeAddButton());
    }

    @Override
    public String getAddFrameName(){
        return Bundle.getMessage("TitleAddTransit");
    }

    @Test
    @Override
    @Ignore("Transit create frame does not have a hardware address")
    @ToDo("Re-write parent class test to use the right name")
    public void testAddThroughDialog() {
    }

    // The minimal setup for log4J
    @Override
    @Before
    public void setUp() {
        JUnitUtil.setUp();
        JUnitUtil.resetProfileManager();
        helpTarget = "package.jmri.jmrit.beantable.TransitTable"; 
        InstanceManager.setDefault(jmri.BlockManager.class,new jmri.BlockManager());
        JUnitUtil.initSectionManager();
        a = new TransitTableAction();
        Block b1 = InstanceManager.getDefault(BlockManager.class).provideBlock("IB12");
        Section  s = InstanceManager.getDefault(SectionManager.class).createNewSection("TS1");
        s.addBlock(b1);
        jmri.util.JUnitAppender.assertWarnMessage("Block IB12 does not have a user name,may not work correctly in Section IY:AUTO:0001");
    }

    @Override
    @After
    public void tearDown() {
        JUnitUtil.tearDown();
    }

    // private final static Logger log = LoggerFactory.getLogger(TransitTableActionTest.class);

}
