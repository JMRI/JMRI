package jmri.web.servlet.help;

import java.io.*;

import jmri.util.FileUtil;
import jmri.util.JUnitUtil;

import org.jdom2.Attribute;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.junit.Assert;
import org.junit.jupiter.api.*;

/**
 * Builds the help index page for the JMRI help pages that's accessed as files
 * by the user's web browser.
 * 
 * @author Daniel Bergqvist  Copyright (C) 2021
 */
public class BuildHelpIndexTest {

    private class XmlFile extends jmri.jmrit.XmlFile {
    }
    
    private void parseElement(Element e, PrintWriter printWriter, String pad) {
        System.out.format("%sTag: %s%n", pad, e.getName());
        boolean hasChildren = !e.getChildren().isEmpty();
        if ("indexitem".equals(e.getName())) {
            if (hasChildren) printWriter.println("<ul>");
            String value = e.getAttributeValue("target");
            String url = (value != null) ? "../"+value.replace('.', '/')+".shtml" : "";
//            String href = (value != null) ? " href=\""+url+"\"" : "";
            String onClick = (value != null) ? " onclick=\"openLink('"+url+"')\"" : "";
//            String href = (value != null) ? " href=\"../"+value.replace('.', '/')+".shtml" : "";
            printWriter.println("<li><a"+onClick+">"+e.getAttributeValue("text")+"</a></li>");
//            printWriter.println("<li><a"+onClick+href+">"+e.getAttributeValue("text")+"</a></li>");
//            for (Attribute attr : e.getAttributes()) {
//                printWriter.println("<li><a href=\""+attr.getValue().replace('.', '/')+"\">"+attr.getName()+"</a></li>");
//            }
        }
        for (Attribute attr : e.getAttributes()) {
            System.out.format("%sAttr: %s, %s%n", pad+"    ", attr.getName(), attr.getValue());
        }
//        if ("indexitem".equals(e.getName())) {
//            for (Attribute attr : e.getAttributes()) {
//                printWriter.println("<a href=\""+attr.getValue().replace('.', '/')+"\">"+attr.getName()+"</a>");
//            }
//        }
        for (Element child : e.getChildren()) {
            parseElement(child, printWriter, pad+"    ");
        }
        if ("indexitem".equals(e.getName()) && hasChildren) {
            printWriter.println("</ul>");
        }
    }
    
    @Test
    public void testBuildIndex() throws JDOMException, IOException {
        String newLine = System.getProperty("line.separator");
        FileWriter fileWriter = new FileWriter(FileUtil.getProgramPath() + "help/en/local/index.html");
        PrintWriter printWriter = new PrintWriter(fileWriter);
//        printWriter.println("<!DOCTYPE html>");
//        printWriter.println("<html lang=\"en\">");
        printWriter.print(
"<!DOCTYPE html>" + newLine +
"<html lang=\"en\">" + newLine +
"<!-- This file is generated by jmri.web.servlet.help.BuildHelpIndexTest using help/en/JmriHelp_enIndex.xml -->" + newLine +
"<head>" + newLine +
"  <meta charset=\"utf-8\" />" + newLine +
"  <script>" + newLine +
"    function openLink(link) {" + newLine +
"      document.getElementById(\"page\").src = link;" + newLine +
"    }" + newLine +
"    function onLoad() {" + newLine +
"      var url = window.location.href;" + newLine +
"      var i = url.indexOf('?');" + newLine +
"      var urlParts = [url.slice(0,i), url.slice(i+1)];" + newLine +
"      if (urlParts[1] != \"\")" + newLine +
"      {" + newLine +
"        var subUrlParts = urlParts[1].split(\"=\");" + newLine +
"        openLink(subUrlParts[1]);" + newLine +
"      }" + newLine +
"    }" + newLine +
"  </script>" + newLine +
"  <style>" + newLine +
".float-container {" + newLine +
"    border: 3px solid #fff;" + newLine +
"    padding: 20px;" + newLine +
"}" + newLine +
"" + newLine +
".float-child-index {" + newLine +
"    width: 30%;" + newLine +
"    float: left;" + newLine +
"    padding: 20px;" + newLine +
"    border: 2px solid black;" + newLine +
"}" + newLine +
".float-child-page {" + newLine +
"    width: 60%;" + newLine +
"    float: left;" + newLine +
"    padding: 20px;" + newLine +
"    border: 2px solid black;" + newLine +
"}" + newLine +
"  </style>" + newLine +
"</head>" + newLine +
"<body onload=\"onLoad()\">" + newLine +
"<div class=\"float-container\">" + newLine +
"<div class=\"float-child-index\">" + newLine
        );
        
        XmlFile xmlFile = new XmlFile();
        Assert.assertNotNull(xmlFile);
        Element e = xmlFile.rootFromName(FileUtil.getProgramPath() + "help/en/JmriHelp_enIndex.xml");
        Assert.assertNotNull(e);
        parseElement(e, printWriter, "");
        
        printWriter.println(
"</div>" + newLine +
"<iframe class=\"float-child-page\" id=\"page\" height=\"800px\" src=\"file:///F:/Projekt/Java/GitHub/JMRI/help/en/index.shtml\" title=\"JMRI Help\"></iframe>" + newLine +
// "<iframe class=\"float-child-page\" id=\"page\" height=\"800px\" src=\"file:///F:/Projekt/Java/GitHub/JMRI/help/en/html/tools/logixng/LogixNG.shtml\" title=\"LogixNG\"></iframe>" + newLine +
"</body>" + newLine +
"</html>" + newLine
);
        printWriter.println("</html>");
        printWriter.close();
    }

    @BeforeEach
    public void setUp() {
        JUnitUtil.setUp();

    }

    @AfterEach
    public void tearDown() {
        JUnitUtil.tearDown();
    }
}
