# XNetMessageFormatterBundle.properties
#
# Message translation strings for the XpressNet Monitor from XNetMessages and XNetReplies
XNetMessageRequestCSVersion                 = REQUEST: Command Station Version
XNetMessageRequestCSStatus                  = REQUEST: Command Station Status
XNetMessageRequestCSPowerModeAuto           = REQUEST: Set Power-up Mode to Automatic
XNetMessageRequestCSPowerModeManual         = REQUEST: Set Power-up Mode to Manual
XNetMessageRequestEmergencyOff              = REQUEST: Emergency Off
XNetMessageRequestEmergencyStop             = REQUEST: Emergency Stop
XNetMessageRequestNormalOps                 = REQUEST: Normal Operations Resumed
XNetMessageRequestServiceModeResult         = REQUEST: Service Mode Result
XNetMessageRequestOpsModeResult             = REQUEST: Ops Mode Result
XNetMessageRequestServiceModeReadPaged      = Service Mode Request: Read CV {0} in Paged Mode
XNetMessageRequestServiceModeReadDirect     = Service Mode Request: Read CV {0} in Direct Mode
# Note: some values contain formatting between pairs of {}'s so do NOT translate the word "number"
XNetMessageRequestServiceModeReadDirectV36  = Service Mode Request (V3.6): Read CV {0,number,####} in Direct Mode
XNetMessageRequestServiceModeReadRegister   = Service Mode Request: Read Register {0}
XNetMessageRequestServiceModeWritePaged     = Service Mode Request: Write {1} to CV {0} in Paged Mode
XNetMessageRequestServiceModeWriteDirect    = Service Mode Request: Write {1} to CV {0} in Direct Mode
XNetMessageRequestServiceModeWriteDirectV36 = Service Mode Request (V3.6): Write {1} to CV {0,number,####} in Direct Mode
XNetMessageRequestServiceModeWriteRegister  = Service Mode Request: Write {1} to Register {0}

XNetMessageOpsModeBitWrite                  = Operations Mode Programming Request: Bit Mode Write: {0} to CV {1,number,####} bit {2} for Decoder Address {3,number,####}
XNetMessageOpsModeBitVerify                 = Operations Mode Programming Request: Bit Mode Verify: {0} to CV {1,number,####} bit {2} for Decoder Address {3,number,####}
XNetMessageOpsModeByteWrite                 = Operations Mode Programming Request: Byte Mode Write: {0} to CV {1,number,####} for Decoder Address {2,number,####}
XNetMessageOpsModeByteVerify                = Operations Mode Programming Request: Byte Mode Verify: {0} to CV {1,number,####} for Decoder Address {2,number,####}

XNetMessageRequestLIVersion                 = REQUEST LI10x hardware/software version
XNetMessageRequestLIAddress                 = REQUEST LI101 Address {0}
XNetMessageRequestLIBaud                    = REQUEST LI101 Baud Rate {0}
# Note: the next 2 keys contain formatting between 1st pair of {}'s so do not translate the word "number"
XNetMessageBuildDoubleHeaderRequest         = Double Header Request: Establish Double Header with {0,number,####} and {1,number,####}
XNetMessageDisolveDoubleHeaderRequest       = Double Header Request: Dissolve Double Header that includes mobile decoder {0,number,####}
XNetMessageAddToConsistDirNormalRequest     = Mobile Decoder Operations Request: Add Locomotive: {0,number,####} to Multi Unit Consist: {1} with Loco Direction Normal
XNetMessageAddToConsistDirReverseRequest    = Mobile Decoder Operations Request: Add Locomotive: {0,number,####} to Multi Unit Consist: {1} with Loco Direction Reversed
XNetMessageRemoveFromConsistRequest         = Mobile Decoder Operations Request: Remove Locomotive: {0,number,####} from Multi Unit Consist: {1}

XNetMessageAddressedEmergencyStopRequest    = Emergency Stop {0,number,####}
XNetMessageSearchCSStackForward             = Search Command Station Stack Forward - Start Address: {0,number,####}
XNetMessageSearchCSStackBackward            = Search Command Station Stack Backward - Start Address: {0,number,####}
XNetMessageSearchCSStackForwardConsistAddress = Search Command Station Stack Forward from Consist Address: {0}
XNetMessageSearchCSStackBackwardConsistAddress = Search Command Station Stack Backward from Consist Address: {0}
XNetMessageSearchCSStackForwardNextMULoco   = Search Command Station Stack Forward for next address in Consist {0} Starting at {1,number,####}
XNetMessageSearchCSStackBackwardNextMULoco  = Search Command Station Stack Backward for next address in Consist {0} Starting at {1,number,####}

XNetMessageDeleteAddressOnStack             = Delete Address {0,number,####} from Command Station Stack.
XNetMessageRequestLocoInfo                  = Request for Address {0,number,####} speed/direction/function on/off status.
XNetMessageRequestLocoFunctionMomStatus     = Request for Address {0,number,####} function momentary/continuous status.
XNetMessageRequestLocoFunctionHighStatus    = Request for Address {0,number,####} F13-F28 on/off status.
XNetMessageRequestLocoFunctionHighMomStatus = Request for Address {0,number,####} F13-F28 momentary/continuous status.
XNetMessageFeedbackRequest                  = Accessory Decoder/Feedback Encoder Status Request: Base Address {0},{1}.
XNetMessageAccessoryDecoderOnRequest        = Accessory Decoder Operations Request: Turnout Address {0}(Base Address {1},Sub Address {2}) Turn Output {3} On.
XNetMessageAccessoryDecoderOffRequest       = Accessory Decoder Operations Request: Turnout Address {0}(Base Address {1},Sub Address {2}) Turn Output {3} Off.

XNetMessageSetSpeed                         = Set Address {0,number,####} to Speed Step
XNetMessageSetDirection                     = and direction {0}
XNetMessageSetFunctionGroupX                = Set Function Group {0} for Address:
XNetMessageSetFunctionGroupXMomentary       = Set Function Group {0} Momentary Status for Address:

# XNetReply items
XNetReplyOkMessage                          = Command Successfully Sent/Normal Operations Resumed after timeout
XNetReplyTimeSlotRestored                   = Timeslot Restored
XNetReplyRequestSentWhileNoTimeslot         = Request Sent while the CS is not providing a Timeslot
XNetReplyBadDataInRequest                   = Bad Data in Request sent to CS
XNetReplyRetransmitRequest                  = Retransmission Requested

XNetReplyErrorPCtoLI                        = Error occurred between the interface and the PC
XNetReplyErrorLItoCS                        = Error occurred between the interface and the command station.
XNetReplyErrorUnknown                       = Unknown Communication Error
XNetReplyErrorNoTimeSlot                    = The Command Station is no longer providing the LI a timeslot for communication
XNetReplyErrorBufferOverflow                = Buffer overflow in the LI

XNetReplyCSTransferError                    = Command Station Reported Transfer Error
XNetReplyCSBusy                             = Command Station Busy
XNetReplyCSNotSupported                     = XpressNet Instruction not supported by Command Station
XNetReplyCSVersionV1                        = Command Station Software Version: {0,number,#.#} Type: Unknown (X-Bus V1 or V2)
XNetReplyCSVersion                          = Command Station Software Version: {0,number,#.#} Type: {1}
XNetReplyBCNormalOpsResumed                 = Broadcast: Normal Operations Resumed
XNetReplyBCEverythingOff                    = Broadcast: Emergency Off (short circuit)
XNetReplyBCEverythingStop                   = Broadcast: Emergency Stop (track power on)
XNetReplyBCServiceEntry                     = Broadcast: Service Mode Entry

XNetReplyServiceModeShort                   = Service Mode: Short Circuit
XNetReplyServiceModeDataByteNotFound        = Service Mode: Data Byte Not Found
XNetReplyServiceModeCSBusy                  = Service Mode: Command Station Busy
XNetReplyServiceModeCSReady                 = Service Mode: Command Station Ready
XNetReplyServiceModeDirectResponse          = Service Mode: Direct Programming Mode Response: CV:{0,number,####} Value:{1}
XNetReplyServiceModePagedResponse           = Service Mode: Register or Paged Mode Response: CV:{0,number,####} Value:{1}
XNetReplyOpsModeResultResponse              = Ops Mode: Programming Response: Address: {0} Value:{1}

XNetReplyV1DHErrorNotOperated               = XBus V1 and V2 MU+DH error: Selected Locomotive has not been operated by this XpressNet device or address 0 selected
XNetReplyV1DHErrorInUse                     = XBus V1 and V2 MU+DH error: Selected Locomotive is being operated by another XpressNet device
XNetReplyV1DHErrorAlreadyDH                 = XBus V1 and V2 MU+DH error: Selected Locomotive already in MU or DH
XNetReplyV1DHErrorNonZeroSpeed              = XBus V1 and V2 MU+DH error: Unit selected for MU or DH has speed setting other than 0
XNetReplyDHErrorNotOperated                 = XpressNet MU+DH error: Selected Locomotive has not been operated by this XpressNet device or address 0 selected
XNetReplyDHErrorInUse                       = XpressNet MU+DH error: Selected Locomotive is being operated by another XpressNet device
XNetReplyDHErrorAlreadyDH                   = XpressNet MU+DH error: Selected Locomotive already in MU or DH
XNetReplyDHErrorNonZeroSpeed                = XpressNet MU+DH error: Unit selected for MU or DH has speed setting other than 0
XNetReplyDHErrorLocoNotMU                   = XpressNet MU+DH error: Locomotive not in a MU
XNetReplyDHErrorLocoNotMUBase               = XpressNet MU+DH error: Locomotive address not a multi-unit base address
XNetReplyDHErrorCanNotDelete                = XpressNet MU+DH error: It is not possible to delete the locomotive
XNetReplyDHErrorStackFull                   = XpressNet MU+DH error: The Command Station Stack is Full
XNetReplyDHErrorOther                       = XpressNet MU+DH error: {0}

XNetReplyLIVersion                          = LI10x Hardware Version: {0} Software Version: {1}
XNetReplyLIBaud                             = RESPONSE LI101 Baud Rate: {0}
XNetReplyLIAddress                          = RESPONSE LI101 Address {0}
XNetReplyCSStatus                           = Command Station Status:



# XNetReply Loco information
XNetReplyLocoStatus13Label                  = Locomotive F13-F28 Momentary Status:
XNetReplyLocoNormalLabel                    = Locomotive Information Response: Normal Unit
XNetReplyLocoMULabel                        = Locomotive Information Response: Locomotive in Multiple Unit
XNetReplyLocoMUBaseLabel                    = Locomotive Information Response: Multi Unit Base Address
XNetReplyLocoDHLabel                        = Locomotive Information Response: Locomotive in Double Header
XNetReplyLoco2DHLabel                       = Second Locomotive in Double Header is:
XNetReplyLocoLabel                          = Locomotive Information Response:
XNetReplySearchNormalLabel                  = Search Response: Normal Locomotive:
XNetReplySearchDHLabel                      = Search Response: Loco in Double Header:
XNetReplySearchMUBaseLabel                  = Search Response: MU Base Address:
XNetReplySearchMULabel                      = Search Response: Loco in MU:
XNetReplySearchFailedLabel                  = Search Response: Search failed for:
XNetReplyLocoOperated                       = is being operated by another device.
XNetReplyFStatusLabel                       = Function Status:
XNetReplyF13StatusLabel                     = F13-F28 Status:
XNetReplyFeedbackLabel                      = Feedback Response:
TurnoutWFeedback                            = Turnout with Feedback
TurnoutWoFeedback                           = Turnout without Feedback
XNetReplyNotOperated                        = Not Operated
XNetReplyThrownLeft                         = Thrown Left
XNetReplyThrownRight                        = Thrown Right
XNetReplyInvalid                            = <invalid>
XNetReplyMotionComplete                     = Motion Complete
XNetReplyMotionIncomplete                   = Motion Incomplete
XNetReplyFeedbackEncoder                    = Feedback Encoder Base Address:
XNetReplyContactLabel                       = Contact:
XNetReplyAddressInUse                       = Address in use by another device.
XNetReplyAddressFree                        = Address is Free for Operation.

# XPressNet Fast Clock Message Strings
XNetBCTimeFormat                            = Fast Clock Broadcast: Day {0} time {1}:{2} {3}
XNetTimeFormat                              = Fast Clock: Day {0} time {1}:{2} Rate: {3}
ClockStopped                                = clock is stopped
ClockRunning                                = clock is running
