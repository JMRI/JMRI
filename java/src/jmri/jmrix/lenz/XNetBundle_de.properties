# XNetBundle_de.properties
#
# German properties for the jmri.jmrix.xpressnet menu
# by Simon Ginsburg und Egbert Broerse

MenuXpressNet                       = XpressNet

# Turnout Text (compare with key TurnoutStateClosed in jmri.NamedBeanBundle.properties)
TurnoutStateClosed                  = Geradeaus (-)
TurnoutStateThrown                  = Abzweigung (+)

# Command Station Version String {0} - hardware type, {1} - software version
CSVersionString                     = Hardware-Type: {0} Software-Version: {1}

# Strings for command station types
CommandStationLabel                 = Zentraleinheit:
CommandConfigTitle                  = Zentraleinheitskonfigurator
CSTypeCompact                       = Kompakt/Sonstig
# the other types use default (English) value
# Strings for hardware interface types

# Strings for Nibbles in feedback messages
FeedbackEncoderUpperNibble          = Obere Nibble
FeedbackEncoderLowerNibble          = Untere Nibble

# Message translation strings for the XpressNet Monitor and XNetMessage package
XNetMessageRequestCSVersion         = VERSUCH: Version der Zentraleinheit
XNetMessageRequestCSStatus          = VERSUCH: Zustand der Zentraleinheit
XNetMessageRequestCSPowerModeAuto   = VERSUCH: Power-up Modus auf Automatisch einstellen
XNetMessageRequestCSPowerModeManual = VERSUCH: Power-up Modus auf Handm\u00e4\u00dfig einstellen
XNetMessageRequestEmergencyOff      = VERSUCH: Not Aus
XNetMessageRequestNormalOps         = VERSUCH: Normale Bedienung fortgesetzt
XNetMessageRequestServiceModeResult = VERSUCH: Dienst-Modus Folge
XNetMessageRequestServiceModeReadPaged = Dienst-Modus Versuch: Lese CV {0} unter Paged Modus
XNetMessageRequestServiceModeReadDirect = Dienst-Modus Versuch: Lese CV {0} unter Direktem Modus
XNetMessageRequestServiceModeReadDirectV36 = Dienst-Modus Versuch (V3.6): Lese CV {0,number,####} unter Direktem Modus
XNetMessageRequestServiceModeReadRegister = Dienst-Modus Versuch: Lese Register {0}
XNetMessageRequestServiceModeWritePaged = Dienst-Modus Versuch: Schreibe {1} nach CV {0} unter Paged Modus
XNetMessageRequestServiceModeWriteDirect = Dienst-Modus Versuch: Schreibe {1} nach CV {0} unter Direktem Modus
XNetMessageRequestServiceModeWriteDirectV36 = Dienst-Modus Versuch (V3.6): Schreibe CV {0,number,####} unter Direktem Modus
XNetMessageRequestServiceModeWriteRegister = Dienst-Modus Versuch: Schreibe {1} nach Register {0}
XNetMessageOpsModeBitWrite          = Operations Mode Programmierversuch: Bit Mode Schreibe: {0} nach CV {1,number,####} bit {2} f\u00fcr Decoder-Adresse {3,number,####}
XNetMessageOpsModeBitVerify         = Programmierveruch: Bit Mode \u00fcberpr\u00fcfe: {0} nach CV {1,number,####} bit {2} f\u00fcr Decoder-Adresse {3,number,####}
XNetMessageOpsModeByteWrite         = Betriebsmodus Programmierversuch: Byte Modus schreibe: {0} nach CV {1,number,####} f\u00fcr Decoder-Adresse {2,number,####}
XNetMessageOpsModeByteVerify        = Betriebsmodus Programmierversuch: Byte Mode \u00fcberpr\u00fcfe: {0} nach CV {1,number,####} f\u00fcr Decoder-Adresse {2,number,####}
XNetMessageRequestLIVersion         = VERSUCH LI10x Hardware-/Software-Version
XNetMessageRequestLIAddress         = VERSUCH LI101 Adresse {0}
XNetMessageRequestLIBaud            = VERSUCH LI101 Baud-Geschwindigkeit {0}
XNetMessageBuildDoubleHeaderRequest = Doppeltraktion-Versuch: Erstelle Doppeltraktion aus {0,number,####} und {1,number,####}
XNetMessageDisolveDoubleHeaderRequest = Doppeltraktion-Versuch: Hebe Doppeltraktion auf mit mobile Decoder {0,number,####}
XNetMessageAddToConsistDirNormalRequest = Mobile Decoder Handlungsversuch: F\u00fcge Lok: {0,number,####} an Mehrfachtraktion Consist: {1} hinzu mit Fahrrichtung Normal
XNetMessageAddToConsistDirReverseRequest = Mobile Decoder Handlungsversuch: F\u00fcge Lok: {0,number,####} an Mehrfachtraktions-Consist: {1} hinzu mit Fahrrichtung R\u00fcckw\u00e4rts
XNetMessageRemoveFromConsistRequest = Mobile Decoder Handlungsversuch: Nehme Lok: {0,number,####} weg aus Mehrfachtraktions-Consist: {1}
XNetMessageAddressedEmergencyStopRequest = Nothalt {0,number,####}
XNetMessageSearchCSStackForward     = Durchsuche Zentraleinheits-Stack vorw\u00e4rts - ab Adresse: {0,number,####}
XNetMessageSearchCSStackBackward    = Durchsuche Zentraleinheits-Stack r\u00fcckw\u00e4rts - ab Adresse: {0,number,####}
XNetMessageSearchCSStackForwardConsistAddress = Durchsuche Zentraleinheits-Stack vorw\u00e4rts ab Mehrfachtraktionsadresse: {0,number,####}
XNetMessageSearchCSStackBackwardConsistAddress = Durchsuche Zentraleinheits-Stack r\u00fcckw\u00e4rts ab Mehrfachtraktionsadresse: {0,number,####}

# XNetReply items
XNetReplyFStatusLabel               = Funktions-Status:
XNetReplyF13StatusLabel             = F13-F28 Zustand:
XNetReplyInvalid                    = <ung\u00fcltig>

# XnetTurnout/Sensor/Light (Add to table pane) items
AddOutputEntryToolTip = 3 (Ausgang/Weiche 3)<br>\
Eingeben als Ganzzahl von 1 bis 1024 (inklusive).
AddInputEntryToolTip = 3 (Melder-Module 1, Eingang 3)<br>\
99:3 (Melder-Module 99, Eingang 3)<br>\
Eingeben als Ganzzahl von 1 bis 1024 (inklusive).
