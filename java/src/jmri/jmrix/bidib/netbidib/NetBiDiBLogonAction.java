package jmri.jmrix.bidib.netbidib;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;

import jmri.jmrix.bidib.BiDiBSystemConnectionMemo;
import jmri.jmrix.bidib.BiDiBTrafficController;

/**
 * This class is generated by the BiDiB Menu and used for actions from the menu.
 * The real work is delegated to the traffic controller.
 *
 * @author Eckart Meyer Copyright (C) 2024
 */
public class NetBiDiBLogonAction extends AbstractAction {
    
    //final java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle("jmri.jmrix.bidib.swing.BiDiBSwingBundle"); // NOI18N

    private String logon;
    private String logoff;
    private BiDiBTrafficController tc;

    public NetBiDiBLogonAction() {
        log.warn("no connection");
    }


    @SuppressWarnings("LeakingThisInConstructor")
    public NetBiDiBLogonAction(BiDiBSystemConnectionMemo memo, String logon, String logoff) {
        super(logoff);
        this.logon = logon;
        this.logoff = logoff;
        this.tc = memo.getBiDiBTrafficController();
        log.debug("create NetBiDiBLogonAction for {} - \"{}\" \"{}\"", memo.getUserName(), logon, logoff);
        if (tc != null) {
            tc.addConnectionChangedListener(this); //also listens on connecttion change events
            setEnabled(tc.getBidib().isOpened());
            putValue(javax.swing.Action.NAME, tc.isDetached() ? logon : logoff);
        }
    }

    /**
     * Implementing ActionListener
     * 
     * Called when:
     * - the menu entry was activated
     * - the traffic controller signals a change of the connection
     * 
     * @param e - Action event
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        log.debug("NetBiDiBLogonAction actionPerformed {}", e.paramString());
        if (tc != null  &&  tc.isNetBiDiB()  &&  tc.getBidib() != null) {
            if (tc.getBidib().isOpened()) {
                if (e.getActionCommand().equals(logon)) {
                    log.info("local node logon requested from menu");
                    tc.setLogon(true);
                }
                else if (e.getActionCommand().equals(logoff)) {
                    log.info("local node logoff requested from menu");
                    tc.setLogon(false);
                }
                else {
                    log.info("connection changed: {}", e.getActionCommand());
                }
                setEnabled(true);
                putValue(javax.swing.Action.NAME, tc.isDetached() ? logon : logoff);
            }
            else {
                setEnabled(false);                
                putValue(javax.swing.Action.NAME, logoff);
            }
        }
    }
    
    private final static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(NetBiDiBLogonAction.class);

}
