# LogixTableBundle_da.properties
#
# Danish translation by Sonny Hansen
# Overide some properties for the LogixTabelBundel
# Default properties for the jmri.jmrit.LogixTableAction GUI elements

LogixSystemName = Logix System Navn
LogixSystemNameHint = Indtast system navn for ny Logix, f.eks. IX13
LogixUserName = Logix Bruger Navn
LogixUserNameHint = Indtast bruger navn for ny Logix, f.eks. Signal 2 Kontrol
LogixUserNameHint2 = Indtast bruger navn for Logix, f.eks. Signal 2 Kontrol
AddLogixMessage1 = Indtast system navn og bruger navn, og
AddLogixMessage2 = Klik p\u00e5 Opret Logix, tilf\u00f8j derefter Betingelser.
CopyLogixMessage1 = Please enter System Name and User Name\n
CopyLogixMessage2 = of target Logix, then click Copy
ConditionalSystemName = Betingelsens System Navn
ConditionalUserName = Betingelsens Bruger Navn
ConditionalUserNameHint = Indtast bruge navn for Conditional, f.eks. Signal 2 R\u00f8d
#OptionsMenu = Indstillinger
#ToolsMenu = V\u00e6rkt\u00f8j
SuppressWithDisable = Suppress Save Reminders
EnableAll       = Aktiver Alle Logix
DisableAll      = Inaktive Alle Logix

ColumnLabelRow = Row
ColumnLabelOperator = Oper
ColumnLabelNot = Neg
ColumnLabelDescription = Tilstand Variable Beskrivelse
#ColumnLabelState = Tilstand
ColumnLabelTriggersCalculation = Trigger Kalkulation

# Route Table
#ColumnLabelInclude = Inkluder
#ColumnLabelSetState = S\u00e6t Tilstand
#Set = S\u00e6t
Toggle = Skift

# Maintenance Dialog
ElementName = Element Navn
ElementNameHint = Enter the System or User name of an element to find where it is referenced.
ReferenceButton = Get References
FindOrphans = Find Orphaned Items
EmptyConditionals = Find Tomme Betingelser
CrossReference = Find Kryds Referencer

TitleAddLogix = Tilf\u00f8j Logix
TitleCopyLogix = Kopier Logix
TitleEditLogix = Rediger Logix
TitleEditConditional = Rediger Betingelsen
TitleEditAction = Rediger Handling
TitleEditVariable = Rediger Variable
TitleLogicalExpression = Logisk Udtryk
TitleAntecedentPhrase = Eksisterende Variable
TitleConsequentPhrase = Som F\u00f8lge af Handling 
TitleAction = Handling

TitlePickList = Pick Liste
OpenPickListTables = \u00c5bn PickListe Tabel
  
ConditionalTableTitle = Conditionals (in Order of Calculation)
NotApplicableAbbreviation = N/A
ActionTableTitle = Consequent Actions (the 'then' part) 
StateVariableTableTitle = Antecedent Variables (the 'if' part)
triggerOnChange = Udf\u00f8r kun Handlingen ved skift af tilstand
triggerOnAny    = Udf\u00f8r Handlingen hver gang
OnTriggerToTrue = When Triggered Sand
OnTriggerToFalse= When Triggered Falsk
OnTrigger       = Whenever Triggered
OnChangeToTrue  = Ved Skift til Sand
OnChangeToFalse = Ved Skift til Falsk
OnChange = Ved Skift
FromFile = fra file,
After = , efter
Seconds = sekunder
to = til
onWarrant = on Warrant
onBlock = in Block
onPath  = on Path
ValueInMemory = (Memory Value)
ExecJythonCmd = Jython Command

True = Sand
False = Falsk
Unknown = Ukendt
LogicAND = AND
LogicOR = OR
LogicNOT = NOT
LogicMixed = Mixed
rowAbrev = R

LabelLogicType = Logic Operator
TypeLogicHint = Choose logic operator joining state variables for the antecedent ('if' part) of this conditional
LabelAntecedent = Antecedent Expression (the 'if' part of the Conditional)
LabelAntecedentHint = Insert parenthesis so the statement satisfies the logic you want
#HelpButton = Help
LogicHelpText1 = Mixing AND's and OR's may introduce ambiguous evaluations. The antecedent\n
LogicHelpText2 = statement is evaluated from left to right, which corresponds to computing\n
LogicHelpText3 = the innermost variable on the left to the outermost variable on the right.\n
LogicHelpText4 = To modify this order of evaluation, please insert parenthesis to indicate the
LogicHelpText5 = logic you want. You may also modify the operators to use. The evaluation
LogicHelpText6 = logic of 'Mixed' mode is the content of the antecedent field and not the\n
LogicHelpText7 = operators shown in the rows of the state variable table.

CreateLogixButton = Opret Logix
LogixCreateButtonHint = Press to create a new Logix
#DoneButton = F\u00e6rdig
DoneButtonHint = Press to save any user name changes and return to Logix Table
DeleteLogixButton = Slet Logix
DeleteLogixButtonHint = Press to delete this Logix and all its Conditionals
#CancelButton = Fortryd
CancelLogixButtonHint = Press to return to Logix Table without any changes
NewConditionalButton = Ny Betingelse
NewConditionalButtonHint = Press for window to create a new Conditional
CalculateButton = Calculate
CalculateButtonHint = Press to calculate Conditional states without action
ReorderButton = Reorder
ReorderButtonHint = Press then click in right column in order desired
AddVariableButton = Tilf\u00f8j Tilstands Variabel
AddVariableButtonHint = Press to add a new row in State Variable table
CheckVariableButton = Check Tilstands Variabler
CheckVariableButtonHint = Press to evaluate current state of the Variables
UpdateConditionalButton = Opdater Betingelsen
UpdateConditionalButtonHint = Press to keep changes and return to Edit Logix
CancelConditionalButtonHint = Press to return to Edit Logix without any changes
DeleteConditionalButton = Slet Betingelsen
DeleteConditionalButtonHint = Press to delete this Conditional and return to Edit Logix
addActionButton = Tilf\u00f8j Handling
addActionButtonHint = Press to add a new row to Action Table
#UpdateButton = Opdater
#DeleteButton = Slet
UpdateButtonHint = Press to keep changes and return to Edit Conditional
CancelButtonHint = Press to return to Edit Conditional without any changes
DeleteButtonHint = Press to delete and return to Edit Conditional 

NameHintTurnout = Enter Name (system or user) for Turnout (e.g. LT12)
NameHintSensor = Enter Name (system or user) for Sensor (e.g. CS2)
NameHintSignal = Enter Name (system or user) for Signal Head (e.g. IH34)
NameHintSignalMast = Enter Name (system or user) for Signal Mast and hit Enter/Return to load aspects
NameHintLight = Enter Name (system or user) for Light (e.g. CL21)
NameHintRoute = Enter name (system or user) of Route
NameHintWarrant = Enter name (system or user) of Warrant
NameHintMemory = Enter name (system or user) of Memory
NameHintLogix = Enter name (system or user) of Logix
NameHintOBlock = Enter name (system or user) of OBlock
CompareHintMemory = Select an operator to compare memory values
CompareTypeHint = Select either a literal value or the value in a memory location
NameHintConditional = Enter System Name for Conditional (or User Name if in this Logix)
TurnoutSetHint = Select Closed or Thrown depending upon how Turnout is to be set
SensorSetHint = Select Active or Inactive depending upon how Sensor is to be set
LightSetHint = Select On or Off depending upon how Light is to be set
SignalSetHint = Select Signal Head Appearance to set
SignalMastSetHint = Select Signal Mast Aspect to set and hit Enter/Return to load aspects
OBlockStatusHint = Select an OBlock Status to Test
LockSetHint = Select Lock or Unlock
DataHintDelayedSensor = Enter time (seconds) to wait before setting sensor
DataHintDelayedTurnout = Enter time (seconds) to wait before setting turnout
DataHintMemory = Enter Memory whose value is compared
DataHintValue = Enter Value to be compared
DataHintSound = Enter name of sound file to be played
DataHintScript = Enter name of script to be run
SetHintSound = Click for a file selection dialog for choosing a sound file
SetHintScript = Click for a file selection dialog for choosing a script file
DataHintTime = Enter time (hh:mm) for a 24-hour clock
NameHintFromMemory = Enter name (system or user) of Memory to be copied from
DataHintToMemory = Enter name (system or user) of Memory to receive the copied value
DataHintLightIntensity = Enter intensity percentage as an integer 0 to 100.
DataHintLightTransitionTime = Enter number of fast clock minutes to transition between 0% and 100%.
VariableTypeHint = Select type of state variable for Conditional to test
VariableStateHint = Select the state of the variable to test
VariableAspectHint = Select the Aspect of the Signal to test
ActionItemHint = Select action item for Conditional to execute
ActionOptionHint = Select when action should occur
SetHintAudio = Select action to perform
NameHintAudio = Enter Name (system or user) for AudioSource (e.g. IAS2)
SetHintJythonCmd = Enter Jython command text
DataHintTrainId = Enter a train ID from the Roster - or enter a DCC address indicating long or short e.g. 1234(L) or 10(S)
DataHintTrainName = Enter a name for the train
DataHintBlockValue = Enter a value to be set into the block
DataHintThrottleFactor = Enter a decimal number for the throttle setting ratio.
BlockPathsSetHint = Select the path to use
LabelTrainId = Train ID or Address
LabelTrainName = Train Name
LabelThrottleFactor = Throttle Adjustment Factor
LabelBlockValue = Block Value

PromptLoadMastName = (Type Signal Mast name and hit Enter)
PromptLoadSignalName = (Type Signal Head name and hit Enter)

#ButtonOK = OK
#ButtonAdd = Tilf\u00f8j
#ButtonDelete = Slet
#ButtonEdit = Rediger
ButtonFirst = F\u00f8rste
ButtonNext = N\u00e6ste
ReorderMessage = Please press First, then Next, Next,... in desired order.
#ButtonCopy = Kopier
ButtonMove = Move
ConfirmTitle = Question
ConfirmLogixDelete = Are you sure you want to delete Logix "{0}"?
ConfirmLogixDuplicate = Logix "{0}" already exists. Do you want to copy\nthe Conditionals of Logix "{1}" into "{0}"?
NameConditionalCopy = Rename the copy of Conditional "{0}" ({1})\nin Logix {2} being copied into Logix "{3}" ({4}).\nPress Cancel if you don't want to copy this conditional.
ConfirmIndirectReference = Press "YES" if at run time Memory location "{0}" will contain a valid item name for this action.\nPress "NO" if you want to enter the item name directly.\nPress "CANCEL" if you want to suppress this warning.\n

# Variable State combo box states
SensorActive = Aktiv
SensorInactive = Inaktiv
TurnoutClosed = Ret
TurnoutThrown = Afvigende
TurnoutUnlock = Unlock
TurnoutLock = L\u00e5st
LightOn = On
LightOff = Off
StateMemoryEquals = (case sensitive) Value
StateMemoryEqualsInsensitive = (case insensitive) Value 
StateMemoryCompare = (case sensitive) Memory
StateMemoryCompareInsensitive = (case insensitive) Memory
StateSignalHeadRed = R\u00f8d
StateSignalHeadYellow = Gul
StateSignalHeadGreen = Gr\u00f8n
StateSignalHeadDark = Signal Slukket
StateSignalHeadFlashRed = Blinkende R\u00f8d
StateSignalHeadFlashYellow = Blinkende Gul
StateSignalHeadFlashGreen = Blinkende Gr\u00f8n
StateSignalHeadLit = Signal Head Lit
StateSignalHeadHeld = Signal Head Held
StateSignalHeadLunar = Hvid
StateSignalHeadFlashLunar = Blinkende Hvid
StateSignalMastLit = Signal Mast Lit
StateSignalMastHeld = Signal Mast Held
StateRouteFree = Rute Fri
stateRouteOccupied = Rute Optaget
StateRouteReserved = Rute Allokeret
StateRouteIsSet    = Rute Set
StateTrainRunning  = Train Running    
#StateEntryExitActive = Aktiv
#StateEntryExitInactive = Inaktiv

# Display Description of state variable 
TypeSensorActive = Sensor Aktiv
TypeSensorInactive = Sensor Inaktiv
TypeTurnoutThrown = Sporskifte Afvigende
TypeTurnoutClosed = Sporskifte Ret
TypeConditionalTrue = Betingelsen Sand
TypeConditionalFalse = Betingelsen Falsk
TypeLightOn = Lys On
TypeLightOff = Lys Off
TypeMemoryEquals = Memory Compare to Value, Case Sensitive
TypeMemoryEqualsInsensitive = Memory Compare to Value, Case Insensitive
TypeMemoryCompare = Memory Compare to Memory, Case Sensitive
TypeMemoryCompareInsensitive = Memory Compare to Memory, Case Insensitive)
TypeFastClockRange = Fast Clock Range
TypeSignalHeadRed = Signal Head Red
TypeSignalHeadYellow = Signal Head Yellow
TypeSignalHeadGreen = Signal Head Green
TypeSignalHeadDark = Signal Head Dark
TypeSignalHeadFlashRed = Signal Head Flashing Red
TypeSignalHeadFlashYellow = Signal Head Flashing Yellow
TypeSignalHeadFlashGreen = Signal Head Flashing Green
TypeSignalHeadLit = Signal Head Lit
TypeSignalHeadHeld = Signal Head Held
TypeSignalHeadLunar = Signal Head Lunar
TypeSignalHeadFlashLunar = Signal Head Flashing Lunar
TypeWarrantRouteFree    = Free
TypeWarrantRouteOccupied = Occupied
TypeWarrantRouteAllocated = Allocated
TypeRouteIsSet  = Set
TypeTrainRunning = Running
TypeSignalMastAspectEquals = Signal Mast Aspect Equals
TypeSignalHeadAspectEquals = Signal Head Appearance equals
TypeSignalMastLit = Signal Mast Lit
TypeSignalMastHeld = Signal Mast Held
TypeEntryExitActive = Aktiv
TypeEntryExitInactive = Inaktiv

VariableOKMessage = All state variables are OK.
VariableErrorMessage = Error found, please correct and try again.
ActionOKMessage = All actions are OK.
NoActionMessage = A Condition requires at least one state variable and usually has at least one action.

FileButtonHint = Click to select a file from disk
LabelActionItem = Handlings Gruppe
LabelActionType = Handlings Type
LabelVariableType = Variable Type
LabelVariableState = Variable Tilstand
LabelVariableAspect = Variable Aspect
LabelLiteralValue  = Literal Value
LabelMemoryValue  = Memory V\u00e6rdi
LabelStartTime  = Start Tid
LabelEndTime    = Slut Tid
LabelCompareOp  = Comparison Operator
LabelCompareType  = Compare as
LabelActionOption = Skift Mulighed
LabelItemName   = System / Bruger Navn
LabelActionTurnout = Sporskifte Position
LabelActionSensor = Sensor Tilstand
LabelActionLight = Lys Tilstand
LabelActionSignal = Signal Head Appearance
LabelSignalAspect = Signal Mast Aspect
LabelActionLock = Lock State
LabelActionFile = Set
LabelActionText = Action Data
LabelActionDescription = Handlings Beskrivelse
LabelActionAudio = Audio Action
LabelDelayTime  = Forsinkelses Tid
LabelSetTime    = S\u00e6t Tid
LabelSetFile    = Fil Navn
LabelScriptCommand  = Script Kommando
LabelLightIntensity = Lys Styrke
LabelTransitionTime = Overgangs Tid
LabelMemoryLocation = Memory Navn
LabelValue      = V\u00e6rdi
LabelBlockPaths = Block Path
LabelBlockStatus = Block Status
LabelControlTrain = Control Command

ActionNone = Ingen
ActionSetTurnout = S\u00e6t Sporskifte
ActionSetSignal = Set Signal Head Appearance
ActionSetSignalHeld = Set Signal Head Held
ActionClearSignalHeld = Clear Signal Head Held
ActionSetSignalDark = Set Signal Head Dark
ActionSetSignalLit = Set Signal Head Lit
ActionTriggerRoute = Trigger Route
ActionSetSensor = S\u00e6t Sensor
ActionDelayedSensor = S\u00e6t Forsinket Sensor
ActionResetDelayedSensor = Reset Delayed Set Sensor
ActionCancelSensorTimers = Oph\u00e6v Timers for Sensor
ActionDelayedTurnout = Delayed Set Turnout
ActionResetDelayedTurnout = Reset Delayed Set Turnout
ActionCancelTurnoutTimers = Oph\u00e6v Timers for Sporskifte
ActionSetLight = S\u00e6t Lys
ActionSetLightIntensity = S\u00e6t Lysstyrke
ActionSetLightTransitionTime = S\u00e6t Lys Overgangs Tid
ActionSetMemory = S\u00e6t Memory
ActionCopyMemory = Copy Memory To Memory 
ActionEnableLogix = Aktiver Logix
ActionDisableLogix = Deaktiver Logix
ActionPlaySound = Play Lyd Fil
ActionRunScript = Run Script
ActionTurnoutLock = Sporskifte L\u00e5st
ActionSetFastClockTime = Set Fast Clock Time
ActionStartFastClock = Start Fast Clock
ActionStopFastClock = Stop Fast Clock
ActionAllocateWarrant = Allocate Warrant Route
ActionDeallocateWarrant = Deallocate Warrant
ActionSetWarrantTurnouts = Set Route Turnouts
ActionAutoRunWarrant    = Auto Run Train
ActionManualRunWarrant  = Manually Run Train
ActionControlTrain      = Control Auto Train
ActionSetTrainId        = Set Train ID
ActionSetTrainName      = Set Train Name
ActionSetSignalMastAspect = Set Signal Mast Aspect
ActionSetThrottleFactor = Set Throttle Factor
ActionSetSignalMastHeld = Set Signal Mast Held
ActionClearSignalMastHeld = Clear Signal Mast Held
ActionSetSignalMastDark = Set Signal Mast Dark
ActionClearSignalMastDark = Clear Signal Mast Dark
ActionSetBlockValue     = Set Block Value
ActionSetBlockError     = Set Block Error
ActionClearBlockError   = Clear Block Error
ActionDeallocateBlock   = Deallocate Block
ActionSetBlockOutOfService = Set Block OutOfService
ActionBlockInService    = Clear Block OutOfService

ActionTypeHint = Select type of action, or select None if no action is needed.

ActionControlAudio = Control Audio object
ActionJythonCommand = Execute Jython Command

AudioSourcePlay = Play
AudioSourceStop = Stop
AudioSourcePlayToggle = Toggle Play
AudioSourcePause = Pause
AudioSourceResume = Forts\u00e6t
AudioSourcePauseToggle = Toggle Pause
AudioSourceRewind = Rewind
AudioSourceFadeIn = Fade-in
AudioSourceFadeOut = Fade-out
AudioResetPosition = Reset Position

WarrantHalt     = Halt
WarrantResume   = Resume
WarrantAbort    = Abort

Sensor  = Sensor
Turnout = Sporskifte
Conditional = Betingelse
Light   = Lys
Memory  = Hulommelse
SignalHead = Signal Hoved
SignalMast = Signal Mast
Signal  = Signal
Warrant = Warrant
WarrantRoute = Warrant Route
OBlock  = OBlock
OBlockStatus = OBlock Status
Route   = Rute
Logix   = Logix
FastClock = Model Ur
Audio   = Audio
Script  = Script
Other   = Andet
EntryExit = Entry Exit

VarStateDescrpt = {0} "{1}" state is {2}
SignalHeadStateDescrpt = {0} "{1}" appearance is {2}
SignalMastStateDescrpt = {0} "{1}" aspect is {2}
MemoryValueDescrpt = {0} "{1}" {2} value "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} range from {1} to {2}
CopyOf = Copy of {0}

LessThan        = Less Than
LessOrEqual     = Less Than Or Equal
Equal           = Equal
GreaterOrEqual  = Greater Than Or Equal
GreaterThan     = Greater Than

#ErrorTitle = Error
Error1 = A Logix with this system name already exists.\nPlease change system name and try again.
Error3 = A Logix with this user name already exists.\nPlease change user name and try again.
Error5 = Cannot find a Logix with that system name.
Error6 = New user name is already in use. Cannot update this Logix.\nPlease change user name and try again.
Error4 = The following error occurred when activating this Logix.\n
Error7 = \nPlease correct the reference or delete the offending Conditional or Logix.
Error8 = Invalid system name, or system name not entered.\nPlease enter a valid Logix system name (e.g. IX3) and try again.
Error9  = Enter an integer (digits only) or a Memory variable containing\nan integer for the number of seconds to {0}.
Error10 = New user name is already in use. Cannot update this Conditional.\nPlease change user name and try again.
Error11 = Conditional "{0}" ({1}) is a Conditional Variable in the Conditional,\n"{2}" ({3}), of Logix, "{4}" ({5}).\nPlease remove that variable first.
Error20 = The name "{0}" does not match an existing conditional.\nPlease enter a valid conditional system name, or the user name of a conditional in this logix.
Error21 = "{1}" is not a valid appearance for Signal Head "{0}".
Error22 = The name "{0}" does not match an existing "{1}".\nPlease correct or create as required, and try again.
Error23 = Set Delayed Sensor action
Error24 = Memory variable "{0}" currently does not contain an integer value.\nThe action cannot be performed until this value is corrected! 
Error26 = Invalid time entry "{0}"\nTime must be entered in hh:mm format (e.g. 01:30, 16:00)\nfor a 24-hour clock. Please reenter in correct format, and try again. 
Error27 = Reset Delayed Set Sensor action
Error29 = Set Light Transition Time
Error30 = Duplicate user name error. Entered user name is already in use by Conditional "{0}".\nPlease enter a different user name from others in this table.
Error31 = Copy of Logix "{0}" in progress.  Please complete and try again.
Error32 = Cannot edit two Logixs at the same time. Please complete edit of Logix "{0}" and try again.
Error34 = Cannot edit two Conditionals at the same time. Please complete edit of Conditional "{0}" and try again.
Error35 = Edit Conditional in progress. Please complete edit of Conditional "{0}" and try again.
Error38 = {0} is an unreasonable amount to {1}\nPlease enter a positive number of seconds less than 1 hour, and try again.
Error39 = Set Delayed Turnout action
Error40 = Light - {0} - does not support transition time.\nPlease enter a light with Transition Time or change action type, and try again.
Error41 = Reset Delayed Set Turnout action
Error42 = Set Light Intensity action
Error43 = Enter an integer (digits only) or a Memory variable containing\nan integer to Set Light Intensity.
Error45 = Light - {0} - does not have variable intensity.\nPlease enter a light with variable intensity or change action type, and try again.
Error46 = At least two Actions are needed to reorder Actions.
Error47 = Edit of State Variable in progress. Please complete and try again.
Error48 = Edit of Action in progress. Please complete edit and try again.
Error49 = LRoute Initializer antecedent cannot be edited (The actions may be edited)
ErrorAppearance = Select an appearance. You must hit the Enter/Return key\nafter entering a name with the cursor in the name field.
ErrorAspect = Select an Aspect.  You may need to hit the Enter/Return key\nwith the cursor in the name field.
ErrorVariableType = Select a Variable Type or Cancel.
ErrorVariableState = Select a state for this variable.

ParseError1 = Could not find expected Left argument < {0} >
ParseError2 = Could not find expected operator. < {0} >
ParseError3 = Could not find expected Right argument. < {0} >
ParseError4 = Antecedent parsing error: Unexpected character found: < {0} >
ParseError5 = Antecedent parsing error: All {0} rows must be used. Row {1} is missing.
ParseError6 = Exception thrown while parsing antecedent\n
ParseError7 = Unmatched parenthesis, missing < {0} >.
ParseError8 = \nIf the above message is 'String index out of range:', the following number is the position in the antecedent where the error occurred.
ParseError9 = Unexpected operator or characters < {0} >

#WarnTitle = Advarsel
ButtonDisabled = Continue Disabled
ButtonEnabled = Continue Enabled
Warn1 = The last Conditional has been deleted from this Logix.
Warn2 = A Logix must have at least one Conditional to do anything useful.
Warn3 = The last State Variable has been deleted from this Conditional.\nA Conditional must have at least one State Variable to do anything useful.
Warn5 = The Conditional {0} ({1}) has no State Variables.\nA Conditional must have at least one State Variable to do anything useful.
Warn6 = A Memory action cannot be referred to indirectly through a memory location.
#Warn7 = to or from {0}
Warn8 = Conditionals in Logix "{0}" ({1}) cannot be edited.\nGo to the Sensor Group Table to edit sensor groups.
Warn9 = Conditions exist that could result in a logic loop. \n The following both trigger this Logix and are changed by it:\n
Warn10 = was disabled as requested.\nPlease remember to enable it later.
Warn11 = \nYou may delete Conditional "{0}" ({1})\nor edit it from the template window where it was created.
makeSelection = Please select an action type.
DeleteLogix = When Deleting the Logix
