# LogixTableBundle_de.properties
#
# Translation by Simon Ginsburg und Egbert Broerse
# German properties for the jmri.jmrit.LogixTableAction GUI elements

#LogixSystemName = Logix Systemname
LogixSystemNameHint = Gebe den Systemnamen f\u00fcr ein neues Logixelement an, z.B. "IX13"
#LogixUserName = Logix Nutzername
LogixUserNameHint = Gebe den Nutzernamen f\u00fcr ein neues Logixelement an, z.B. 'Signal 2 Steuerung'
LogixUserNameHint2 = Gebe einen neuen Nutzernamen f\u00fcr ein Logixelement an, z.B. 'Signal 2 Steuerung'
AddLogixMessage1 = Geben Sie einen Systemnamen und einen Nutzernamen an, danach
AddLogixMessage2 = auf [Erzeuge neu] klicken und die Bedingungen hinzuf\u00fcgen.
ConditionalSystemName = Bedingung Systemname
ConditionalUserName = Bedingung Nutzername
ConditionalUserNameHint = Gebe Nutzernamen f\u00fcr Bedingung an, z.B. 'Signal 2 Rot'

#ColumnLabelVariableType = Variablentyp
#ColumnLabelData1 = Daten 1
#ColumnLabelData2 = Daten 2
ColumnLabelTriggersCalculation = Berechne Aktivierungen

# Route Table and Signal Group Table

TitleAddLogix = Logix hinzuf\u00fcgen
TitleEditLogix = Logix bearbeiten
TitleEditConditional = Bedingung bearbeiten
TitleLogicalExpression = Logischer Ausdruck
TitleAction = Ereignisse
ConditionalTableTitle = Bedingungen (in der Reihenfolge der Berechnung)
StateVariableTableTitle = Zustandsvariablen (das 'wenn' Teil)
#LogicalExpressionTitle = Logischer Ausdruck
NotApplicableAbbreviation = Nicht verf\u00fcgbar
OnChangeToTrue = Beim \u00dcbergang zu "Wahr"
OnChangeToFalse = Beim \u00dcbergang zu "Unwahr"
OnChange = Beim \u00dcbergang

True = Wahr
False = Unwahr
LogicAND = UND
LogicNOT = NICHT
LogicOR=ODER
LogicMixed=Gemischt

#CreateLogixButton = Erzeuge Logix
LogixCreateButtonHint = Klicke um ein neues Logixelement zu erzeugen
DoneButtonHint = Klicke um Nutzernamen zu speichern und zur Logixtabelle zur\u00fcckzukehren
#DeleteLogixButton = Logix l\u00f6schen
DeleteLogixButtonHint = Klicke um die Logix mit allen Bedingungen zu l\u00f6schen
CancelButtonHint = Klicke um abzubrechen und ohne \u00c4nderungen zur Bedingungsbearbeitung zur\u00fcckzukehren
NewConditionalButton = Neue Bedingung
NewConditionalButtonHint = Klicke um neue Bedingung einzugeben
CalculateButton = Berechne
CalculateButtonHint = Klicke um Zustandsvariablen zu berechnen ohne Ereignisse
ReorderButton = Neu ordnen
ReorderButtonHint = Klicke um rechte Spalte in gew\u00fcnschter Reihenfolge zu ordnen
AddVariableButton = Zustandsvariable hinzuf\u00fcgen
AddVariableButtonHint = Klicken um neue Zeile in der Zustandstabelle zu erzeugen.
CheckVariableButton = Zustandsvariablen kontrollieren
CheckVariableButtonHint = In Zustandsspalte dr\u00fccken um informationen in Zustandstabelle zu kontrollieren.
UpdateConditionalButton = Bedingung aktualisieren
UpdateConditionalButtonHint = Dr\u00fccken um \u00c4nderungen durch zu f\u00fchren und zu Logixbearbeitung zur\u00fcckzukehren
CancelConditionalButtonHint = Dr\u00fccken um ohne \u00c4nderungen zu speichern zu Logixbearbeitung zur\u00fcckzukehren
DeleteConditionalButton = Bedingung l\u00f6schen
DeleteConditionalButtonHint = Dr\u00fccken um Bedingung zu l\u00f6schen und zu Logixbearbeitung zur\u00fcckzukehren

NameHintTurnout = Gebe System- oder Nutzernamen ein f\u00fcr Weiche (z.B. LT12)
NameHintSensor = Gebe System- oder Nutzernamen ein f\u00fcr Detektor (z.B. CS2)
NameHintSignal = Gebe System- oder Nutzernamen ein f\u00fcr Signalschirm (z.B. IH34)
NameHintLight = Gebe System- oder Nutzernamen ein f\u00fcr Licht (z.B. CL12)
NameHintRoute = Gebe System- oder Nutzernamen ein f\u00fcr zu beeinflussende Weichenstra\u00dfe
NameHintMemory = Gebe System- oder Nutzernamen ein f\u00fcr zu beeinflussenden Speicher
NameHintLogix = Gebe System- oder Nutzernamen ein f\u00fcr Logix
TurnoutSetHint = W\u00e4hle "Geradeaus" oder "Abzweigung" je nach Vorgabe der Weichenstellung
SensorSetHint = W\u00e4hle "Besetzt" oder "Frei" je nach Vorgabe des Detektorstatus
LightSetHint = W\u00e4hle "Ein" oder "Aus" je nach Vorgabe der Bedingung f\u00fcr Licht
SignalSetHint = W\u00e4hle geforderte Signalstellung
LockSetHint = W\u00e4hle ge- oder entsperrt
DataHintDelayedSensor = Gebe Verz\u00f6gerungszeit ein (in Sekunden) um Detektorzustand zu \u00e4ndern
DataHintDelayedTurnout = Gebe Verz\u00f6gerungszeit (Sekunden) f\u00fcr Weiche ein
DataHintMemory = W\u00e4hle geforderter Zustand des Speichers
DataHintSound = W\u00e4hle zu spielende Audiodatei
DataHintScript = W\u00e4hle zu startendes Ablaufskript
SetHintSound = Klicke im Dokumentwahldialog auf einer Audiodatei der Wahl
SetHintScript = Klicke im Dokumentwahldialog auf einer Skriptdatei der Wahl

# Buttons used in multiple jmri.* packages, must stay here for older Logix .rb method
ButtonFirst = Erstes
ButtonNext = N\u00e4chstes
ReorderMessage = Bitte zuerst "Erstes" dr\u00fccken, danach "N\u00e4chstes", "N\u00e4chstes" usw. in der gew\u00fcnschten Anordnung.

# Variable State combo box states used in jmri.implementation.DefaultConditionalAction
TypeSensorActive = Detektor Aktiv
TypeSensorInactive = Detektor Inaktiv
TypeTurnoutThrown = Weiche Abzweigend
TypeTurnoutClosed = Weiche Geradeaus
TypeConditionalTrue = Conditional True
TypeConditionalFalse = Conditional False
TypeLightOn = Licht Ein
TypeLightOff = Licht Aus
TypeMemoryEquals = Speicher vergleichen mit Wert (Gro\u00df-/Kleinschreibung-unterscheidend)
TypeFastClockRange = Spieluhr Bereich
TypeSignalHeadRed = Signalschirm Rot
TypeSignalHeadYellow = Signalschirm Gelb
TypeSignalHeadGreen = Signalschirm Gr\u00fcn
TypeSignalHeadDark = Signalschirm Dunkel
TypeSignalHeadFlashRed = Signalschirm Rot Blinkend
TypeSignalHeadFlashYellow = Signalschirm Gelb Blinkend
TypeSignalHeadFlashGreen = Signalschirm Gr\u00fcn Blinkend
TypeSignalHeadLit = Signalschirm Erleuchtet
TypeSignalHeadHeld = Signalschirm Gehalten
VariableOKMessage = Alle Zustandsvariablen sind in Ordnung.
VariableErrorMessage = Fehler aufgetreten, bitte korrigieren und erneut versuchen.

ActionNone = Keine
ActionSetTurnout = Setze Weiche
ActionSetSignal = Setze Signalbegriff
ActionSetSignalHeld = Setze Signal haltend
ActionClearSignalHeld = L\u00f6sche gehaltenes Signal
ActionSetSignalDark = Setze Signal Dunkel
ActionSetSignalLit = Setze Signal Erleuchtet
ActionTriggerRoute = Weichenstra\u00dfe ansto\u00dfen
ActionSetSensor = Setze Detektor
ActionDelayedSensor = Setze Detektor verz\u00f6gert
ActionResetDelayedSensor = Setze Detektor verz\u00f6gert zur\u00fcck
ActionCancelSensorTimers = L\u00f6sche Detektorverz\u00f6gerung
ActionDelayedTurnout = Setze Weiche verz\u00f6gert
ActionResetDelayedTurnout = Setze Weiche verz\u00f6gert zur\u00fcck
ActionCancelTurnoutTimers = L\u00f6sche Weichenverz\u00f6gerung
ActionSetLight = Setze Licht
ActionSetMemory = Setze Speicher
ActionEnableLogix = Aktiviere Logix
ActionDisableLogix = Deaktiviere Logix
ActionPlaySound = Audiodatei abspielen
ActionRunScript = Skript ablaufen lassen
ActionTurnoutLock = Weichensperrung
ActionTypeHint = Ereignis ausw\u00e4hlen oder, falls nicht n\u00f6tig, "Keine" anw\u00e4hlen.

#TurnoutClosed = Geradeaus
#TurnoutThrown = Abzweigend
TurnoutUnlock = Entsperre
TurnoutLock = Sperre
#SensorActive = Aktiv
#SensorInactive = Inaktiv
LightOn = Ein
LightOff = Aus

Error1 = Eine Logix mit diesem Systemnamen existiert bereits.\nBitte anderen Namen w\u00e4hlen und erneut versuchen.
Error3 = Eine Logix mit diesem Nutzernamen existiert bereits.\nBitte anderen Namen w\u00e4hlen und erneut versuchen.
Error4 = Beim Aktivieren dieses Logix trat der folgende Fehler auf:\n
Error5 = Es existiert keine Logix mit diesem Namen.
Error6 = Dieser neue Benutzernamen wird bereits verwendet. Logix kann nicht aktualisiert werden.\nNutzernamen \u00e4ndern und erneut versuchen.
Error7 = \nBitte den Verweis korrigieren oder die fehlerhafte Bedingung oder Logix l\u00f6schen.
Error8 = Systemname ung\u00fcltig oder noch nicht eingegeben.\nG\u00fcltigen Systemnamen eingeben (bzw. IX3) und erneut versuchen.
Error9 = Ganzzahl eingeben oder eine Speichervariable\nwelche ein Ganzzahl enth\u00e4lt um {0}.
Error10 = Dieser neue Benutzernamen wird bereits verwendet. Bedingung kann nicht aktualisiert werden.\nBenutzernamen \u00e4ndern und erneut versuchen.
Error11 = Bedingung "{0}" ({1}) ist eine Bedingungsvariable in Bedingung,\n"{2}" ({3}), in Logix, "{4}" ({5}).\nBitte diese Variable zuerst l\u00f6schen.
#Error13 = Der Name "{0}" passt zu keiner existierenden Weiche.\nNamen korrigieren oder Weiche erstellen und erneut versuchen.
#Error14 = Der Name "{0}" passt zu keinem existierenden Signal.\nNamen korrigieren oder Signal erstellen und erneut versuchen.
#Error15 = Der Name "{0}" passt zu keinem existierenden Detektor.\nNamen korrigieren oder Detektor erstellen und erneut versuchen.
#Error16 = Der Name "{0}" passt zu keinem existierenden Licht.\nNamen korrigieren oder Licht erstellen und erneut versuchen.
#Error17 = Der Name "{0}" passt zu keinem existierenden Speicher.\nNamen korrigieren oder Speicher erstellen und erneut versuchen.
#Error18 = Der Name "{0}" passt zu keiner existierenden Weichenstra\u00dfe.\nNamen korrigieren oder Weichenstra\u00dfe erstellen und erneut versuchen.
#Error19 = Korrigieren oder neu erstellen, falls n\u00f6tig und erneut versuchen.
Error20 = Der Name "{0}" passt zu keiner existierenden Bedingung.\nKorrekten System oder Nutzernamen f\u00fcr Bedingung eingeben.
Error21 = "{1}" ist kein g\u00fcltiges Signalbild f\u00fcr Signalschirm "{0}".
Error23 = Setze Verz\u00f6gerte Detektorzur\u00fccksetz Ereignis
Error22 = Der Name "{0}" passt zu keinem existierendem Logix.\nNamen korrigieren oder Logix erstellen und erneut versuchen.
Error24 = Speicherwert "{0}" enth\u00e4lt keine numerischer Wert.\nWenn angesto\u00dfen kann die Bedingung nicht durchgef\u00fchrt werden bis den Wert korrigiert ist!
#Error25 = Unsinnige oder fehlende Sekundeneingabe f\u00fcr verz\u00f6gerte Detektorreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error26 = Ung\u00fcltige Zeiteingabe "{0}"\nZeit muss im hh:mm Format eingegeben werden (e.g. 01:30, 16:00)\nf\u00fcr eine 24-Sunden Uhr. Bitte im korrekten Format eingeben und erneut versuchen.
Error27 = Setze Verz\u00f6gerte Detektormeldung Zur\u00fcck Ereignis
#Error28 = Unsinnige oder fehlende Sekundeneingabe f\u00fcr verz\u00f6gerte Detektorzur\u00fccksetzreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error29 = Setze Licht\u00fcbergangszeit
Error31 = Kopieren von Logix "{0}" l\u00e4uft. Bitte abwarten und erneut versuchen.
Error30 = Doppelte Benutzernameneingabe. Dieser Name ist bereits in Bedingung "{0}" verwendet.\nBitte anderen Benutzernamen aus der Tabelle ausw\u00e4hlen.
Error32 = Es k\u00f6nnen keine zwei Logixe gleichzeitig bearbeitet werden. Bitte erst Logix "{0}" fertig bearbeiten und erneut versuchen.
Error34 = Es k\u00f6nnen keine zwei Bedingungen gleichzeitig bearbeitet werden. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
Error35 = Es wird gerade eine Bedingung bearbeitet. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
#Error36 = Es k\u00f6nnen keine weiteren Bedingungen f\u00fcr diese Logix eingegeben werden;\n da die Maximallimite erreicht ist.
#Error37 = Es k\u00f6nnen keine weiteren Zustandsvariablen f\u00fcr diese Bedingung eingegeben werden;\n da die Maximallimite erreicht ist.
Error38 = {0} ist ein unangemessen Wert f\u00fcr {1}\nBitte Anzahl von Sekunden eingeben (nur Ziffern, max. 1 Stunde) und erneut versuchen.
Error39 = Setze Verz\u00f6gerte Weichenstellung Ereignis
Error40 = Licht - {0} - unterst\u00fctzt keine \u00dcberg\u00e4nge.\nBitte ein Licht w\u00e4hlen das \u00dcberg\u00e4nge unterst\u00fctzt oder Aktionstyp \u00e4ndern, und und erneut versuchen.
Error41 = Setze Verz\u00f6gerte Weichenstellung Zur\u00fcck Ereignis
Error42 = Setze Lichtintensit\u00e4t Ereignis
Error43 = Ganzzahl eingeben (nur Ziffern) oder eine Speichervariable\nwelche ein Ganzzahlwert enth\u00e4lt um die Lichtintensit\u00e4t\nzu setzen
Error45 = Licht - {0} - unterst\u00fctzt keine Intensit\u00e4tsanpassung.\nBitte ein Licht w\u00e4hlen das veriable Intensit\u00e4ten unterst\u00fctzt oder Aktionstyp \u00e4ndern, und und erneut versuchen.
Error46 = Zur Reorganisation sind mindestens zwei Bedingungen notwendig.
Error47 = Bearbeiten von Zustandsvariable l\u00e4uft. Bitte vollenden und erneut versuchen.
Error48 = Bearbeiten eines Ereignisses l\u00e4uft. Bitte vollenden und erneut versuchen.
Error49 = LRoute Initializer Vorl\u00e4ufer kann nicht bearbeitet werden (die Ereignisse aber dennoch)
ErrorAppearance=W\u00e4hle ein Signalschirmbild. Nach Eingabe mit der Cursor im Namenfeld die Enter- oder Returntaste dr\u00fccken.
ErrorAspect=W\u00e4hle ein Signalbegriff. Nach Eingabe mit der Cursor im Namenfeld die Enter- oder Returntaste dr\u00fccken.
ErrorVariableState=W\u00e4hle einen Zustand f\u00fcr diese Variable.
ErrorVariableType=W\u00e4hle einen Variablentyp oder klicke [Abbrechen].

ButtonDisabled = Ausgeschaltet weiterfahren
ButtonEnabled = Eingeschaltet weiterfahren

Warn1 = Die letzte Bedingung dieser Logix wurde gel\u00f6scht.
Warn2 = Eine Logix muss mindestens eine Bedingung enthalten um sinnvoll arbeiten zu k\u00f6nnen.
Warn3 = Die letzte Zustandsvariable f\u00fcr diese Bedingung wurde gel\u00f6scht.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu k\u00f6nnen.
Warn5 = Die Bedingung "{0}" enth\u00e4lt keine Zustandsvariablen.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu k\u00f6nnen.
Warn6 = Warnung - Eine \u00c4nderung {0} von {1} {2} startet die Berechnung dieser Logix.\nIn einigen Bedingungen wurde die Berechnung ein- und in anderen ausgeschaltet.\nBitte Berechnung \u00fcberall ausschalten, wenn jetzt keine Neuberechnung gew\u00fcnscht wird.
# Warn7 is inserted as {2} in Warn6 when the item being warned about 
# is a Signal Head, or otherwise has a specific value as part of the trigger.
Warn7 = von oder nach {0}
Warn9 = Die Bedingungen k\u00f6nnten in eine Endlosschlaufe f\u00fchren.\n Die beiden folgenden beeinflussen diese Logix und werden gleichzeitig von ihr beeinflusst:\n
Warn10 = wurde ausgeschaltet wie vorgegeben.\nNicht vergessen, sie sp\u00e4ter wieder einzuschalten.
Seconds=Sekunden
After=, nach
to = nach
TypeEntryExitActive=Aktiv
TypeEntryExitInactive=Inaktiv
LabelValue=Wert

# Bean names used in multiple jmri.* packages, must stay here for older Logix .rbx method
# in LogixTableAction these names are fetched from jmri.NamedBeanBundle.props
OBlockStatus=Besetztblockzustand
OBlockStatusHint=W\u00e4hle eine Besetztblockzustand zum Vergleich
WarrantRoute=Fahrtverlauf
EntryExit= Eingang-Ausfahrt (NX)
Other=Sonstige
Script=Ablaufdatei

SuppressWithDisable=Keine Speichererrinnerungen zeigen

makeSelection=Bitte ein Handlungstyp w\u00e4hlen.
ConfirmLogixDelete=Sind Sie sicher, dass Sie {0} l\u00f6schen wollen?

ActionAllocateWarrant=Fahrerlaubnisstrecke zuweisen
ActionAutoRunWarrant=Automatischer Zuglauf
ActionBlockInService=Streckenblock Au\u00dfer Betrieb aufheben
ActionClearBlockError=Streckenblockfehler aufheben
ActionClearSignalMastDark=Signalmast Unbeleuchtet aufheben
ActionClearSignalMastHeld=Signalmast Angehalten aufheben
ActionControlAudio=Audioobjekt regeln
ActionControlTrain=Automatischer Zug regeln
ActionCopyMemory=Speicher kopieren nach Speicher
ActionDeallocateBlock=Block freigeben
ActionDeallocateWarrant=Fahrerlaubnis aufheben
ActionItemHint=W\u00e4hle einen Ereignis die der Konditional ausf\u00fchren soll
ActionJythonCommand=Jythonbefehl ausf\u00fchren
ActionManualRunWarrant=Zug manuell steuern
ActionOKMessage=Alle Ereignisse in Ordnung
ActionOptionHint=W\u00e4hle wann das Ereignis durchgef\u00fchrt werden soll
ActionSetBlockError=Streckenblockfehler aktivieren
ActionSetBlockOutOfService=Streckenblock Au\u00dfer Betrieb auflegen
ActionSetBlockValue=Streckenblockwert eingeben
ActionSetFastClockTime=Betriebsuhrzeit eingeben
ActionSetLightIntensity=Setze Lichtintensit\u00e4t
ActionSetLightTransitionTime=Setze Licht\u00fcbergangszeit
ActionSetSignalMastAspect=Setze Signalbegriff
ActionSetSignalMastDark=Setze Signalmast Unbeleuchtet
ActionSetSignalMastHeld=Setze Signalmast Angehalten
ActionSetThrottleFactor=Setze Handreglerverh\u00e4ltnis
ActionSetTrainId=Setze Zug ID
ActionSetTrainName=Setze Zugname
ActionSetWarrantTurnouts=Setze Weichenstra\u00dfe
ActionStartFastClock=Starte Betriebsuhr
ActionStopFastClock=Betriebsuhr anhalten
ActionTableTitle=Folgenden Ereignisse (das 'denn' Teil)
addActionButton=Ereignis hinzuf\u00fcgen
addActionButtonHint=Dr\u00fccke um eine neue Spalte an die Ereignistabelle hinzuzuf\u00fcgen
AudioResetPosition=Position zur\u00fccksetzen
AudioSourceFadeIn=Einblenden
AudioSourceFadeOut=Ausblenden
AudioSourcePause=Pause
AudioSourcePauseToggle=Pause umschalten
AudioSourcePlay=Spiele
AudioSourcePlayToggle=Spielen umschalten
AudioSourceResume=Fortfahren
AudioSourceRewind=R\u00fcckspulen
AudioSourceStop=Stopp
BlockPathsSetHint=W\u00e4hle ein Blockpfad
ButtonMove=Schritt
CancelLogixButtonHint=Dr\u00fccke um ohne \u00c4nderungen zur Logixtabelle zur\u00fcck zu gehen
ColumnLabelDescription=Zustandsvariablenbeschreibung
ColumnLabelNot=Invers
ColumnLabelOperator=Oper
ColumnLabelRow=Zeile
ColumnLabelState=Zustand
CompareHintMemory=W\u00e4hle einen Operator um Speicherwerte zu vergleichen
CompareTypeHint=W\u00e4hle den w\u00f6rtlichen Wert oder den Speicherinhalt
ConfirmIndirectReference=Dr\u00fccke "Ja" wenn Speicher "{0}" w\u00e4hrend der Laufzeit einen g\u00fcltigen Namen f\u00fcr diese Ereignis enth\u00e4lt.\\Dr\u00fccke "Nein" um den Namen direkt ein zu geben.\nDr\u00fccke "Abbrechen" um diese Warnung zu unterdr\u00fccken.\n
ConfirmLogixDuplicate=Logix "{0}" existiert schon. Wollst du die\nBedingungen von Logix "{1}" nach "{0}" kopieren?
ConfirmTitle=Frage
CopyLogixMessage1=Bitte System- und Nutzername der ZielLogix\n
CopyLogixMessage2=eingeben, dann [Kopiere] klicken.
CopyOf=Kopie von {0}
CrossReference=Finde Kreuzreferenze
DataHintBlockValue=Gebe Wert ein f\u00fcr den Block
DataHintLightIntensity=Gebe Lichtintensit\u00e4t ein in Prozent (0 - 100)
DataHintLightTransitionTime=Gebe Dauer in Betriebsuhrminuten ein f\u00fcr \u00dcbergang von 0% nach 100%.
DataHintThrottleFactor=Gebe ein Dezimalwert ein f\u00fcr das Fahrreglerverh\u00e4ltnis
LabelThrottleFactor=Fahrreglerverh\u00e4ltnis
DataHintTime=Zeit (hh:mm) eingeben in 24-Stunden-Darstellung
DataHintToMemory=Gebe Sytem- oder Nutzername der Zielspeicher ein
DataHintTrainId=Gebe eine g\u00fcltige Zug ID vom Lokpark ein - oder eine DCC Adresse, lang oder kurz bzw. 1234(L) oder 10(S)
DataHintTrainName=Gebe eine Name ein f\u00fcr den Zug
DataHintValue=Gebe zu vergleichenden Wert ein
DeleteButtonHint=Dr\u00fccke um Eingabe zo l\u00f6schen und zur\u00fcckzukehren nach Bedingung Bearbeiten
DisableAll=Alle Logixe ausschalten
ElementName=Name des Elementes
ElementNameHint=Gebe System- oder Nutzername eines Elements ein um alle Verweisungen zu suchen
EmptyConditionals=Suche nach leere Bedingungen
EnableAll=Alle Logixe aktivieren
Equal=Gleich
FastClockDescrpt={0} Bereich von {1} bis {2}
FileButtonHint = Klicke um eine Datei zu w\u00e4hlen
LabelSetFile=Datei
LabelSetTime=Setze Zeit
LabelSignalAspect=Signalmastbegriff
LabelStartTime=Startzeit
LabelEndTime=Endezeit
LabelDelayTime=Verz\u00f6gerung
LabelItemName=System-/Nutzername
LabelLightIntensity=Lichtintensit\u00e4t
LabelLiteralValue=W\u00f6rtlichwert
ExecJythonCmd=Jythonbefehl
FindOrphans=Suche nach verwaiste Objekte
FromFile=aus Datei
GreaterOrEqual=Gr\u00f6\u00dfer Als oder Gleich An
GreaterThan=Gr\u00f6\u00dfer Als
LabelActionAudio=Audio-ereignis
LabelActionDescription=Ereignisbeschreibung
LabelActionFile=W\u00e4hle
LabelActionItem=Ereignisgruppe
LabelActionLight=Lichtzustand
LabelActionLock=Verrieglungszustand
LabelActionOption=Einstellung Wechseln
LabelActionSensor=Detektorzustand
LabelActionSignal=Signalschirmbild
LabelActionText=Ereignisdaten
LabelActionTurnout=Weichenposition
LabelActionType=Ereignistyp
LabelAntecedent=Bedingungsausdruck (das 'wenn' Teil der Bedingung)
LabelAntecedentHint=Nutze runde Klammer um die Bedingung die Logik an zu passen
LabelBlockPaths=Blockpfad
LabelBlockStatus=Blockzustand
LabelBlockValue=Blockwert
LabelCompareOp=Vergleichender Operator
LabelCompareType=Vergleiche wie
LabelControlTrain=Steuerbefehl
LabelLogicType=Boolescher Operator
LabelMemoryLocation=Name der Speicher
LabelMemoryValue=Speicherwert
LabelScriptCommand=Ablaufbefehl
LabelTrainId=Zug ID oder Adresse
LabelTrainName=Zugname
LabelTransitionTime=\u00dcbergangsdauer
LabelVariableType=Variablentyp
LabelVariableState=Variablenzustand
LabelVariableAspect=Variablenaspekt
LessThan=Weniger Als
LessOrEqual=Weniger Als oder Gleich An
MemoryCompareDescrpt={0} "{1}" {2} {0} "{3}"
MemoryValueDescrpt={0} "{1}" {2} Wert "{3}"
TypeWarrantRouteOccupied=Belegt
TypeWarrantRouteFree=Unbelegt
TypeWarrantRouteAllocated=Zugewiesen
VarStateDescrpt={0} "{1}" Zustand ist {2}
LogicHelpText1=Mischen von UND's und ODER's kann doppelsinnige Ergebnisse verursachen. Die vorlaufende\n
LogicHelpText2=Anweisung wird evaluiert von Links nach Rechts, gleich die Berechnung vom\n
LogicHelpText3=innerste Variable zur linke Seite bis zur \u00e4u\u00dferste Variable zur rechte Seite.\n
LogicHelpText4=Um die Folge der Berechnung zu \u00e4ndern, kann man runde Klammer die gew\u00fcnschte Folge
LogicHelpText5=der Logik eingeben. Auch kan man die Operatoren eingeben. Die logische
LogicHelpText6=Ausdruck 'Mixed' betrifft der Inhalt des vorgehenden Feldes und nicht die\n
LogicHelpText7=Operatoren wie gezeigt in den Spalten der Variablentabelle.
NameConditionalCopy=Gebe einen neuen Namen ein f\u00fcr Kopie von Bedingung "{0}" ({1})\nin Logix {2} welche kopiert wird nach Logix "{3}" ({4}).\nDr\u00fccke Abbrechen um diese Bedingung nicht zu kopieren.
NameHintAudio=Gebe System- oder Nutzernamen ein f\u00fcr Audioquelle (z.B. IAS2)
NameHintConditional=Gebe Systemnamen ein f\u00fcr Bedingung (oder Nutzernamen wenn Teil dieses Logixes)
NameHintFromMemory=Gebe System- oder Nutzernamen ein f\u00fcr den Speicher wovon kopiert werden soll
NameHintOBlock=Gebe System- oder Nutzernamen ein f\u00fcr Besetztblock
NameHintSignalMast=Gebe System- oder Nutzernamen ein f\u00fcr Signalmast und drucke Enter/Return um die betriffende Signalbegriffe zu laden
NameHintWarrant=Gebe System- oder Nutzernamen ein f\u00fcr Fahrerlaubnis
NoActionMessage=Eine Bedingung braucht mindestens eine Zustandsvariable und enth\u00e4lt meist eine Ereignis.
onBlock=im Block
onPath=im Pfad
OnTrigger=Immer wenn angesto\u00dfen
OnTriggerToFalse=Wenn angesto\u00dfen nach Unwahr
OnTriggerToTrue=Wenn angesto\u00dfen nach Wahr
onWarrant=auf Fahrerlaubnis
OpenPickListTables=\u00d6ffne W\u00e4hllisten

ParseError1=Linkes Argument < {0} > nicht angetroffen
ParseError2=Operator < {0} > nicht angetroffen
ParseError3=Rechtes Argument < {0} > nicht angetroffen
ParseError4=Fehler beim Syntaxanalyse: ungeeignetes Zeichen < {0} > angetroffen.
ParseError5=Fehler beim Syntaxanalyse: Alle {0} Zeilen verbindlich. Zeile {1} fehlt.
ParseError6=Ausnahmefall beim Syntaxanalyse von Bedingungsausdruck\n
ParseError7=Unpaarige Klammern, es fehlt < {0} >.
ParseError8=\nWenn die vorgenannte Meldung 'String index out of range:' gleicht, das erw\u00e4hnte Zahl bedeutet die Lage im Bedingungsausdruck wo der Fehler auftrat.
ParseError9=Ungeeignetes Operator oder Zeichen < {0} >
ReferenceButton=Suche Hinweise
PromptLoadMastName=(Gebe Signalmastname ein und dr\u00fccke Enter Taste)
PromptLoadHeadName=(Gebe Signalschirmname ein und dr\u00fccke Enter Taste)
SetHintAudio=W\u00e4hle Ereignis zum ausf\u00fchren
SetHintJythonCmd=Gebe Jython Befehle ein
SignalHeadStateDescrpt={0} "{1}" Signalbild ist {2}
SignalMastSetHint=W\u00e4hle Signalbegriff und drucke Enter/Return um es ein zu lesen
SignalMastStateDescrpt={0} "{1}" Signalbegriff ist {2}
StateMemoryCompare=Speicher (Gro\u00df-/Kleinschreibung-unterscheidend)
StateMemoryCompareInsensitive=Speicher (schreibungsunabh\u00e4ngig)
StateMemoryEquals=Wert (Gro\u00df-/Kleinschreibung-unterscheidend)
StateMemoryEqualsInsensitive=Wert (schreibungsunabh\u00e4ngig)
StateRouteFree=Weichenstra\u00dfe Frei
StateRouteIsSet=Weichenstra\u00dfe gestellt
stateRouteOccupied=Weichenstra\u00dfe belegt
StateRouteReserved=Weichenstra\u00dfe zugewiesen
StateSignalHeadLit=Erleuchtet
StateSignalMastHeld=Signalmast gehalten
StateSignalMastLit=Signalmast Erleuchtet
StateTrainRunning=Zug unterwegs
TitleAntecedentPhrase=Zustandsvariablen
TitleConsequentPhrase=Folgenden Ereignis
TitleCopyLogix=Kopiere Logix
TitleEditAction=Ereignis bearbeiten
TitleEditVariable=Variable bearbeiten
TitlePickList=W\u00e4hllisten
Toggle=Abwechseln
triggerOnAny=Ereignisse ausf\u00fchren bei jeden Ansto\u00df
triggerOnChange=Ereignisse ausf\u00fchren nur bei Zustands\u00e4nderung
TypeRouteIsSet=Gestellt
TypeLogicHint=W\u00e4hle logischer Operator um Zustandsvariablen (das 'wenn' Teil) dieser Bedingung zu verbinden
TypeMemoryCompare=Speicher vergleichen mit Speicher (Gro\u00df-/Kleinschreibung-unterscheidend)
TypeMemoryCompareInsensitive=Speicher vergleichen mit Speicher (schreibungsunabh\u00e4ngig)
TypeMemoryEqualsInsensitive=Speicher vergleichen mit Wert (schreibungsunabh\u00e4ngig)
TypeSignalHeadAspectEquals=Signalbild gleicht
TypeSignalHeadFlashLunar=Signalschirm Wei\u00df Blinkend
TypeSignalHeadLunar=Signalschirm Wei\u00df
TypeSignalMastAspectEquals=Signalgebriff gleicht
TypeSignalMastHeld=Signalmast Gehalten
TypeSignalMastLit=Signalmast Erleuchtet
TypeTrainRunning=L\u00e4uft
UpdateButtonHint=Dr\u00fccke um \u00c4nderungen durch zu f\u00fchren und zu Bedingung Bearbeiten zur\u00fcckzukehren
ValueInMemory=(Speicherwert)
VariableAspectHint=W\u00e4hle Signalbegriff zum Vergleich
VariableTypeHint=W\u00e4hle Art der Zustandsvariable zum Bedingungsvergleich
VariableStateHint=W\u00e4hle Art der Zustandsvariable zum Vergleich
Warn11=\nDu darfst Bedingung "{0}" ({1}) l\u00f6schen\noder bearbeiten in dasselben Fenster wo es erstellt war.
Warn8=Bedingungen in Logix "{0}" ({1}) kann man nicht bearbeiten.\n\u00d6ffne die Detekorengruppentabelle um eine Detektorgruppe zu bearbeiten.
WarrantAbort=Unterbreche
WarrantHalt=Anhalten
WarrantResume=Wiederaufnehmen

# Messages prefs pane item
DeleteLogix=Beim L\u00f6schen von Logix
