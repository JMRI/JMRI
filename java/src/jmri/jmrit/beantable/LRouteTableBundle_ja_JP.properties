# LRouteTableBundle_ja_JP.properties
#
# Japanese properties for the jmri.jmrit.RoadTableAction GUI elements
# Translated by Sakae Akanuma <sakaeakanuma@gmail.com>

LRouteAddTitle = LRoute\u8ffd\u52a0
LRouteEditTitle = LRoute\u7de8\u96c6
Type = \u30bf\u30a4\u30d7
SetAction = \u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8
SetTrigger = \u30c8\u30ea\u30ac\u30fc\u30b9\u30c6\u30fc\u30c8

SystemNameHint = \u65b0\u898fLRoute\u306e\u30b7\u30b9\u30c6\u30e0\u540d\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044, \u4f8b\uff1aR12.
UserNameHint = \u65b0\u898fLRoute\u306e\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002 e.g. \u30af\u30ea\u30a2\u672c\u7dda.
BasicTab = \u57fa\u672cLRoute
BasicTabHint = \u3053\u306eLRoute\u306e\u540d\u79f0
Guide1 = Tab 1: Name the LRoute, select parameters from other tabs, then return here and use buttons at the bottom.
Guide2 = Tab 2: Select the devices you want to control and the actions you want them to perform.
Guide3 = Tab 3: Select the devices you want to use as triggers and their states to trigger the above Tab2 actions.
Guide4 = Tab 4: Other LRoute parameters - Alignment sensors, scripts and sound files, locks, etc.
SetLocks = \u30ed\u30c3\u30af\u3092\u6307\u5b9a
Lock = \u30c8\u30ea\u30ac\u30fc\u304c\u53cd\u5fdc\u3057\u305f\u3068\u304d\u5206\u5c90\u3092\u30ed\u30c3\u30af\u3059\u308b.

TriggerTab = \u30c8\u30ea\u30ac\u30fc/\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb(\u5165\u529b)
TriggerTabHint = \u3053\u306eLRoute\u3067\u4f7f\u7528\u3059\u308b\u30c8\u30ea\u30ac\u30fc\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002
InputTitle = \u3053\u306eLRoute\u3067\u4f7f\u7528\u3059\u308b\u5165\u529b\u30c8\u30ea\u30ac\u30fc\u306e\u72b6\u614b\u3092\u9078\u629e\u3057\u3066\u4e0b\u3055\u3044\u3002
MiscTab = Alignment/Locks/\u4ed6
MiscTabHint = Select script and sound files, alignment sensors, other parameters
MiscTitle = LRoute\u52d5\u4f5c\u3092\u8ffd\u52a0
LRouteType = Route Logix \u578b
NewRoute = \u65b0
NewRouteHint = All triggers and vetoes enabled in a single Conditional. 
OldRoute = \u65e7
OldRouteHint = Each trigger has a single Conditional with vetoes not enabled. 
ActionTab = \u30a2\u30af\u30b7\u30e7\u30f3 (\u51fa\u529b)
ActionTabHint = Select Actions to include for this LRoute
OutputTitle = Select the Output Action states to set for this LRoute

PickInput = Choose Sensors, Turnouts, Lights and/or Signals for trigger variables:
PickOutput = Choose Sensors, Turnouts, Lights and/or Signals for actions to set:
PickAlign = Enter Sensors to indicate alignment of Sensors, Turnouts, Lights and/or Signals:

Alignment = \u5272\u308a\u4ed8\u3051
AlignSensor = \u5272\u308a\u4ed8\u3051\u3089\u308c\u305f\u30bb\u30f3\u30b5\u30fc
AlignTurnout = Turnouts Aligned
AlignLight = Lights Aligned
AlignSignal = Signals Aligned
AlignAll = \u3059\u3079\u3066\u306e\u5272\u308a\u4ed8\u3051

#SetActive = \u30bb\u30f3\u30b5\u30fc\u3092\u6709\u52b9\u306b\u3059\u308b
#SetInactive = \u30bb\u30f3\u30b5\u30fc\u3092\u7121\u52b9\u306b\u3059\u308b
#SetToggle = Set to Toggle
#SetThrown = Set Turnout Thrown
#SetClosed = Set Turnout Closed
#SetLightOn = \u30e9\u30a4\u30c8\u70b9\u706f
#SetLightOff = Set Light Off
SetEnable = Enable Conditional
SetDisable = Disable Conditional
#SetLit = \u4fe1\u53f7\u6a5f\u70b9\u706f\u6307\u793a
#SetHeld = Set Signal Held
SetClear = Clear Held Signal
#SetDark = Set Signal Dark
#SetRed = \u4fe1\u53f7\u3092\u8d64\u306b
#SetFlashRed = Set Signal Red Flashing
#SetYellow = Set Signal Yellow
#SetFlashYellow = Set Signal Yellow Flashing
#SetGreen = Set Signal Green
#SetFlashGreen = Set Signal Green Flashing

#OnChange = \u5909\u5316\u6642\u306b
#OnActive = \u6709\u52b9\u6642\u306b
#OnInactive = \u7121\u52b9\u6642\u306b
#VetoActive = \u30a2\u30af\u30c6\u30a3\u30d6\u6642\u7981\u6b62
#VetoInactive = \u7121\u52b9\u6642\u7981\u6b62
#OnThrown = \u53cd\u4f4d\u6642
#OnClosed = \u5b9a\u4f4d\u6642
#VetoThrown = \u53cd\u4f4d\u6642\u7981\u6b62
#VetoClosed = \u5b9a\u4f4d\u6642\u7981\u6b62
#OnLit = \u70b9\u706f\u6642\u306b
OnUnLit = \u6d88\u706f\u6642\u306b
#VetoLit = \u70b9\u706f\u6642\u7981\u6b62
VetoUnLit = \u6d88\u706f\u6642\u7981\u6b62
#OnRed = \u8d64\u70b9\u706f\u6642
#OnFlashRed = \u8d64\u8272\u70b9\u6ec5\u6642
#OnYellow = \u9ec4\u70b9\u706f\u6642
#OnFlashYellow = \u9ec4\u8272\u70b9\u6ec5\u6642
#OnGreen = \u7dd1\u70b9\u706f\u6642
#OnFlashGreen = \u7dd1\u70b9\u6ec5\u6642
#OnDark = \u6d88\u706f\u6642
#OnHeld = \u4fdd\u6301\u6642
#VetoOnRed = \u8d64\u306e\u6642\u7981\u6b62
#VetoOnFlashRed = \u8d64\u70b9\u6ec5\u6642\u7981\u6b62
#VetoOnYellow =  \u9ec4\u8272\u6642\u7981\u6b62
#VetoOnFlashYellow = \u9ec4\u70b9\u6ec5\u6642\u7981\u6b62
#VetoOnGreen = \u7dd1\u8272\u6642\u7981\u6b62
#VetoOnFlashGreen = \u7dd1\u70b9\u6ec5\u6642\u7981\u6b62
#VetoOnDark = \u6d88\u706f\u6642\u7981\u6b62
#VetoOnHeld = \u4fdd\u6301\u6642\u7981\u6b62
#VetoOnLit = \u70b9\u706f\u6642\u7981\u6b62

createInst = \u65b0\u898fLRoute\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u5b9a\u7fa9\u3092\u5165\u529b\u3057\u3001\u300cRoute\u8ffd\u52a0\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4e0b\u3055\u3044\u3002
editInst = To edit an existing LRoute, enter system name, then click 'Edit LRoute'.
updateInst = To change this LRoute, make changes above, then click 'Update'.
cancelInst = To leave Edit mode without changing this LRoute, click 'Cancel'.
EnterNames = \u30b7\u30b9\u30c6\u30e0\u540d\u3068\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002
DuplicateUser = A Logix with this user name already exists.
DuplicateSys = A Logix with this system name already exists.
CreateHint = \u65b0\u898fLRoute using data entered above\u3092\u8ffd\u52a0
EditHint = Enter a LRoute name to edit and press
DeleteHint = Delete the LRoute by System Name
UpdateHint = Update this LRoute using the data entered above

EditDiff = \u5dee\u5206\u3092\u7de8\u96c6
TypeWarn = Action item "{0}" on Conditional "{1}" cannot be edited in LRoute.
OnChangeWarn = Action item "{0}" is triggered differently from the other actions on conditional "{1}".
TypeWarnVar = State Variable "{0}" on Conditional "{1}" cannot be edited in LRoute.
AlignWarn1 = Alignment action item "{0}" on Conditional "{1}" has an action type that cannot be edited.
AlignWarn2 = Sensors "{0}" and "{1}" on Conditional "{2}" are both used for the same Alignment.
LockWarn1 = Expected "{0}" turnouts to lock on Conditional "{1}", but it has {2} action items.
LockWarn2 = Action item "{0}" on Conditional "{1}" has an action type that cannot be edited (set Lock expected).
LockWarn3 = Turnout "{0}" on Conditional "{1}" not expected to be locked.
NoAlign = There are no outputs selected for alignment sensor {0} to indicate {1}.

addErr = \u6307\u5b9a\u306eLRoute\u306f\u5b58\u5728\u3057\u307e\u305b\u3093
noAction = No unvetoed Action items are selected. Go to 'Actions' Tab.
noVars = No Control items are selected. Go to '\u30c8\u30ea\u30ac\u30fc/\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb'\u30bf\u30d6.
