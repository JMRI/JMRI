# BeanEditBundle_da.properties
#
# Revision $Revision$
#
# Default properties for the jmri.jmrit.beantable.beanedit GUI elements

# This file is part of JMRI.
# Danish translation by Sonny Hansen
# Override some properties of the BeanEditBundel
# JMRI is free software; you can redistribute it and/or modify it under
# the terms of version 2 of the GNU General Public License as published
# by the Free Software Foundation. See the "COPYING" file for a copy
# of this license.
#
# JMRI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
Properties = Egenskaber
UseGlobal = Brug Global

UsageText = Provides an indication as to where {0} is used within your panel.

NamedBeanPropertiesTableDescription = These are custom properties (delete Name to remove entry) (DO NOT CHANGE unless you know what you're doing)
NamedBeanPropertyName = Navn
NamedBeanPropertyValue = Værdi

BlockPhysicalProperties = Physical Details
BlockUseCurrentText = Use the Current Report from the reporter as the value for the block
BlockReporterText = Set the reporter used to identify trains in the block
BlockPropertiesText = Use this tab to update the physical information about the block
BlockLengthUnits = Units
BlockLengthUnitsText = Select length measurements
BlockLengthText = Length of the block
BlockMaxSpeedText = Set the maximum speed through the block
BlockPermissiveText = Can another train enter the block when it is occupied

BlockAssignSensorText = Set the sensor that is used to determine the occupancy state of the block
SensorDebounceText = Set the Debounce timers for the sensor \n The debounce timers add a delay before the sensor change state is reported, this helps to prevent false reporting due to dirty wheels etc
SensorInActiveDebounceText = The delay in milli seconds before reporting the sensor as Inactive
SensorActiveDebounceText = The delay in milli seconds before reporting the sensor as Active
SensorDebounceUseGlobalText = Use Global Debounce Values

#
#  Used with the turnout edit
#
InvertedToolTip = When checked, the turnout command \n and status to and from the layout is inverted.

FeedbackToolTip = This panel allows you to configure up the methods of feedback used to control and determine the state of a turnout
Feedback = Feedback
FeedbackMode = Feedback Mode
FeedbackModeToolTip = Select the method of operation for a turnout
FeedbackSensor1 = Feedback Sensor 1
FeedbackSensor2 = Feedback Sensor 2
FeedbackSensorToolTip1 = Optional sensor that provides the feedback for a turnouts state
FeedbackSensorToolTip2 = Optional sensor that provides the feedback for a turnouts state
FeedbackNameSet = Feedback name
FeedbackNameSetToolTip = Set a name against the Feedback settings
FeedbackOperation = Operation
FeedbackOperationToolTip = Select how many attempts JMRI will make to set the turnout \n along with the interval between each attempt

Lock = Lock
Speed = Speed

TurnoutAutomation = Turnout Automation
TurnoutAutomationToolTip = Method used to retry the setting of the turnout

ClosedSpeed = Closed Speed
ClosedSpeedToolTip = The maximum Speed that a train is permited to run when the turnout is set closed
ThrownSpeed = Thrown Speed
ThrownSpeedToolTip = The maximum Speed that a train is permited to run when the turnout is set thrown

LockToolTip = The turnout lock feature allows you to selectively disable accessory (turnouts) commands from cabs and/or locally-wired pushbuttons.\n The lock can be set (locked) or unset (unlocked) from a checkbox in the Turnout Table, from a Route or Logix, or from scripts.
LockMode = Lock Mode
LockModeToolTip = Select lock type to be used
LockModeDecoder = Accessory Decoder
LockModeDecoderToolTip = JMRI needs to know what type of DCC decoder is in use so it can handle the lock properly.

SpeedTabToolTip = For use with Signalling, set the maximum speed permitted through the turnout.
#
#   Used with the sensor edit
#
SensorInvertedToolTip = When checked, the sensor command \n and status to and from the layout is inverted.
SensorDebounce = Sensor Debounce
