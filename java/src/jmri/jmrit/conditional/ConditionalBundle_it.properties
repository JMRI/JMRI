# conditional.ConditionalBundle_it.properties
# based on a COPY from LogixTableBundle.properties, cleaned up 201803
#
# Italian properties for the jmri.jmrit.conditional GUI elements
# Translation: Enzo Fortuna (babbo_enzo@yahoo.com )

LogixUserNameHint2 = Immettere nuovo nome Utente per Logix, es. Controllo Segnale 2
ConditionalSystemName = Nome Sistema Condizioni
ConditionalUserName = Nome Utente Condizioni
ConditionalUserNameHint = batti Nome Utente per le condizioni, es. Segnale 2 Rosso
SinglePickFrame = Single Pick List

ColumnLabelRow = Riga
ColumnLabelOperator = Ope
ColumnLabelNot = Neg
ColumnLabelDescription = Stato Variabile Descrizione
ColumnLabelTriggersCalculation = Calcolo Trigger

# logix node edit pane items
NodeEditTitle   = Active Node Edit
NodeEditText = Another node cannot be selected while editing a node. Select Cancel or Update to complete the edit.

# Select Conditional Reference
SelectLogix = Select Logix
SelectConditional = Select Conditional
SelectFirstRow = Select a Conditional...

TitleEditLogix = Modifica Logix
TitleEditConditional = Modifica Condizione
TitleEditAction = Modifica Azione
TitleEditVariable = Modifica Variabile
TitleLogicalExpression = Espressione Logica
TitleAntecedentPhrase = Variabile Antecedente
TitleConsequentPhrase = Azione Conseguente
TitleAction = Azioni

# next key both in LogixTableAction and ConditionalEdit
TitlePickList = Elenchi di Scelte

ConditionalTableTitle = Condizioni (in Ordine di calcolo)
ActionTableTitle = Azioni Conseguenti ('then')
StateVariableTableTitle = Variabili Antecedenti ('if')
triggerOnChange = Esegui Azioni solo sul cambio di stato
triggerOnAny = Esegui Azioni ogni volta che \u00e8 innescata
OnTriggerToTrue = Quando Innescata:Vero
OnTriggerToFalse = Quando Innescata:Falso
OnTrigger = Ogni volta che \u00e8 Innescata
OnChangeToTrue = Quando Cambia diventa Vero
OnChangeToFalse = Quando Cambia diventa Falso
OnChange = Quando Cambia
FromFile = Dal File,
After = , dopo
Seconds = secondi
to = a
onWarrant = Su Autorizzazione
onBlock = In Blocco
onPath = Su Percorso
ValueInMemory = (Valore Memoria)
ExecJythonCmd = Comando Jython

# Conditional TreeView
# Labels
LabelConditionalActions = Conditional:
LabelAntecedentActions = Antecedent:
LabelLogicTypeActions = Logic Type:
LabelTriggerModeActions = Trigger Mode:
LabelVariablesActions = Variables:
LabelVariableActions = Variable:
LabelActionsActions = Actions:
LabelActionActions = Action:
LabelMove = Move:
LabelAntecedentHeader = Antecedent Logic

# Nodes
NodeVariablesExpanded = Variables:
NodeVariablesCollapsed = Variables
NodeActions = Actions

# Hints
HintAddButton = Add a new item
HintEditButton = Edit the selected item
HintUpButton = Move the selected item up one row
HintDownButton = Move the selected item down one row
HintDeleteButton = Delete the selected item
HintDoneButton = Close the conditional edit and return to the Logix table
HintSaveButton = Save the add/edit changes and close
HintCancelButton = Close without saving the add/edit changes
HintHelpButton = Open a help window with detail Antecedent instructions
HintCheckButton = Update the state
HintToggleButton = Toggle the Action trigger mode

# Dialog Titles, not in use
TitleEditTypeDialog = Edit Logic Type
TitleEditConditionalDialog = Edit Conditional Name
TitleEditAntecedentDialog = Edit Antecedent Logic

# ConditionalHelpText
ConditionalHelpText1 = Mescolando AND ed OR pu\u00f2 introdurre valuazioni ambigue. La parte antececedente\n
ConditionalHelpText2 = della regola \u00e8 valutata da sinistra a destra, il che corrisponde a calcolare\n
ConditionalHelpText3 = la variabile pi\u00f9 interna a sinistra alla variabile pi\u00f9 esterna a destra.\n
ConditionalHelpText4 = Per modificare questo ordine di valutazione, inserire delle parentesi per indicare la logica
ConditionalHelpText5 = che si desidera. Si possono anche modificare gli Operatori da usare. La logica di valutazione
ConditionalHelpText6 = in modo 'Misto' \u00e8 il contenuto del campo  antecedente e non \n
ConditionalHelpText7 = gli Operatori visualizzati nelle righe della tabella della variabile di stato.

DoneButtonHint = premi per salvare le modifiche al Nome Utente e tornare alla tabella Logix
DeleteLogixButtonHint = Premi per cancellare questa Logix e tutte le sue Condizioni
NewConditionalButton = Nuova Condizione
NewConditionalButtonHint = Premi per aprire la finestra di Creazione di una nuova Condizione
CalculateButton = Calcola
CalculateButtonHint = Premi per calcolare gli Stati della Condizione senza Azione
ReorderButton = Riordina
ReorderButtonHint = Premi e poi click nella colonna a destra nell'ordine voluto
AddVariableButton = Aggiungi Variabile di Stato
AddVariableButtonHint = Premi per aggiungere una nuova Riganella Tabella Variabile di Stato
CheckVariableButton = Controlla Variabili di Stato
CheckVariableButtonHint = Premi per valutare lo stato corrente delle Variabili
UpdateConditionalButtonHint = Premi per conservare le modifiche e tornare alla Modifica Logix
CancelConditionalButtonHint = Premi per tornare alla Modifica Logix senza cambiamenti
DeleteConditionalButton = Cancella Condizione
DeleteConditionalButtonHint = Premi per Cancellare questa Condizione e tornare a Modifica Logix
addActionButton = Aggiungi Azione
addActionButtonHint = Premi per aggiungere una nuova Riga alla  Tabella Azioni
UpdateButtonHint = Premi per mantenere le modifiche e tornare alla Modifica Condizione
CancelButtonHint = Premi per tornare a Modifica Condizione senza cambiamenti
DeleteButtonHint = Premi per cancellare e tornare a Modifica  Condizione

NameHintTurnout = Batti il Nome dello Scambio (sistema o utente) (es. LT12)
NameHintSensor = Batti il Nome del Sensore (sistema o utente) (es. CS2)
NameHintSignal = Batti il Nome della vela del Segnale (sistema o utente) (es. IH34)
NameHintSignalMast = Batti il Nome del Segnale (sistema o utente) e batti Enter/Return per caricare gli Aspetti
NameHintLight = Batti il Nome delle Luci (sistema o utente) (es. CL21)
NameHintRoute = Batti il Nome del Percorso (sistema o utente)
NameHintWarrant = Batti il Nome Autorizzazione (sistema o utente)
NameHintMemory = Batti il Nome Memoria (sistema o utente)
NameHintLogix = Batti il Nome Logix (sistema o utente)
NameHintOBlock = Batti il Nome Blocco Occupazione (sistema o utente)
CompareHintMemory = Seleziona un operatore per paragonare i valori in memoria
CompareTypeHint = Seleziona un valore letterale o il valore in una locazione di memoria
NameHintConditional = Batti il Nome di Sistema per la Condizione(o Nome Utente se in questa Logix)
TurnoutSetHint = Seleziona Chiuso o Deviato a seconda della posizione voluta dello Scambio
SensorSetHint = Seleziona Attivo o Non Attivo a seconda di come Sensore deve essere impostato
LightSetHint = Seleziona On o Off a seconda di come impostare le Luci
SignalSetHint = Seleziona l'aspetto della Vela Segnale da impostare
SignalMastSetHint = Seleziona l'aspetto del segnale da impostare e batti Enter/Return per caricare l'Aspetto
OBlockStatusHint = Seleziona uno Stato Blocco Occupazione per il Test
LockSetHint = Seleziona Blocco o Sblocco
DataHintDelayedSensor = Batti il Tempo (in secondi) di attesa prima prima di impostare il Sensore
DataHintDelayedTurnout = Batti il Tempo (in secondi) to wait prima prima di impostare lo Scambio
DataHintMemory = Batti Memoria il cui valore viene confrontato
DataHintValue = Batti Valore da confrontare
DataHintSound = Batti nome del file sonoro da eseguire
DataHintScript = Batti nome dello script da eseguire
SetHintSound = Fare clic su per una finestra di selezione file per la scelta di un file audio
SetHintScript = Fare clic per una finestra di selezione file per scegliere un file di script
DataHintTime = Inserire l'ora (oo: mm) per 24 ore
NameHintFromMemory = Inserire il nome (di sistema o utente) di memoria da cui copiare
DataHintToMemory = Inserire il nome (di sistema o utente) di memoria per ricevere il valore copiato
DataHintLightIntensity = Inserisci percentuale di intensit\u00e0 come un numero intero 0-100.
DataHintLightTransitionTime = Immettere il numero di minuti di orologio Accellerato per la transizione tra 0% e 100%.
VariableTypeHint = Selezionare il tipo di variabile di stato per la condizione da verificare
VariableOperHint = Select AND or OR for the operator, default is AND
VariableNotHint = Check to indicate that this variable is to be negated, default is unchecked
VariableTriggerHint = Check to indicate that this variable is used to trigger actions, default is checked
VariableStateHint = Selezionare lo stato della variabile da testare
VariableLogixHint = Select the Logix that contains the conditional to be checked
VariableConditionalHint = Select the desired conditional
VariableAspectHint = Selezionare l'aspetto del segnale da verificare
ActionItemHint = Selezionare la voce di azione per l'esecuzione condizionale
ActionOptionHint = Selezionare quando l'azione deve avvenire
SetHintAudio = Selezionare l'azione da eseguire
NameHintAudio = Immettere il nome (di sistema o utente) per la sorgente audio (es. IAS2)
SetHintJythonCmd = Inserisci il testo del comando Jython
DataHintTrainId = Immettere un ID treno dal Roster - o inserire un indirizzo DCC indicando lungo o corto es. 1234(L) o 10(S)
DataHintTrainName = Immettere un nome per il treno
DataHintBlockValue = Immettere un valore da assegnare al Blocco
DataHintThrottleFactor = Inserisci un numero decimale per il rapporto di impostazione del Throttle.
BlockPathsSetHint = Seleziona il Percorso da usare

PromptLoadMastName = (Digitare il nome del Segnale e premere Invio)
PromptLoadHeadName = (Digitare il nome del Segnale e premere Invio)

# ConditionalEdit Reorder Table Buttons
ButtonFirst = Primo
ButtonNext = Prossimo
ReorderMessage = Si prega di premere prima, quindi Avanti, Avanti, ... nell'ordine desiderato.
ButtonMove = Sposta
ConfirmIndirectReference = Premere il tasto "{1}" se in fase di esecuzione la  posizione di memoria  "{0}" conterr\u00e0 un nome valido per questa azione.\nPremere il tasto "{2}" se si desidera inserire il nome della voce direttamente.\nPremere il tasto "{3}" se si desidera eliminare questo avviso.\n

# Variable State combo box states
TurnoutUnlock = Sbloccato
TurnoutLock = Bloccato
LightOn = On
LightOff = Off
StateMemoryEquals = (maiuscole e minuscole valide) Valore
StateMemoryEqualsInsensitive = (maiuscole e minuscole non valide) Valore
StateMemoryCompare = (maiuscole e minuscole valide) Memoria
StateMemoryCompareInsensitive = (maiuscole e minuscole non valide) Memoria

# Variable State combo box states used in jmri.implementation.DefaultConditionalAction
# here for ConditionalVariable via rbx:
StateSignalMastLit = Stante Segnale Acceso
StateSignalMastHeld = Stante Segnale Bloccato
StateRouteFree = Percorso Libero
stateRouteOccupied = Percorso Occupato
StateRouteReserved = Percorso Allocato
StateRouteIsSet = Percorso Impostato
StateTrainRunning = Treno in Viaggio

# Display Description of state variable 
TypeSensorActive = Sensore Attivo
TypeSensorInactive = Sensore Non Attivo
TypeTurnoutThrown = Scambio Deviato
TypeTurnoutClosed = Scambio Corretto tracciato
TypeConditionalTrue = Condizione Vera
TypeConditionalFalse = Condizione Falsa
TypeLightOn = Luce On
TypeLightOff = Luce Off
TypeMemoryEquals = Confronta Memoria con Valore (Maiuscolo e minuscolo Valgono)
TypeMemoryEqualsInsensitive = Confronta Memoria con Valore (Maiuscolo e minuscolo Non Valgono)
TypeMemoryCompare = Confronta Memoria con Memoria (Maiuscolo e minuscolo Valgono)
TypeMemoryCompareInsensitive = Confronta Memoria con Memoria (Maiuscolo e minuscolo Non Valgono)
TypeFastClockRange = Intervalo Orologio Accellerato
# head test type strings picked up from jmri.NamedBeanBundle
#TypeSignalHeadRed = Vela Segnale Rosso
#TypeSignalHeadYellow = Vela Segnale Giallo
#TypeSignalHeadGreen = Vela Segnale Verde
#TypeSignalHeadDark = Vela Segnale Spento
#TypeSignalHeadFlashRed = Vela Segnale Rosso Lampeggiante
#TypeSignalHeadFlashYellow = Vela Segnale Giallo Lampeggiante
#TypeSignalHeadFlashGreen = Vela Segnale Verde Lampeggiante
#TypeSignalHeadLit = Vela Segnale Acceso
#TypeSignalHeadHeld = Vela Segnale Bloccata
#TypeSignalHeadLunar = Vela Segnale Bianco
#TypeSignalHeadFlashLunar = Vela Segnale Bianco Lampeggiante
TypeWarrantRouteFree = Libero
TypeWarrantRouteOccupied = Occupato
TypeWarrantRouteAllocated = Allocato
TypeRouteIsSet = Imposta
TypeTrainRunning = In Marcia
TypeSignalMastAspectEquals = Stante Segnale Aspetto Uguale
TypeSignalHeadAspectEquals = Vela Segnale Apparenza Uguale
#TypeSignalMastLit = Stante Segnale Acceso
#TypeSignalMastHeld = Stante Segnale Bloccato
TypeEntryExitActive = Attivo
TypeEntryExitInactive = Non Attivo

VariableOKMessage = Tutte le Variabili di Stato sono OK.
VariableErrorMessage = Trovato errore, correggi e riprova.
ActionOKMessage = Tutte le Azioni sono OK.
NoActionMessage = Una condizione richiede almeno una Variabile di Stato e di solito ha almeno un'Azione

FileButtonHint = Click to select a file from disk
LabelLogicType = Operatore Logico:
TypeLogicHint = Scegli operatore logico per unire le variabili di stato per l'antecedente ('if') della condizione
LabelAntecedent = Espressione Antecedente (parte 'if' della  Condizione)
LabelAntecedentHint = Inserisci parentesi in modo che la regola soddisfi la logica desiderata
LabelTrainId = ID Treno o Indirizzo
LabelTrainName = Nome Treno
LabelThrottleFactor = Fattore di regolazione del Palmare
LabelBlockValue = Valore Blocco
LabelActionItem = Gruppo di Azioni
LabelActionType = Tipo di Azioni
LabelVariableType = tipo Variabile
LabelVariableState = Stato Variabile
LabelVariableAspect = Aspetto Variabile
LabelLiteralValue = Valore letterale
LabelMemoryValue = Valore memoria
LabelStartTime = Orario Inizio
LabelEndTime = Orario Fine
LabelCompareOp = Operatore di Confronto
LabelCompareType = Confronta come
LabelActionOption = Cambia Opzione
LabelItemName = Nome Sistema / Utente
LabelActionTurnout = Posizione Scambio
LabelActionSensor = Stato Sensore
LabelActionLight = Stato Luce
LabelActionSignal = Apparenza Vela Segnale
LabelSignalAspect = Aspetto Stante Segnale
LabelActionLock = Stato serratura
LabelActionFile = Imposta
LabelActionText = Dati Azione
LabelActionDescription = Descrizione Azione
LabelActionAudio = Azione Audio
LabelDelayTime = Tempo Ritardo
LabelSetTime = Imposta Tempo
LabelSetFile = Nome File
LabelScriptCommand = Comando Script
LabelLightIntensity = Intensit\u00e0 Luce
LabelTransitionTime = Tempo Transizione
LabelMemoryLocation = Nome Memoria
LabelValue = Valore
LabelBlockPaths = Percorso Blocco
LabelBlockStatus = Stato Blocco
LabelControlTrain = Comando Controllo

# for DefaultConditional (via rbx.getString)
ActionNone = Nessuno
ActionSetTurnout = Imposta Scambio
ActionSetSignal = Imposta Apparenza Vela Segnale
ActionSetSignalHeld = Imposta Vela Segnale Bloccata
ActionClearSignalHeld = Annulla Vela Segnale Bloccata
ActionSetSignalDark = Imposta Vela Segnale Buio
ActionSetSignalLit = Imposta Vela Segnale Accesa
ActionTriggerRoute = Percorso Trigger
ActionSetSensor = Imposta Sensore
ActionDelayedSensor = Imposta Sensore ritardato
ActionResetDelayedSensor = Reset Sensore ritardato
ActionCancelSensorTimers = Annulla Timers per Sensore
ActionDelayedTurnout = Imposta Scambio ritardato
ActionResetDelayedTurnout = Reset Scambio ritardato
ActionCancelTurnoutTimers = Annulla Timers per Scambio
ActionSetLight = Imposta Luci
ActionSetLightIntensity = Imposta Intensit\u00e0 Luci
ActionSetLightTransitionTime = Imposta Tempo Transizione Luci
ActionSetMemory = Imposta Memoria
ActionCopyMemory = Copia Memoria a Memoria
ActionEnableLogix = Abilita Logix
ActionDisableLogix = Disabilita Logix
ActionPlaySound = Esegui File Sonoro
ActionRunScript = Esegui Script
ActionTurnoutLock = Blocca Scambio
ActionSetFastClockTime = Imposta Ora Orologio Accellerato
ActionStartFastClock = Start Orologio Accellerato
ActionStopFastClock = Stop Orologio Accellerato
ActionAllocateWarrant = Alloca Ordine Percorso
ActionDeallocateWarrant = Rilascia Ordine
ActionSetWarrantTurnouts = Imposta Scambi percorso
ActionAutoRunWarrant = Comanda Treni in Automatico
ActionManualRunWarrant = Comanda Treni in Manuale
ActionControlTrain = Controlla Treno in Automatico
ActionSetTrainId = Imposta ID Treno
ActionSetTrainName = Imposta Nome Treno
ActionSetSignalMastAspect = Imposta Aspetto Stante Segnale
ActionSetThrottleFactor = Imposta coefficiente Throttle
ActionSetSignalMastHeld = Imposta Palo Segnale Bloccato
ActionClearSignalMastHeld = Cancella Palo Segnale Bloccato
ActionSetSignalMastDark = Imposta Stante Segnale Buio
ActionClearSignalMastDark = Cancella Stante Segnale Buio
ActionSetBlockValue     = Imposta Valore Blocco
ActionSetBlockError     = Imposta errore Blocco
ActionClearBlockError   = Azzera Errori Blocco
ActionDeallocateBlock = Rilascia Blocco
ActionSetBlockOutOfService = Imposta Fuori servizio Blocco
ActionBlockInService = Azzera Fuori servizio Blocco
ActionTypeHint = Seleziona tipo di azione, o seleziona Nessuna se non \u00e8 necessaria nessuna azione.
ActionControlAudio = Controllo Oggetto Audio
ActionJythonCommand = Esegui Comando Jython

AudioSourcePlay = Suona
AudioSourceStop = Stop
AudioSourcePlayToggle = Alterna Suona
AudioSourcePause = Pausa
AudioSourceResume = Riprendi
AudioSourcePauseToggle = Alterna Pausa
AudioSourceRewind = Riavvolgi
AudioSourceFadeIn = Dissolvenza-ingresso
AudioSourceFadeOut = Dissolvenza-uscita
AudioResetPosition = Reset Posizione

WarrantHalt = Ferma
WarrantResume = Riprendi
WarrantAbort = Interrompi
OBlockStatus = Stato Blocco Occupazione
Other = Altri
EntryExit = Ingresso-Uscita

# for jmri.ConditionalVariable via rbx
VarStateDescrpt = {0} "{1}" stato \u00e8 {2}
SignalHeadStateDescrpt = {0} "{1}" apparenza \u00e8 {2}
SignalMastStateDescrpt = {0} "{1}" aspetto \u00e8 {2}
MemoryValueDescrpt = {0} "{1}" {2} valore "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} intervallo da {1} a {2}

LessThan = Minore di
LessOrEqual = Minore di o Uguale
Equal = Uguale
GreaterOrEqual = Maggiore di o Uguale
GreaterThan = Maggiore di

# Conditional(Variable) error strings
Error6 = Nuovo nome utente \u00e8 gi\u00e0 in uso. Impossibile aggiornare questa Logix.\nSi prega di modificare il nome utente e riprovare
Error4 = Verificato il seguente errore quando si attiva questa Logix.\n
Error7 = \nSi prega di correggere il riferimento o eliminare  la Condizione o la Logix errata.
Error9 = Inserire un numero intero (solo cifre) o una variabile di memoria che contiene \nun numero intero per il numero di secondi di  {0}.
Error10 = Nuovo nome utente \u00e8 gi\u00e0 in uso. Impossibile aggiornare la condizione. \nPer favore cambia nome utente e riprova.
Error11 = Condizione "{0}" ({1}) \u00e8 una Condizione Variabile nella Condizione ,\n"{2}" ({3}), della Logix, "{4}" ({5}).\nRimuovere prima questa Variabile.
Error21 = "{1}" non \u00e8 un aspetto valido per la Vela del segnale "{0}".
Error22 = Il Nome "{0}" non corrisponde un "{1}" esistente .\nSi prega di correggere o crearne uno come richiesto, e riprovare.
Error23 = Impostare l'azione ritardata del sensore
Error24 = La Variabile Memoria "{0}" al momento non contiene un valore intero. \nL'azione non pu\u00f2 essere eseguita fino a quando questo valore non viene corretto!
Error26 = Orario errato "{0}"\nOrario deve essere immesso in oo: mm(es. 01:30, 16:00)\nper formato 24 ore. Si prega di ribattere nel formato corretto e riprovare.
Error27 = Ripristina azione ritardata del Sensore
Error29 = Imposta tempo di transizione Luce
Error30 = Errore Nome utente duplicato . Nome utente inserito \u00e8 gi\u00e0 in uso da Condizione "{0}".\nTi preghiamo di inserire un nome utente diverso da altri in questa tabella.
Error34 = Non \u00e8 possibile modificare due Conditioni allo stesso tempo. Si prega di completare modifica Conditione "{0}" e riprovare.
Error35 = Modifica Condizione in corso. Si prega di completare modifica condizione "{0}" e riprovare.
Error38 = {0} \u00e8 una quantit\u00e0 irragionevole di {1}\nSi prega di inserire un numero positivo di secondi minore di 1 ora, e riprovare.
Error39 = Imposta Azione Ritardata Scambio
Error40 = Luce - {0} - non supporta tempo di transizione.\nInserisci una luce con il tempo di transizione o modifica tipo di azione, e riprova.
Error41 = Reset Azione Ritardata Scambio
Error42 = Impostare l'azioneper l'intensit\u00e0 della Luce
Error43 = Inserire un numero intero (solo cifre) o una variabile di memoria che contiene \nun numero intero per impostare l'intensit\u00e0 .
Error45 = Luce - {0} - non ha intensit\u00e0 variabile. \nInserisci una luce con intensit\u00e0 variabile o modifica tipo di azione,e riprova.
Error46 = Per riordinare le azioni sono necessarie almeno due azioni .
Error47 = Modifica della variabile di stato in corso. Prega di completare e riprovare.
Error48 = Modifica di azione in corso. Si prega di completare modifica e riprovare.
Error49 = L'Inicialitzador de L'Itinerari anterior no es pot editar (Possono essere modificate le azioni)
Error50 = Variable and/or Action edits in progress.\nPlease complete edits and try again.
Error51 = At least two Variables are needed to reorder Variables.
ErrorAppearance = Selezionare un aspetto. \u00c8 necessario premere Invio/Return\ndopo aver inserito il nome con il cursore nel campo del nome.
ErrorAspect = Selezionare un aspetto. Potrebbe essere necessario premere Invio / Return \ncon il cursore nel campo del nome.
ErrorVariableType = Selezionare un tipo di variabile o Premi [Annulla].
ErrorVariableState = Selezionare uno Stato per questa variabile.

# parse errors (for DefaultConditional via rbx.getString)
ParseError1 = Impossibile trovare argomento previsto a sinistra < {0} >
ParseError2 = Impossibile trovare il l'operatore previsto. < {0} >
ParseError3 = Impossibile trovare argomento di destra previsto. < {0} >
ParseError4 = Errore di analisi Antecedente: carattere inatteso: < {0} >
ParseError5 = Errore di analisi Antecedente: tutte le {0} righe devono essere utilizzate. Riga {1} mancante.
ParseError6 = Eccezione generata durante l'analisi antecedente\n
ParseError7 = Parentesi non pari, manca< {0} >.
ParseError8 = \nSe il messaggio di cui sopra \u00e8 'indice Stringa fuori intervallo:', il numero che segue \u00e8 la posizione nel antecedente in cui l'errore si \u00e8 verificato.
ParseError9 = Operatore o carattere non ammesso < {0} >

ButtonDisabled = Continua Disabilitato
ButtonEnabled = Continua Abilitato
Warn1 = L'ultima condizione \u00e8 stata cancellata da questa Logix.
Warn2 = Una Logix deve avere almeno una condizione per fare qualcosa di utile.
Warn3 = L'ultima variabile di stato\u00e8 stata eliminata da questa condizione. \nUna condizione deve avere almeno una Variabile di Stato per fare qualcosa di utile.
Warn5 = La Condizione {0} ({1}) Non ha Variabili di Stato.\nUna condizione deve avere almeno una Variabile di Stato per fare qualcosa di utile
Warn6 = Un'azione di memoria non pu\u00f2 essere riferita indirettamente attraverso una posizione di memoria.
Warn8 = Conditioni nella Logix "{0}" ({1}) non possono essere modificate.\nVai alla tabella Gruppo sensore per modificare i gruppi di sensori
Warn9 = Esistono Condizioni che potrebbero causare un loop logico. \n le seguenti  innescano questa Logix ma sono anche cambiate da questa:\n
Warn10 = \u00e8 stato disabilitato come richiesto.\nRicordati di abilitarlo pi\u00f9 tardi.
Warn11 = \n\u00e8 possibile eliminare Condizione "{0}" ({1})\no modificarla dalla finestra in cui \u00e8 stata creata.
Warn12 = Complete other Variable edits before deleting a Variable.
Warn13 = Complete other Action edits before deleting an Action.
Warn14 = Complete other Action edits before re-ordering the Action rows.
Warn15 = The View mode cannot be changed while there is an active edit.
makeSelection = Si prega di selezionare un tipo di azione.
