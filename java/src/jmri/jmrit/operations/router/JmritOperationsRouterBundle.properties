# JmritOperationsRouterBundle.properties
#
# Default properties for the jmri.jmrit.operations.router

RouterCanNotDeliverCar  = Can''t use {4} ({1}, {2}) for ({0}) due to {3}
RouterNoTracks          = Could not find a track at ({0}) able to service car ({1})
RouterTrainCanNotDueTo  = Train ({0}) can''t transport car ({1}) to ({2}, {3}) due to {4}
RouterIgnoreAlternate   = Car ({0}) is at final destination ({1}) alternate track and yard options are ignored
RouterSpurFull          = Track ({0}) full, searching for a yard at destination ({1})
TrainDoesNotServiceCar  = Train ({0}) can''t transport car ({1}) directly to ({2}, {3})
RouterSendCarToAlternative  = Delivering car ({0}) to alternate track ({1}) at destination ({2})
RouterNotSendCarToAlternative = Train ({0}) can not deliver car ({1}) to alternate track ({2}) at destination ({3})
RouterAlternateFailed   = Alternate track ({0}) isn''t available due to {1}
RouterAtAlternate       = Hold car ({0}) at alternate track ({1}) final destination ({2}, {3})
RouterSendCarToYard     = Sending car ({0}) to yard ({1}) at destination ({2})
RouterCanNotUseYard     = Can''t use yard ({0}) due to {1}
RouterNoYardTracks      = Could not find a yard at ({0}) for car ({1})
#RouterCarSingleTrain   = Train ({0}) can transport car ({1}) to ({2}, {3})
RouterCouldNotFind      = Could not find an interim C/I or yard track that can service car to destination ({0})
RouterCouldNotFindStaging = Could not find an interim C/I, yard, or staging track that can service car to destination ({0})
RouterCouldNotFindLoc   = Could not find an interim C/I or yard track that can service car from location ({0})
RouterCouldNotFindTrain = Could not find a train (single local move) to transport car directly from ({0}, {1}) to ({2}, {3})
RouterOptionToCarry     = Option to service all cars with a final destination enabled, ignoring train ({0}) ability to service car ({1}) to ({2}, {3})
RouterNotAble           = not able to route car
RouterDisabled          = router is disabled
RouterCarAtDestination  = car is at destination
RouterTrain             = Train
RouterDestination       = destination
RouterTrainCanNotStaging = Train ({0}) can''t transport car ({1}) out of staging ({2}) directly to ({3}, {4})
#RouterNoTrains         = couldn't find a train
RouterAttemptStaging    = Try to find a route for car ({0}) through staging
RouterThreeTrains       = Routing using three trains destination ({0}) begins
RouterFourTrains        = Routing using four trains destination ({0}) begins
RouterFiveTrains        = Routing using five trains destination ({0}) begins
RouterRoute2ForCar      = Route for car ({0}): ({1}, {2})->({3}, {4})->({5}, {6})
RouterRoute3ForCar      = Route for car ({0}): ({1}, {2})->({3}, {4})->({5}, {6})->({7}, {8})
RouterRoute4ForCar      = Route for car ({0}): ({1}, {2})->({3}, {4})->({5}, {6})->({7}, {8})->({9}, {10})
RouterRoute5ForCar      = Route for car ({0}): ({1}, {2})->({3}, {4})->({5}, {6})->({7}, {8})->({9}, {10})->({11}, {12})

RouterRoute1TrainsForCar = Route for car ({0}): ({1}, {2})->({3})->({4}, {5})
RouterRoute2TrainsForCar = Route for car ({0}): ({1}, {2})->({3})->({4}, {5})->({6})->({7}, {8})
RouterRoute3TrainsForCar = Route for car ({0}): ({1}, {2})->({3})->({4}, {5})->({6})->({7}, {8})->({9})->({10}, {11})
RouterRoute4TrainsForCar = Route for car ({0}): ({1}, {2})->({3})->({4}, {5})->({6})->({7}, {8})->({9})->({10}, {11})->({12})->({13}, {14})
RouterRoute5TrainsForCar = Route for car ({0}): ({1}, {2})->({3})->({4}, {5})->({6})->({7}, {8})->({9})->({10}, {11})->({12})->({13}, {14})->({15})->({16}, {17})

# Detail level messages
RouterFindTrack         = Router find {0} track for car ({1}) final destination ({2}, {3})
RouterFoundTrack        = Router found {0} track ({1}, {2}) for car ({3})
RouterNotFindTrain      = Router could not find a train to transport car from {0} ({1}, {2}) to ({3}, {4})
RouterTrainCanTransport = Train ({0}) can transport car ({1}) from {2} ({3}, {4}) to ({5}, {6})
RouterTrainCanNot       = Train ({0}) can''t transport car ({1}) from ({2}, {3}) to ({4}, {5})
RouterBeginTwoTrain     = Router could not find a train able to transport car ({0}) directly from ({1}) to ({2}) begin two train routing
RouterTrainCanService   = Train ({0}) can service car ({1}) from ({2}, {3}) to {4} ({5}, {6})
RouterTrainIntoStaging	= Train ({0}) terminates into staging using track ({1}, {2})
