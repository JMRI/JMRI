# jmri.jmrit.logixng.LogixNGBundle.properties
#
# Default properties for the jmri.jmrit.logixng.LogixNGBundle

# Boolean values
True            = True
False           = False

# Local variables and global variables
VariableNameIsNotValid      = <html>          \
The name of variable "{0}" is not valid.<br>  \
It must be a valid LogixNG identifier.        \
</html>

# Table exceptions
Table_RowNotFound       = Row "{0}" is not found
Table_ColumnNotFound    = Column "{0}" is not found

BeanNameLogixNG                  = LogixNG
BeanNameLogixNGs                 = LogixNGs
BeanNameConditionalNG            = ConditionalNG
BeanNameConditionalNGs           = ConditionalNGs
BeanNameAnalogExpression         = Analog expression
BeanNameAnalogExpressions        = Analog expressions
BeanNameAnalogAction             = Analog action
BeanNameAnalogActions            = Analog actions
BeanNameDigitalExpression        = Digital expression
BeanNameDigitalExpressions       = Digital expressions
BeanNameDigitalAction            = Digital action
BeanNameDigitalActions           = Digital actions
BeanNameDigitalBooleanAction     = Digital boolean action
BeanNameDigitalBooleanActions    = Digital boolean actions
BeanNameStringExpression         = String expression
BeanNameStringExpressions        = String expressions
BeanNameStringAction             = String action
BeanNameStringActions            = String actions
BeanNameGlobalVariable           = Global Variable
BeanNameGlobalVariables          = Global Variables

CategoryItem            = Item
CategoryCommon          = Common
CategoryOther           = Other
CategoryExtravaganza    = Extravaganza

FemaleSocketOperation_Remove        = Remove socket
FemaleSocketOperation_InsertBefore  = Insert new socket before
FemaleSocketOperation_InsertAfter   = Insert new socket after
FemaleSocketOperation_MoveUp        = Move socket up
FemaleSocketOperation_MoveDown      = Move socket down

SocketTypeDigital       = Digital
SocketTypeAnalog        = Analog
SocketTypeString        = String
SocketTypeGeneric       = Generic

IsIsNotEnum_Is          = is
IsIsNotEnum_IsNot       = is not

# The item below is only to test the Bundle class
TestBundle              = Test Bundle {1} {0} {2}


InitialValueType_None           = None
InitialValueType_Integer        = Integer
InitialValueType_FloatingNumber = Floating number
InitialValueType_String         = String
InitialValueType_Array          = Array
InitialValueType_Map            = Map
InitialValueType_LocalVariable  = Local variable
InitialValueType_Memory         = Memory
InitialValueType_Reference      = Reference
InitialValueType_Formula        = Formula
InitialValueType_ScriptExpression   = Script expression
InitialValueType_ScriptFile         = Script file
InitialValueType_LogixNGTable       = LogixNG Table

ReturnValueType_None            = None
ReturnValueType_LocalVariable   = Local variable
ReturnValueType_Memory          = Memory

InvalidSocketName               = Socket name {0} is not valid

PrintLocalVariable  = Local variable "{0}", init to {1} "{2}"

NamedBeanAddressing_Direct          = Direct
NamedBeanAddressing_Reference       = Reference
NamedBeanAddressing_Memory          = Memory
NamedBeanAddressing_LocalVariable   = Local variable
NamedBeanAddressing_Formula         = Formula
NamedBeanAddressing_Table           = Table

ErrorHandling_Default               = Use default
ErrorHandling_ShowDialogBox         = Show dialog box
ErrorHandling_LogError              = Log error
ErrorHandling_LogErrorOnce          = Log error once
ErrorHandling_ThrowException        = Throw exception
ErrorHandling_AbortExecution        = Abort execution

TableRowOrColumn_Row                = Row
TableRowOrColumn_Row_lowercase      = row
TableRowOrColumn_Column             = Column
TableRowOrColumn_Column_lowercase   = column

BeanNotSelected                 = ''

AddressByDirect                 = {0}
AddressByReference              = by reference "{0}"
AddressByMemory                 = by memory "{0}"
AddressByLocalVariable          = by local variable "{0}"
AddressByFormula                = by formula "{0}"
AddressByTable                  = by table {0}, row {1}, column {2}
