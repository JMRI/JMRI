# LogixNGSwingBundle.properties
#
# Default properties for the jmri.jmrit.logixng.tools.swing.LogixNGSwingBundle

MenuLogixNG                 = LogixNG
MenuLogixNGEditor           = LogixNG Editor
MenuStartLogixNG            = Start LogixNG
MenuStopLogixNG             = Stop LogixNG
MenuLogixNGInitializationTable  = LogixNG Initialization table
MenuImportLogix             = Import Logix
MenuOpenClipboard           = Open clipboard
MenuInlineLogixNGs          = Inline LogixNGs

ButtonMoveUp                = Move up
ButtonMoveDown              = Move down

# Reorder Table Buttons
ButtonFirst = First
ButtonNext = Next
ReorderMessage = Please press First, then Next, Next, ... in desired order.

TitleError                  = Error
// TitleStartupSettingsPanel   = Startup
TitlePluginClassesPanel     = Plugin Classes
TitleImportLogix            = Import Logix
TitleClipboardEditor        = Clipboard
TitleComment                = Comment
TitleInlineLogixNGs         = Inline LogixNGs

LabelStartLogixNGOnLoad     = Start LogixNGs on load
LabelInstallDebugger        = Install debugger
LabelLogAllBefore           = Log all before
LabelLogAllAfter            = Log all after
LabelShowSystemUserNames    = Show system names and user names
LabelTreeEditorHighlightRow = Highlight row in ConditionalNG editor
LabelStrictTypingGlobalVariables = Use strict typing of global variables
LabelStrictTypingLocalVariables  = Use strict typing of local variables
LabelShowSystemNameInException = Show system names in exceptions
LabelDefaultErrorHandling   = Default error handling:
LabelDefaultIfThenElseExecution = If Then Else - Default execution:

ToolTipStartLogixNGOnLoad   = Should LogixNG start when the panels are loaded?
ToolTipLabelInstallDebugger = Install the debugger?
ToolTipLabelLogAllBefore    = Log before every action is executed or expression is evaluated?
ToolTipLabelLogAllAfter     = Log after every action is executed or expression is evaluated?
ToolTipLabeShowSystemUserNames  = Should system names and user names be visible for actions and expressions?
ToolTipTreeEditorHighlightRow = Should highlight row in ConditionalNG editor?
ToolTipStrictTypingGlobalVariables = If set, a global variable cannot change it's type during execution
ToolTipStrictTypingLocalVariables  = If set, a lobal variable cannot change it's type during execution
ToolTipShowSystemNameInException = Should system names be shown in exceptions?

LabelButtonAddJarFile       = Add JAR File
LabelButtonRemoveJarFile    = Remove JAR File

LabelButtonAddExpressionPlugin      = Add Expression
LabelButtonRemoveExpressionPlugin   = Remove Expression
LabelButtonAddActionPlugin          = Add Action
LabelButtonRemoveActionPlugin       = Remove Action

AddLogixNGDialogTitle       = Add LogixNG
AddConditionalNGDialogTitle = Add ConditionalNG

RenameSocketDialogTitle             = Rename socket {0}
AddMaleSocketDialogTitle            = Add {0}
AddMaleSocketDialogTitleWithType    = Add {0} - {1}
EditMaleSocketDialogTitle           = Edit {0}
EditMaleSocketDialogTitleWithType   = Edit {0} - {1}
EditLocalVariablesDialogTitle       = Edit local variables for {0}
EditCommentDialogTitle              = Edit comment

CloseWindow                 = Close window

AddMessage1                 = Please enter system name and user name, then
AddMessage2                 = click [Create].

TitleEditLogixNG            = Edit LogixNG {0}
TitleEditLogixNG2           = Edit LogixNG {0} - {1}
TitleEditConditionalNG      = Edit ConditionalNG {0}
TitleEditConditionalNG2     = Edit ConditionalNG {0} - {1}
TitleEditModule             = Edit Module {0}
TitleEditModule2            = Edit Module {0} - {1}
TitleDebugConditionalNG     = Debug ConditionalNG {0}
TitleDebugConditionalNG2    = Debug ConditionalNG {0} - {1}
TitleDebugConditionalNG_Module      = Debug ConditionalNG {0} - Current Module {1}
TitleDebugConditionalNG2_Module     = Debug ConditionalNG {0} - {1} - Current Module {2}
TitleDebugConditionalNG_Module2     = Debug ConditionalNG {0} - Current Module {1} - {2}
TitleDebugConditionalNG2_Module2    = Debug ConditionalNG {0} - {1} - Current Module {2} - {3}

SocketName                  = Socket name
Category                    = Category
Type                        = Type
CategoryNamesHint           = Select the category
TypeNamesHint               = Select the type of item
LabelAutoSysName            = Automatically generate System Name
SystemName                  = System name
UserName                    = User name
Comment                     = Comment
LogixNGSystemNameHint       = Enter system name, e.g. IQ45
SystemNameHint              = Enter system name, e.g. {0}
UserNameHint                = Enter user name, e.g. Signal 2 Control
CommentHint                 = Enter a comment

CreateButtonHint            = Press to create
EditButtonHint              = Press to save

Import_WhichLogix           = Which Logixs to import?
Import_WhichLogix_All       = Import all Logixs
Import_WhichLogix_AllActive = Import all active Logixs (not supported yet)
Import_WhichLogix_Selected  = Import selected Logixs (not supported yet)
Import_WhatToDo             = What to do with the Logixs after the import?
Import_WhatToDo_Nothing     = Nothing
Import_WhatToDo_Disable     = Disable the Logixs (not supported yet)
Import_WhatToDo_Delete      = Delete the Logixs - Warning! (not supported yet)
Import_IncludeSystemLogixs  = Import system Logixs also?
Import_SelectLogix          = Select which Logixs to import
Import_WarningMessage       = Warning
Import_WarningMessage_Long  = <html><table width="600">                     \
The import tool will do its best to import the requested                    \
Logixs to LogixNG. But LogixNG works in a different way                     \
than Logix and therefore there may be subtle differences                    \
between the original Logix and the imported LogixNG                         \
<p>&nbsp;<p>                                                                \
Also, there may be special Logixs not known to the import                   \
tool that should not be imported to LogixNG, for example                    \
the Logix that handles sensor groups. The import tool                       \
knows about some of these Logix (SYS, RTX and USS CTC), but there           \
may be others not known to the import tool.                                 \
</table></html>

Import_ButtonImport         = Import
TitleLogixsImportSuccess    = The import was successful
LogixsAreImported           = The Logixs are imported
TitleLogixImportError       = The import failed
ImportLogixColumnError      = Error

LogixNGUserNameHint2 = Enter new user name for LogixNG, e.g. Signal 2 Control
# ConditionalNGSystemName = ConditionalNG System Name
# ConditionalNGUserName = ConditionalNG User Name
# ConditionalNGUserNameHint = Enter User Name for ConditionalNG, e.g. 'Signal 2 Red'
# SinglePickFrame = Single Pick List

DeleteLogixNGButtonHint = Press to delete this LogixNG and all its ConditionalNGs

ConditionalNGTableTitle = ConditionalNGs (in Order of Calculation)

NewConditionalNGButton = New ConditionalNG
NewConditionalNGButtonHint = Press for window to create a new ConditionalNG
ExecuteButton = Execute
ExecuteButtonHint = Press to execute all the ConditionalNGs
ReorderButton = Reorder
ReorderButtonHint = Press then click in right column in order desired (disabled while type is Mixed)
DoneButtonHint = Press to save any user name changes and return to Logix Table
ShowStartupThreadCheckBox = Show startup thread

ValidateErrorMessage    = <html>Invalid data entered<br><br>{0}
ValidateErrorTitle      = Data is not valid

ValidateFemaleSocketMessage = The socket name "{0}" is not valid
ValidateFemaleSocketTitle   = Error


# Errors when deleting a bean
DeletePrompt                = Are you sure you want to delete {0}?
DeleteWithChildrenPrompt    = Are you sure you want to delete {0} and its children?
VetoDeleteBean              = {0} {1} Can not be deleted\n{2}

PopupMenuRenameSocket   = Rename socket
PopupMenuAdd        = Add
PopupMenuEdit       = Edit
PopupMenuRemove     = Remove
PopupMenuCut        = Cut
PopupMenuCopy       = Copy
PopupMenuPaste      = Paste
PopupMenuPasteCopy  = Paste copy
PopupMenuEnable     = Enable
PopupMenuDisable    = Disable
PopupMenuLock       = Lock
PopupMenuUnlock     = Unlock
PopupMenuExpandTree = Expand tree
PopupMenuLocalVariables = Local variables
PopupMenuChangeUsername = Change user name

ColumnVariableName  = Name
ColumnVariableType  = Type
ColumnVariableData  = Data
ColumnVariableMenu  = Menu

ColumnSymbolName    = Name
ColumnSymbolValue   = Value

TableMenuSelect     = Select
TableMenuDelete     = Delete
TableMenuMoveUp     = Move Up
TableMenuMoveDown   = Move Down

TableAddVariable    = Add variable

ButtonEditComment   = Edit comment
ButtonFunctionHelp  = Formula functions

ModuleEditor_RootSocket_Short   = -
ModuleEditor_RootSocket_Long    = - {0}

VariableNameIsEmpty         = The name of the variable is empty

ColumnParameterName         = Name
ColumnInputParameterType    = Input type
ColumnInputParameterData    = Input data
ColumnOutputParameterType   = Output type
ColumnOutputParameterData   = Output data

ConditionalNG_Table_ColumnThreadName    = Thread
ConditionalNG_Table_ColumnStartup       = Startup
ConditionalNG_Table_ButtonDebug         = Debug
ConditionalNG_Table_ButtonEditThreads   = Edit threads

EditThreadsDialog_Title                 = Edit threads
EditThreadsDialog_StartupThreadName     = Startup thread: {0}
EditThreadsDialog_ButtonAddThread       = Add thread
EditThreadsDialog_ButtonSelectThread    = Select thread

EditThreadsDialog_ErrorTitle                    = Error
EditThreadsDialog_ErrorThreadNameAlreadyExists  = There is already a thread with the name "{0}"

Debug_MenuDebug                 = Debug
Debug_MenuItem_Execute          = Execute
Debug_MenuItem_Run              = Run
Debug_MenuItem_StepOver         = Step over
Debug_MenuItem_StepInto         = Step into

PopupMenuBreakpointBefore       = Breakpoint before
PopupMenuBreakpointAfter        = Breakpoint after

Error_ConditionalNGInEditMode   = Edit ConditionalNG(s) in progress. Please complete edit of any ConditionalNGs and try again.


TreeEditor_Info                 = Information
TreeEditor_RootHasNoPopupMenu   = The root item has no popup menu
TreeEditor_ChangeSystemNode     = This node is owned and maintained by the system. Do you want to change it?
TreeEditor_PopupLockTitle       = Popup Menu Locked
TreeEditor_PopupLockMessage     = The line item popup (right click) menu\nis locked while a dialog is open.


TreePane_System                 = System

LogixNG_Initialization_ButtonAddLogixNG         = Add initialization LogixNG
LogixNG_Initialization_ErrorTitle               = Error
LogixNG_Initialization_ErrorLogixNG_Exists      = The LogixNG is already in the initialization table
LogixNG_Initialization_ErrorNoLogixNG_Selected  = No LogixNG is selected

TableEditor_TableType           = Table type
TableEditor_CsvFile             = CSV table
TableEditor_UnknownTableType    = Unknown table type
TableEditor_FileName            = File name
TableEditor_CopyToClipboard     = Copy to clipboard
TableEditor_Csv_Type            = CSV Type

TableEditor_Error_FileNotFound  = File not found: {0}

Error_InlineLogixNGInEditMode   = Edit Inline LogixNG in progress. Please complete the edit and try again.

InlineLogixNGsFrame_Filter          = Filter
InlineLogixNGsFrame_Filter_Panel    = Panel
InlineLogixNGsFrame_Filter_IconType = Type

InlineLogixNGsTableModel_ColumnPanelName    = Panel
InlineLogixNGsTableModel_ColumnPositionableName = Icon
InlineLogixNGsTableModel_ColumnNamedBean    = Type
InlineLogixNGsTableModel_ColumnPosX         = X
InlineLogixNGsTableModel_ColumnPosY         = Y
InlineLogixNGsTableModel_ColumnMenu         = Menu
InlineLogixNGsTableModel_Error              = <<ERROR>>

InlineLogixNGsTableModel_TableMenuEdit      = Edit
InlineLogixNGsTableModel_TableMenuDelete    = Delete

ReminderInUse                        = It is in use by {0} other objects including.

Error_UserNameInUse         = New user name is already in use. Cannot update this LogixNG.\nPlease change user name and try again.

WhereUsed_Title             = Where Used Report
WhereUsed_LabelItemType     = Select Item Type
WhereUsed_LabelItemName     = Select Item Name
WhereUsed_SaveButton        = Save to Text File
WhereUsed_SaveButtonHint    = Save the where used content to a text file
WhereUsed_NotInUse          = The item is not in use by LogixNG

# Save to file
SaveFileName          = {0} Where Used.txt
SaveDialogTitle       = Save Where Used Content
SaveDialogApprove     = Save Content
SaveDuplicateReplace  = Replace
SaveDuplicateAppend   = Append
SaveDuplicateTitle    = Duplicate File
SaveDuplicatePrompt   = File "{0}" already exists, select [{1}] or [{2}]
