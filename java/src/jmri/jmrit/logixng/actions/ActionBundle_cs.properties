# jmri.jmrit.newlogix.digitalaction.DigitalActionBundle.properties
# Translation Petr Sidlo
# Czech properties for the jmri.jmrit.newlogix.digitalaction.DigitalActionBundle

BeanNotSelected             = ''

AddressByDirect             = {0}
AddressByReference          = podle odkazu {0}
AddressByLocalVariable      = podle lok\u00e1ln\u00ed prom\u011bnn\u00e9 {0}
AddressByFormula            = podle vzorce {0}

ActionAtomicBoolean_Short   = Nastavit atomick\u00fd boolean
ActionAtomicBoolean_Long    = Nastavit atomick\u00fd boolean na {0}

ActionBlock_Short               = Nastavit blok
ActionBlock_Long                = Nastavit blok "{0}" na {1}
ActionBlock_Long_Value          = Nastavit hodnotu blok "{0}" na "{1}"
ActionBlock_Long_FromMemory     = Nastavit blok "{0}" na hodnotu pam\u011bti "{1}"
ActionBlock_Long_ToMemory       = Nastavit blok "{0}" na hodnotu bloku "{1}"
ActionBlock_SetOccupied         = Sn\u00edma\u010d bloku na Aktivn\u00ed
ActionBlock_SetNotOccupied      = Sn\u00edma\u010d bloku na Neaktivn\u00ed
ActionBlock_SetAltColorOn       = Alternativn\u00ed barva Zapnuto
ActionBlock_SetAltColorOff      = Alternativn\u00ed barva Vypnuto
ActionBlock_SetNullValue        = Pr\u00e1zdn\u00fd (null)
ActionBlock_SetConstant         = Konstanta
ActionBlock_CopyFromMemory      = Kop\u00edrovat z pam\u011bti
ActionBlock_CopyToMemory        = Kop\u00edrovat do pam\u011bti
ActionBlock_ErrorBlock          = Nebyl vybr\u00e1n blok
ActionBlock_ErrorOperation      = Nebyla vybr\u00e1na akce
ActionBlock_ErrorConstant       = Hodnota bloku nebyla zad\u00e1na
ActionBlock_ErrorMemory         = Nebyla vybr\u00e1na pam\u011b\u0165 
ActionBlock_BlockInUseVeto      = Blok je pou\u017e\u00edv\u00e1n Akc\u00ed bloku "{0}"
ActionBlock_MemoryInUseVeto     = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Akc\u00ed bloku "{0}"


ActionEntryExit_Short               = Nastavit NX Odkud-Kam
ActionEntryExit_Long                = Nastavit NX Odkud-Kam {0} na {1}
ActionEntryExit_SetNXPairEnabled    = Nastavit NX p\u00e1r povolen
ActionEntryExit_SetNXPairDisabled   = Nastavit NX p\u00e1r zak\u00e1z\u00e1n
ActionEntryExit_SetNXPairSegment    = Nastavit NX p\u00e1r Segment Aktivn\u00ed / Neaktivn\u00ed
ActionEntryExit_DestinationPointsInUseVeto  = C\u00edlov\u00fd bod je pou\u017e\u00edv\u00e1n Nastaven\u00edm NX Odkud-Kam akc\u00ed "{0}"

ActionListenOnBeans_Short           = Poslouchat na beanech
ActionListenOnBeans_Long            = Poslouchat na beanech


ActionLocalVariable_Short                           = Nastavit prom\u011bnnou
ActionLocalVariable_Long_Null                       = Nastavit prom\u011bnnou {0} na  null
ActionLocalVariable_Long_Value                      = Nastavit prom\u011bnnou {0} na "{1}"
ActionLocalVariable_Long_CopyVariableToVariable     = Nastavit prom\u011bnnou {0} na hodnotu prom\u011bnn\u00e9 {1}
ActionLocalVariable_Long_CopyMemoryToVariable       = Nastavit prom\u011bnnou {0} na hodnotu pam\u011bti {1}
ActionLocalVariable_Long_Formula                    = Nastavit prom\u011bnnou {0} na v\u00fdsledek vzorce "{1}"

ActionLocalVariable_VariableOperation_SetToNull                 = Null
ActionLocalVariable_VariableOperation_SetToString               = Konstanta
ActionLocalVariable_VariableOperation_CopyVariableToVariable    = Prom\u011bnn\u00e1
ActionLocalVariable_VariableOperation_CopyMemoryToVariable      = Pam\u011b\u0165
ActionLocalVariable_VariableOperation_CalculateFormula          = Vzorec

ActionLocalVariable_MemoryInUseLocalVariableExpressionVeto  = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Lok\u00e1ln\u00ed prom\u011bnnou akc\u00ed "{0}"


ActionMemory_Short            = Nastavit pam\u011b\u0165
ActionMemory_Long_Null        = Nastavit pam\u011b\u0165 {0} na null
ActionMemory_Long_Value       = Nastavit pam\u011b\u0165 {0} na "{1}"
ActionMemory_Long_CopyVariableToMemory    = Nastavit pam\u011b\u0165 {0} na hodnotu prom\u011bnn\u00e9 {1}
ActionMemory_Long_CopyMemoryToMemory      = Nastavit pam\u011b\u0165 {0} na hodnotu pam\u011bti {1}
ActionMemory_Long_Formula     = Nastavit pam\u011b\u0165 {0} na v\u00fdsledek vzorce "{1}"

ActionMemory_MemoryOperation_SetToNull                 = Null
ActionMemory_MemoryOperation_SetToString               = Konstanta
ActionMemory_MemoryOperation_CopyVariableToMemory      = Prom\u011bnn\u00e1
ActionMemory_MemoryOperation_CopyMemoryToMemory        = Pam\u011b\u0165
ActionMemory_MemoryOperation_CalculateFormula          = Vzorec

ActionMemory_MemoryInUseMemoryExpressionVeto  = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Pam\u011b\u0165 akc\u00ed "{0}"


ActionTimer_Short               = \u010casova\u010d
ActionTimer_Long                = \u010casova\u010d

ActionThrottle_Short          = Ovlada\u010d
ActionThrottle_Long           = Ovlada\u010d
# Important! These strings MUST be valid female socket names!!
ActionThrottle_SocketName_Address     = Adresa
ActionThrottle_SocketName_Speed       = Rychlost
ActionThrottle_SocketName_Direction   = Sm\u011br

AnalogActionMemory_Short    = Nastavit pam\u011b\u0165
AnalogActionMemory_Long     = Nastavit pam\u011b\u0165 {0}
AnalogMemory_MemoryInUseMemoryExpressionVeto  = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Pam\u011b\u0165 akc\u00ed "{0}"

AnalogMany_Short        = Mnoho
AnalogMany_Long         = Mnoho

DigitalCallModule_Short = Volat modul
DigitalCallModule_Long  = Volat modul: {0}
DigitalCallModule_ModuleInUseVeto  = Module is in use by CallModule action "{0}"

DigitalBooleanMany_Short        = Mnoho
DigitalBooleanMany_Long         = Mnoho

DigitalBooleanOnChange_Short                  = P\u0159i zm\u011bn\u011b
DigitalBooleanOnChange_Long_ChangeToTrue      = P\u0159i zm\u011bn\u011b na Pravda
DigitalBooleanOnChange_Long_ChangeToFalse     = P\u0159i zm\u011bn\u011b na Nepravda
DigitalBooleanOnChange_Long_Change            = P\u0159i zm\u011bn\u011b

DoAnalogAction_Short    = \u010c\u00edst analog a nastavit analog
DoAnalogAction_Long     = \u010c\u00edst analog {0} a nastavit analog {1}

DoStringAction_Short    = \u010c\u00edst \u0159et\u011bzec a nastavit \u0159et\u011bzec
DoStringAction_Long     = \u010c\u00edst \u0159et\u011bzec {0} a nastavit \u0159et\u011bzec {1}

EnableLogix_Short       = Nastavit Logix na Povolen/Zak\u00e1z\u00e1n
EnableLogix_Long        = nastavit Logix {0} na {1}
EnableLogix_Enable      = Povolit
EnableLogix_Disable     = Zak\u00e1zat
EnableLogix_LogixInUseVeto   = Logix je pou\u017e\u00edv\u00e1n Povolen\u00fdm Logix akc\u00ed "{0}"

ExecuteDelayed_Short    = Vykon\u00e1n\u00ed zpo\u017ed\u011bno
ExecuteDelayed_Long     = Vokon\u00e1n\u00ed {0} po {1}. {2}
ExecuteDelayed_DelayByDirect        = {0}
ExecuteDelayed_DelayByReference     = podle odkazu {0} v jednotce {1}
ExecuteDelayed_DelayByLocalVariable = podle lok\u00e1ln\u00ed prom\u011bnn\u00e9 {0} v jednotce {1}
ExecuteDelayed_DelayByFormula       = podle vzorce {0} v jednotce {1}
ExecuteDelayed_ResetRepeat  = Reset p\u0159i opakov\u00e1n\u00ed
ExecuteDelayed_IgnoreRepeat = Ignorovat p\u0159i opakov\u00e1n\u00ed

For_Short               = Pro
For_Long                = Pro ({0}; {1}; {2}) prov\u00e9st {3}
# Important! These strings MUST be valid female socket names!!
For_SocketName_Init         = Init
For_SocketName_While        = Zatimco
For_SocketName_AfterEach    = PoKazdem
For_SocketName_Do           = Provest

IfThenElse_Short            = Kdy\u017e Potom Jinak
IfThenElse_Long             = Kdy\u017e Potom Jinak. {0}
IfThenElse_ExecuteOnChange  = Vykonat p\u0159i zm\u011bn\u011b
IfThenElse_AlwaysExecute    = Vykonat v\u017edy

HoldAnything_Short      = Podr\u017eet cokoliv
HoldAnything_Long       = Podr\u017eet cokoliv

Many_Short              = Mnoho
Many_Long               = Mnoho

Light_Short             = Nastavit osv\u011btlen\u00ed
Light_Long              = Nastavit osv\u011btlen\u00ed {0} do stavu {1}
LightToggleStatus       = P\u0159epnout
Light_LightInUseLightExpressionVeto = Osv\u011btlen\u00ed je pou\u017e\u00edv\u00e1no Osv\u011btlen\u00edm v\u00fdrazem "{0}"

Logix_Short             = Logix
Logix_Long              = Logix
Logix_LogixInUseLogixExpressionVeto = Logix je pou\u017e\u00edv\u00e1n Logix v\u00fdrazem "{0}"


LogLocalVariables_Short     = Protokol lok\u00e1ln\u00edch prom\u011bnn\u00fdch
LogLocalVariables_Long      = Protokol lok\u00e1ln\u00edch prom\u011bnn\u00fdch
LogLocalVariables_Start     = Protokolovat lok\u00e1ln\u00ed prom\u011bnn\u00e9:
LogLocalVariables_Variable  = N\u00e1zev: {0}, hodnota: {1}
LogLocalVariables_End       = Protokolov\u00e1n\u00ed lok\u00e1ln\u00edch prom\u011bnn\u00fdch hotovo

Power_Short             = Nastavit nap\u00e1jen\u00ed Zap/Vyp
Power_Long              = Nastavit nap\u00e1jen\u00ed {0}

SimpleScript_Short      = Vykonat jednoduch\u00fd skript
SimpleScript_Long       = Vykonat jednoduch\u00fd skript: {0}. Skript {1}
SimpleScript_RunScript      = B\u011b\u017e\u00edc\u00ed skript
SimpleScript_JythonCommand  = Jython p\u0159\u00edkaz
SimpleScript_LongUnknownOper    = Vykonat skript: Operace {0}. Skript: {1}

Script_Short                = Vykonat skript
Script_Long                 = Vykonat skript

Sensor_Short            = Nastavit sn\u00edma\u010d
Sensor_Long             = Nastavit sn\u00edma\u010d {0} do stavu {1}
SensorToggleStatus      = P\u0159epnout
Sensor_SensorInUseSensorExpressionVeto  = Sn\u00edma\u010d je pou\u017e\u00edv\u00e1n Sn\u00edma\u010d v\u00fdrazem "{0}"

SignalHead_Short                    = Nastavit n\u00e1v\u011bstn\u00ed \u0161t\u00edt
SignalHead_Long                     = Nastavit n\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} na {1}
SignalHead_LongAppearance           = Nastavit n\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} na vyobrazen\u00ed {1}
SignalHead_LongUnknownOper          = Nastavit n\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} na {1} s vyobrazen\u00edm {2}
SignalHeadOperationType_Appearance  = vyobrazen\u00ed
SignalHeadOperationType_Lit         = osv\u011btleno
SignalHeadOperationType_NotLit      = neosv\u011btleno
SignalHeadOperationType_Held        = dr\u017eeno
SignalHeadOperationType_NotHeld     = nedr\u017eeno
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = N\u00e1v\u011bstn\u00ed \u0161t\u00edt je pou\u017e\u00edv\u00e1n N\u00e1v\u011bstn\u00ed \u0161t\u00edt v\u00fdrazem "{0}"

SignalMast_Short                    = Nastavit n\u00e1v\u011bstidlo
SignalMast_Long                     = Nastavit n\u00e1v\u011bstidlo {0} na {1}
SignalMast_LongAspect               = Nastavit n\u00e1v\u011bstidlo {0} na n\u00e1v\u011bst {1}
SignalMast_LongUnknownOper          = Nastavit n\u00e1v\u011bstidlo {0} na {1} s n\u00e1v\u011bst\u00ed {2}
SignalMastOperationType_Aspect      = n\u00e1v\u011bst
SignalMastOperationType_Lit         = osv\u011btleno
SignalMastOperationType_NotLit      = neosv\u011btleno
SignalMastOperationType_Held        = dr\u017eeno
SignalMastOperationType_NotHeld     = nedr\u017eeno
SignalMastOperationType_PermissiveSmlDisabled       = permisivn\u00ed SML zak\u00e1z\u00e1na
SignalMastOperationType_PermissiveSmlNotDisabled    = permisivn\u00ed SML nen\u00ed zak\u00e1z\u00e1na
SignalMast_SignalMastInUseSignalMastExpressionVeto  = N\u00e1v\u011bstidlo je pou\u017e\u00edv\u00e1no N\u00e1v\u011bstidlo v\u00fdrazem "{0}"

Sequence_Short          = Sekvence
Sequence_Long           = Sekvence
SequenceSocketStart     = Start
SequenceSocketStop      = Stop
SequenceSocketReset     = Reset

ShutdownComputer_Short  = Vypnout po\u010d\u00edta\u010d
ShutdownComputer_Long   = Vypnout po\u010d\u00edta\u010d: {0}
ShutdownComputer_ShutdownComputer   = Vypnout po\u010d\u00edta\u010d
ShutdownComputer_RebootComputer     = Restartovat po\u010d\u00edta\u010d
ShutdownComputer_ShutdownJMRI       = Vypnout JMRI
ShutdownComputer_RebootJMRI         = Restartovat JMRI

StringMany_Short        = Mnoho
StringMany_Long         = Mnoho

StringActionMemory_Short    = Nastavit pam\u011b\u0165
StringActionMemory_Long     = Nastavit pam\u011b\u0165 {0}
StringMemory_MemoryInUseMemoryExpressionVeto  = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Pam\u011bt akc\u00ed "{0}"

TableForEach_Short  = Table: For each
TableForEach_Long   = Table: For each {0} of {1} "{2}" in table "{3}" set variable "{4}" and execute action {5}
TableForEach_TableRowOrColumn_Row               = \u0158\u00e1dek
TableForEach_TableRowOrColumn_Row_lowercase     = \u0159\u00e1dek
TableForEach_TableRowOrColumn_Column            = Sloupec
TableForEach_TableRowOrColumn_Column_lowercase  = sloupec

# Important! These strings MUST be valid female socket names!!
TimerSocketStart        = Start
TimerSocketStop         = Stop

TriggerRoute_TriggerRoute   = Spustit trasu
TriggerRoute_LogixInUseVeto = Logix je pou\u017e\u00edv\u00e1n Povolen\u00fdm Logix akc\u00ed "{0}"

Turnout_Short               = Nastavit v\u00fdhybku
Turnout_Long                = Nastavit v\u00fdhybku {0} do stavu {1}
TurnoutToggleStatus         = P\u0159epnout
Turnout_TurnoutInUseTurnoutExpressionVeto   = V\u00fdhybka je pou\u017e\u00edv\u00e1na V\u00fdhybka akc\u00ed "{0}"

TurnoutLock_Short       = Nastavit z\u00e1mek pro v\u00fdhybku
TurnoutLock_Long        = Nastavit z\u00e1mek pro v\u00fdhybku {0} na {1}
TurnoutLock_Lock        = Zam\u010deno
TurnoutLock_Unlock      = Odem\u010deno
TurnoutLock_Toggle      = P\u0159epnout
TurnoutLock_TurnoutInUseTurnoutExpressionVeto   = V\u00fdhybka je pou\u017e\u00edv\u00e1na Vyhybka akc\u00ed "{0}"

WebBrowser_Short        = Web prohl\u00ed\u017ee\u010d
WebBrowser_Long         = Web prohl\u00ed\u017ee\u010d. Otev\u0159\u00edt web str\u00e1nku {0}
