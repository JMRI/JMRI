# jmri.jmrit.newlogix.digitalaction.DigitalActionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalaction.DigitalActionBundle

BeanNotSelected             = ''

AddressByDirect             = {0}
AddressByReference          = by reference {0}
AddressByLocalVariable      = by local variable {0}
AddressByFormula            = by formula {0}

ActionAtomicBoolean_Short   = Set the atomic boolean
ActionAtomicBoolean_Long    = Set the atomic boolean to {0}

ActionListenOnBeans_Short   = Listen on beans
ActionListenOnBeans_Long    = Listen on beans

ActionTimer_Short               = Timer
ActionTimer_Long                = Timer

ActionThrottle_Short          = Throttle
ActionThrottle_Long           = Throttle
# Important! These strings MUST be valid female socket names!!
ActionThrottle_SocketName_Address     = Address
ActionThrottle_SocketName_Speed       = Speed
ActionThrottle_SocketName_Direction   = Direction

AnalogActionMemory_Short    = Set memory
AnalogActionMemory_Long     = Set memory {0}
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

AnalogMany_Short        = Many
AnalogMany_Long         = Many

DigitalCallModule_Short = Call module
DigitalCallModule_Long  = Call module: {0}
DigitalCallModule_ModuleInUseVeto  = Module is in use by CallModule action "{0}"

DigitalBooleanMany_Short        = Many
DigitalBooleanMany_Long         = Many

DigitalBooleanOnChange_Short                  = On change
DigitalBooleanOnChange_Long_ChangeToTrue      = On change to true
DigitalBooleanOnChange_Long_ChangeToFalse     = On change to false
DigitalBooleanOnChange_Long_Change            = On change

DoAnalogAction_Short    = Read analog and set analog
DoAnalogAction_Long     = Read analog {0} and set analog {1}

DoStringAction_Short    = Read string and set string
DoStringAction_Long     = Read string {0} and set string {1}

ExecuteDelayed_Short    = Execute delayed
ExecuteDelayed_Long     = Execute {0} after {1}

For_Short               = For
For_Long                = For ({0}; {1}; {2}) do {3}
# Important! These strings MUST be valid female socket names!!
For_SocketName_Init         = Init
For_SocketName_While        = While
For_SocketName_AfterEach    = AfterEach
For_SocketName_Do           = Do

IfThenElse_Short        = If Then Else
IfThenElse_Long         = If Then Else

HoldAnything_Short      = Hold anything
HoldAnything_Long       = Hold anything

Many_Short              = Many
Many_Long               = Many

Light_Short             = Set light
Light_Long              = Set light {0} to state {1}
LightToggleStatus       = Toggle
Light_LightInUseLightExpressionVeto = Light is in use by Light expression "{0}"

Logix_Short             = Logix
Logix_Long              = Logix
Logix_LogixInUseLogixExpressionVeto = Logix is in use by Logix expression "{0}"

LocalVariable_Short             = Set variable
LocalVariable_Long_Null         = Set variable {0} to null
LocalVariable_Long_Value        = Set variable {0} to "{1}"
LocalVariable_Long_CopyVariableToVariable   = Copy variable {0} to variable {1}
LocalVariable_Long_CopyMemoryToVariable     = Copy memory {0} to variable {1}
LocalVariable_Long_Formula      = Set variable {0} to the result of formula "{1}"
LocalVariable_MemoryInUseLocalVariableExpressionVeto  = Memory is in use by LocalVariable action "{0}"

Memory_Short            = Set memory
Memory_Long_Null        = Set memory {0} to null
Memory_Long_Value       = Set memory {0} to "{1}"
Memory_Long_CopyVariableToMemory    = Copy variable {0} to memory {1}
Memory_Long_CopyMemoryToMemory      = Copy memory {0} to memory {1}
Memory_Long_Formula     = Set memory {0} to the result of formula "{1}"
Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

SimpleScript_Short      = Execute simple script
SimpleScript_Long       = Execute simple script

Script_Short            = Execute script
Script_Long             = Execute script

Sensor_Short            = Set sensor
Sensor_Long             = Set sensor {0} to state {1}
SensorToggleStatus      = Toggle
Sensor_SensorInUseSensorExpressionVeto  = Sensor is in use by Sensor expression "{0}"

SignalHead_Short                    = Set signal head
SignalHead_Long                     = Set signal head {0} to {1}
SignalHead_LongAppearance           = Set signal head {0} to appearance {1}
SignalHead_LongUnknownOper          = Set signal head {0} to {1} with appearance {2}
SignalHeadOperationType_Appearance  = appearence
SignalHeadOperationType_Lit         = lit
SignalHeadOperationType_NotLit      = not lit
SignalHeadOperationType_Held        = held
SignalHeadOperationType_NotHeld     = not held
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

SignalMast_Short                    = Set signal mast
SignalMast_Long                     = Set signal mast {0} to {1}
SignalMast_LongAspect               = Set signal mast {0} to aspect {1}
SignalMast_LongUnknownOper          = Set signal mast {0} to {1} with aspect {2}
SignalMastOperationType_Aspect      = aspect
SignalMastOperationType_Lit         = lit
SignalMastOperationType_NotLit      = not lit
SignalMastOperationType_Held        = held
SignalMastOperationType_NotHeld     = not held
SignalMastOperationType_PermissiveSmlDisabled       = permissive sml disabled
SignalMastOperationType_PermissiveSmlNotDisabled    = permissive sml not disabled
SignalMast_SignalMastInUseSignalMastExpressionVeto  = SignalMast is in use by SignalMast expression "{0}"

Sequence_Short          = Sequence
Sequence_Long           = Sequence
SequenceSocketStart     = Start
SequenceSocketStop      = Stop
SequenceSocketReset     = Reset

ShutdownComputer_Short  = Shutdown computer
ShutdownComputer_Long   = Shutdown computer: {0}
ShutdownComputer_ShutdownComputer   = Shut down the computer
ShutdownComputer_RebootComputer     = Reboot the computer
ShutdownComputer_ShutdownJMRI       = Shut down JMRI
ShutdownComputer_RebootJMRI         = Reboot JMRI

StringMany_Short        = Many
StringMany_Long         = Many

StringActionMemory_Short    = Set memory
StringActionMemory_Long     = Set memory {0}
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

TableForEach_Short  = Table: For each
TableForEach_Long   = Table: For each {0} of {1} "{2}" in table "{3}" set variable "{4}" and execute action {5}
TableForEach_TableRowOrColumn_Row               = Row
TableForEach_TableRowOrColumn_Row_lowercase     = row
TableForEach_TableRowOrColumn_Column            = Column
TableForEach_TableRowOrColumn_Column_lowercase  = column

# Important! These strings MUST be valid female socket names!!
TimerSocketStart        = Start
TimerSocketStop         = Stop

Turnout_Short               = Set turnout
Turnout_Long                = Set turnout {0} to state {1}
TurnoutToggleStatus         = Toggle
Turnout_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout action "{0}"

WebBrowser_Short        = Web browser
WebBrowser_Long         = Web browser. Open web page {0}
