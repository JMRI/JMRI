# jmri.jmrit.newlogix.digitalaction.DigitalActionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalaction.DigitalActionBundle

BeanNotSelected             = ''

AddressByDirect             = {0}
AddressByReference          = by reference {0}
AddressByLocalVariable      = by local variable {0}
AddressByFormula            = by formula {0}

ActionAtomicBoolean_Short   = Set the atomic boolean
ActionAtomicBoolean_Long    = Set the atomic boolean to {0}

ActionBlock_Short               = Set block
ActionBlock_Long                = Set block "{0}" to {1}
ActionBlock_Long_Value          = Set block "{0}" value to "{1}"
ActionBlock_SetOccupied         = Block Sensor Active
ActionBlock_SetNotOccupied      = Block Sensor Inactive
ActionBlock_SetAltColorOn       = Alternate Color On
ActionBlock_SetAltColorOff      = Alternate Color Off
ActionBlock_SetNullValue        = Empty (null)
ActionBlock_SetValue            = Value
ActionBlock_ErrorBlock          = A block was not selected
ActionBlock_ErrorSensor         = Block "{}" does not have sensor
ActionBlock_ErrorLayoutBlock    = Block "{}" does not have a related LayoutBlock
ActionBlock_ErrorOperation      = An action was not selected
ActionBlock_ErrorValue          = A block value was not entered
ActionBlock_BlockInUseVeto      = Block is in use by Block action "{0}"
ActionBlock_MemoryTitle         = Block to/from Memory Change Notification:
ActionBlock_MemoryChange        = The block copy memory options have been removed.\n\nThe copy to memory is obsolete. \nThe copy from memory is replaced by the Reference tab. \nThe old memory reference is now a value enclosd in >>> and <<<.


ActionClock_Short       = Clock
ActionClock_Long        = {0}
ActionClock_LongTime    = {0} to {1}
ActionClock_SetClock    = Set Fast Clock
ActionClock_StartClock  = Start Fast Clock
ActionClock_StopClock   = Stop Fast Clock
ActionClock_TimeLabel   = Enter time (hh:mm)
ActionClock_ParseError  = The entered time, "{0}", is not valid
ActionClock_RangeError  = The entered time is not between 00:00 and 23:59


ActionEntryExit_Short               = Set Entry/Exit
ActionEntryExit_Long                = Set Entry/Exit {0} to {1}
ActionEntryExit_SetNXPairEnabled    = Set NX Pair Enabled
ActionEntryExit_SetNXPairDisabled   = Set NX Pair Disabled
ActionEntryExit_SetNXPairSegment    = Set NX Pair Segment Active / Inactive
ActionEntryExit_DestinationPointsInUseVeto  = Destination points is in use by Set Entry/Exit action "{0}"

ActionListenOnBeans_Short           = Listen on beans
ActionListenOnBeans_Long            = Listen on beans


ActionLocalVariable_Short                           = Set variable
ActionLocalVariable_Long_Null                       = Set variable {0} to null
ActionLocalVariable_Long_Value                      = Set variable {0} to "{1}"
ActionLocalVariable_Long_CopyVariableToVariable     = Set variable {0} to the value of variable {1}
ActionLocalVariable_Long_CopyMemoryToVariable       = Set variable {0} to the value of memory {1}
ActionLocalVariable_Long_Formula                    = Set variable {0} to the result of formula "{1}"

ActionLocalVariable_VariableOperation_SetToNull                 = Null
ActionLocalVariable_VariableOperation_SetToString               = Constant
ActionLocalVariable_VariableOperation_CopyVariableToVariable    = Variable
ActionLocalVariable_VariableOperation_CopyMemoryToVariable      = Memory
ActionLocalVariable_VariableOperation_CalculateFormula          = Formula

ActionLocalVariable_MemoryInUseLocalVariableExpressionVeto  = Memory is in use by LocalVariable action "{0}"


ActionMemory_Short            = Set memory
ActionMemory_Long_Null        = Set memory {0} to null
ActionMemory_Long_Value       = Set memory {0} to "{1}"
ActionMemory_Long_CopyVariableToMemory    = Set memory {0} to the value of variable {1}
ActionMemory_Long_CopyMemoryToMemory      = Set memory {0} to the value of memory {1}
ActionMemory_Long_Formula     = Set memory {0} to the result of formula "{1}"

ActionMemory_MemoryOperation_SetToNull                 = Null
ActionMemory_MemoryOperation_SetToString               = Constant
ActionMemory_MemoryOperation_CopyVariableToMemory      = Variable
ActionMemory_MemoryOperation_CopyMemoryToMemory        = Memory
ActionMemory_MemoryOperation_CalculateFormula          = Formula

ActionMemory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"


ActionOBlock_Short               = Set oblock
ActionOBlock_Long                = Set oblock "{0}" to {1}
ActionOBlock_Long_Value          = Set oblock "{0}" value to "{1}"

ActionOBlock_Deallocate          = Deallocate Block
ActionOBlock_SetValue            = Set Block Value
ActionOBlock_SetError            = Set Block Error
ActionOBlock_ClearError          = Clear Block Error
ActionOBlock_SetOutOfService     = Set Block OutOfService
ActionOBlock_ClearOutOfService   = Clear Block OutOfService

ActionOBlock_ErrorBlock          = An oblock was not selected
ActionOBlock_ErrorValue          = An oblock value was not entered
ActionOBlock_BlockInUseVeto      = OBlock is in use by OBlock action "{0}"


ActionTimer_Short               = Timer
ActionTimer_Long                = Timer

ActionThrottle_Short          = Throttle
ActionThrottle_Long           = Throttle
# Important! These strings MUST be valid female socket names!!
ActionThrottle_SocketName_Address     = Address
ActionThrottle_SocketName_Speed       = Speed
ActionThrottle_SocketName_Direction   = Direction

ActionWarrant_Short                = Set warrant
ActionWarrant_Long                 = Set warrant "{0}" to {1}
ActionWarrant_Long_Train_Id        = Set warrant "{0}" train id to "{1}"
ActionWarrant_Long_Train_Name      = Set warrant "{0}" train name to "{1}"
ActionWarrant_Long_Control         = Set warrant "{0}" train control to "{1}"
ActionWarrant_AllocateWarrantRoute = Allocate Warrant Route
ActionWarrant_DeallocateWarrant    = Deallocate Warrant
ActionWarrant_SetRouteTurnouts     = Set Route Turnouts
ActionWarrant_AutoRunTrain         = Auto Run Train
ActionWarrant_ManuallyRunTrain     = Manually Run Train
ActionWarrant_ControlAutoTrain     = Control Auto Train
ActionWarrant_SetTrainId           = Set Train ID
ActionWarrant_SetTrainName         = Set Train Name
ActionWarrant_Halt_AutoTrain       = Halt
ActionWarrant_Resume_AutoTrain     = Resume
ActionWarrant_Abort_AutoTrain      = Abort
ActionWarrant_ErrorWarrant         = A warrant was not selected
ActionWarrant_ErrorValue           = A train id or train name was not entered
ActionWarrant_WarrantInUseVeto     = Warrant is in use by Warrant action "{0}"

AnalogActionMemory_Short    = Set memory
AnalogActionMemory_Long     = Set memory {0}
AnalogMemory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

AnalogMany_Short        = Many
AnalogMany_Long         = Many

DigitalCallModule_Short = Call module
DigitalCallModule_Long  = Call module: {0}
DigitalCallModule_ModuleInUseVeto  = Module is in use by CallModule action "{0}"

DigitalBooleanMany_Short        = Many
DigitalBooleanMany_Long         = Many

DigitalBooleanOnChange_Short                  = On change
DigitalBooleanOnChange_Long_ChangeToTrue      = On change to true
DigitalBooleanOnChange_Long_ChangeToFalse     = On change to false
DigitalBooleanOnChange_Long_Change            = On change

DoAnalogAction_Short    = Read analog and set analog
DoAnalogAction_Long     = Read analog {0} and set analog {1}

DoStringAction_Short    = Read string and set string
DoStringAction_Long     = Read string {0} and set string {1}

EnableLogix_Short       = Set Logix to Enable/Disable
EnableLogix_Long        = Set Logix {0} to {1}
EnableLogix_Enable      = Enable
EnableLogix_Disable     = Disable
EnableLogix_LogixInUseVeto   = Logix is in use by Enable Logix action "{0}"

ExecuteDelayed_Short    = Execute delayed
ExecuteDelayed_Long     = Execute {0} after {1}. {2}
ExecuteDelayed_DelayByDirect        = {0}
ExecuteDelayed_DelayByReference     = by reference {0} in unit {1}
ExecuteDelayed_DelayByLocalVariable = by local variable {0} in unit {1}
ExecuteDelayed_DelayByFormula       = by formula {0} in unit {1}
ExecuteDelayed_ResetRepeat  = Reset on repeat
ExecuteDelayed_IgnoreRepeat = Ignore on repeat

For_Short               = For
For_Long                = For ({0}; {1}; {2}) do {3}
# Important! These strings MUST be valid female socket names!!
For_SocketName_Init         = Init
For_SocketName_While        = While
For_SocketName_AfterEach    = AfterEach
For_SocketName_Do           = Do

IfThenElse_Short            = If Then Else
IfThenElse_Long             = If Then Else. {0}
IfThenElse_ExecuteOnChange  = Execute on change
IfThenElse_AlwaysExecute    = Always execute

HoldAnything_Short      = Hold anything
HoldAnything_Long       = Hold anything

Many_Short              = Many
Many_Long               = Many

Light_Short             = Set light
Light_Long              = Set light {0} to state {1}
LightToggleStatus       = Toggle
Light_LightInUseLightExpressionVeto = Light is in use by Light expression "{0}"

Logix_Short             = Logix
Logix_Long              = Logix
Logix_LogixInUseLogixExpressionVeto = Logix is in use by Logix expression "{0}"


LogLocalVariables_Short     = Log local variables
LogLocalVariables_Long      = Log local variables
LogLocalVariables_Start     = Log local variables:
LogLocalVariables_Variable  =     Name: {0}, value: {1}
LogLocalVariables_End       = Log local variables done

Power_Short             = Set power on/off
Power_Long              = Set power {0}

SimpleScript_Short      = Execute simple script
SimpleScript_Long       = Execute simple script: {0}. Script {1}
SimpleScript_RunScript      = Run script
SimpleScript_JythonCommand  = Jython command
SimpleScript_LongUnknownOper    = Execute script: Operation {0}. Script: {1}

Script_Short                = Execute script
Script_Long                 = Execute script

Sensor_Short            = Set sensor
Sensor_Long             = Set sensor {0} to state {1}
SensorToggleStatus      = Toggle
Sensor_SensorInUseSensorExpressionVeto  = Sensor is in use by Sensor expression "{0}"

SignalHead_Short                    = Set signal head
SignalHead_Long                     = Set signal head {0} to {1}
SignalHead_LongAppearance           = Set signal head {0} to appearance {1}
SignalHead_LongUnknownOper          = Set signal head {0} to {1} with appearance {2}
SignalHeadOperationType_Appearance  = appearence
SignalHeadOperationType_Lit         = lit
SignalHeadOperationType_NotLit      = not lit
SignalHeadOperationType_Held        = held
SignalHeadOperationType_NotHeld     = not held
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

SignalMast_Short                    = Set signal mast
SignalMast_Long                     = Set signal mast {0} to {1}
SignalMast_LongAspect               = Set signal mast {0} to aspect {1}
SignalMast_LongUnknownOper          = Set signal mast {0} to {1} with aspect {2}
SignalMastOperationType_Aspect      = aspect
SignalMastOperationType_Lit         = lit
SignalMastOperationType_NotLit      = not lit
SignalMastOperationType_Held        = held
SignalMastOperationType_NotHeld     = not held
SignalMastOperationType_PermissiveSmlDisabled       = permissive sml disabled
SignalMastOperationType_PermissiveSmlNotDisabled    = permissive sml not disabled
SignalMast_SignalMastInUseSignalMastExpressionVeto  = SignalMast is in use by SignalMast expression "{0}"

Sequence_Short          = Sequence
Sequence_Long           = Sequence
SequenceSocketStart     = Start
SequenceSocketStop      = Stop
SequenceSocketReset     = Reset

ShutdownComputer_Short  = Shutdown computer
ShutdownComputer_Long   = Shutdown computer: {0}
ShutdownComputer_ShutdownComputer   = Shut down the computer
ShutdownComputer_RebootComputer     = Reboot the computer
ShutdownComputer_ShutdownJMRI       = Shut down JMRI
ShutdownComputer_RebootJMRI         = Reboot JMRI

StringMany_Short        = Many
StringMany_Long         = Many

StringActionMemory_Short    = Set memory
StringActionMemory_Long     = Set memory {0}
StringMemory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

TableForEach_Short  = Table: For each
TableForEach_Long   = Table: For each {0} of {1} "{2}" in table "{3}" set variable "{4}" and execute action {5}
TableForEach_TableRowOrColumn_Row               = Row
TableForEach_TableRowOrColumn_Row_lowercase     = row
TableForEach_TableRowOrColumn_Column            = Column
TableForEach_TableRowOrColumn_Column_lowercase  = column

# Important! These strings MUST be valid female socket names!!
TimerSocketStart        = Start
TimerSocketStop         = Stop

TriggerRoute_Short          = Trigger route
TriggerRoute_Long           = Trigger route {0} to {1}
TriggerRoute_TriggerRoute   = Trigger route
TriggerRoute_LogixInUseVeto = Logix is in use by Enable Logix action "{0}"

Turnout_Short               = Set turnout
Turnout_Long                = Set turnout {0} to state {1}
TurnoutToggleStatus         = Toggle
Turnout_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout action "{0}"

TurnoutLock_Short       = Set lock for turnout
TurnoutLock_Long        = Set lock for turnout {0} to {1}
TurnoutLock_Lock        = Lock
TurnoutLock_Unlock      = Unlock
TurnoutLock_Toggle      = Toggle
TurnoutLock_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout action "{0}"

WebBrowser_Short        = Web browser
WebBrowser_Long         = Web browser. Open web page {0}
