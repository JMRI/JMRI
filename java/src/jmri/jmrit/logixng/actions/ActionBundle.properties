# jmri.jmrit.newlogix.digitalaction.DigitalActionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalaction.DigitalActionBundle

ActionAtomicBoolean_Short   = Atomic boolean
ActionAtomicBoolean_Long    = Set the atomic boolean to {0}

ActionAudio_Short                 = Audio
ActionAudio_Long                  = Audio: {0} {1}
ActionAudio_AudioInUseAudioActionVeto = Audio is in use by Audio action "{0}"

ActionAudio_Operation_Play              = Play
ActionAudio_Operation_PlayToggle        = Play toggle
ActionAudio_Operation_Pause             = Pause
ActionAudio_Operation_PauseToggle       = Pause toggle
ActionAudio_Operation_Resume            = Resume
ActionAudio_Operation_Stop              = Stop
ActionAudio_Operation_FadeIn            = Fade in
ActionAudio_Operation_FadeOut           = Fade out
ActionAudio_Operation_Rewind            = Rewind
ActionAudio_Operation_ResetPosition     = Reset position

ActionBlock_Short               = Block
ActionBlock_Long                = Set block "{0}" to {1}
ActionBlock_Long_Value          = Set block "{0}" value to "{1}"
ActionBlock_SetOccupied         = Block Sensor Active
ActionBlock_SetNotOccupied      = Block Sensor Inactive
ActionBlock_SetAltColorOn       = Alternate Color On
ActionBlock_SetAltColorOff      = Alternate Color Off
ActionBlock_SetNullValue        = Empty (null)
ActionBlock_SetValue            = Value
ActionBlock_ErrorBlock          = A block was not selected
ActionBlock_ErrorSensor         = Block "{0}" does not have sensor
ActionBlock_ErrorLayoutBlock    = Block "{0}" does not have a related LayoutBlock
ActionBlock_ErrorOperation      = An action was not selected
ActionBlock_ErrorValue          = A block value was not entered
ActionBlock_BlockInUseVeto      = Block is in use by Block action "{0}"
ActionBlock_MemoryTitle         = Block to/from Memory Change Notification:
ActionBlock_MemoryChange        = The block copy memory options have been removed.\n\nThe copy to memory is obsolete. \nThe copy from memory is replaced by the Reference tab. \nThe old memory reference is now a value enclosd in >>> and <<<.


ActionClock_Short       = Clock
ActionClock_Long        = {0}
ActionClock_LongTime    = {0} to {1}
ActionClock_SetClock    = Set Fast Clock
ActionClock_StartClock  = Start Fast Clock
ActionClock_StopClock   = Stop Fast Clock
ActionClock_ParseError  = The entered time, "{0}", is not valid
ActionClock_RangeError  = The entered time is not between 00:00 and 23:59


ActionClockRate_Short       = Clock Rate
ActionClockRate_LongTo      = {0} to {1}
ActionClockRate_LongWith    = {0} with {1}
ActionClockRate_SetClockRate        = Set Clock Rate
ActionClockRate_IncreaseClockRate   = Increase Clock Rate
ActionClockRate_DecreaseClockRate   = Decrease Clock Rate
ActionClockRate_ParseError  = The entered rate, "{0}", is not valid
ActionClockRate_RangeError  = The entered rate is not between {0} and {1}


ActionDispatcher_Short                = Dispatcher
ActionDispatcher_Long                 = Set Dispatcher "{0}" to {1}
ActionDispatcher_Long_LoadTrain       = Start train using train info file {0}
ActionDispatcher_Long_Terminate       = Terminate train {0}
ActionDispatcher_Long_Priority        = Set priority for train {0} to {1}
ActionDispatcher_Long_ResetOption     = {1} "reset when done" for train {0}
ActionDispatcher_Long_TerminateOption = {1} "terminate when done" for train {0}
ActionDispatcher_Long_Enable          = Enable
ActionDispatcher_Long_Disable         = Disable

ActionDispatcher_ErrorFile            = A TrainInfo file was not selected
ActionDispatcher_ErrorStateAction     = A state action was not selected

ActionDispatcher_LoadTrainFromFile      = Load train from train info file
ActionDispatcher_TerminateTrain         = Terminate train
ActionDispatcher_TrainPriority          = Set train priority
ActionDispatcher_ResetWhenDoneOption    = Set Reset when Done
ActionDispatcher_TerminateWhenDoneOption = Set Terminate when Done


ActionEntryExit_Short               = Entry/Exit
ActionEntryExit_Long                = Set Entry/Exit {0} to {1}
ActionEntryExit_SetNXPairEnabled    = Set NX Pair Enabled
ActionEntryExit_SetNXPairDisabled   = Set NX Pair Disabled
ActionEntryExit_SetNXPairSegment    = Set NX Pair Segment Active / Inactive
ActionEntryExit_DestinationPointsInUseVeto  = Destination points is in use by Set Entry/Exit action "{0}"

ActionListenOnBeans_Short       = Listen on beans
ActionListenOnBeans_Long        = Listen on beans

ActionListenOnBeansTable_Short  = Listen on beans - Table
ActionListenOnBeansTable_Long   = Listen to each {0} in each {1} of {2} "{3}" in table "{4}"


ActionLocalVariable_Short                           = Local variable
ActionLocalVariable_Long_Null                       = Set variable {0} to null
ActionLocalVariable_Long_Value                      = Set variable {0} to "{1}"
ActionLocalVariable_Long_CopyVariableToVariable     = Set variable {0} to the value of variable {1}
ActionLocalVariable_Long_CopyMemoryToVariable       = Set variable {0} to the value of memory {1}
ActionLocalVariable_Long_CopyTableCellToVariable    = Set variable {0} to the value of table "{1}" row "{2}" and column "{3}"
ActionLocalVariable_Long_CopyBlockToVariable        = Set variable {0} to the value of block {1}
ActionLocalVariable_Long_CopyReporterToVariable     = Set variable {0} to the current report of reporter {1}
ActionLocalVariable_Long_Formula                    = Set variable {0} to the result of formula "{1}"

ActionLocalVariable_VariableOperation_SetToNull                 = Null
ActionLocalVariable_VariableOperation_SetToString               = Constant
ActionLocalVariable_VariableOperation_CopyVariableToVariable    = Variable
ActionLocalVariable_VariableOperation_CopyMemoryToVariable      = Memory
ActionLocalVariable_VariableOperation_CopyTableCellToVariable   = Table
ActionLocalVariable_VariableOperation_CopyBlockToVariable       = Block
ActionLocalVariable_VariableOperation_CopyReporterToVariable    = Reporter
ActionLocalVariable_VariableOperation_CalculateFormula          = Formula

ActionLocalVariable_CopyErrorMemory                         = A memory was not selected
ActionLocalVariable_CopyErrorBlock                          = A block was not selected
ActionLocalVariable_CopyErrorReporter                       = A reporter was not selected
ActionLocalVariable_MemoryInUseLocalVariableActionVeto      = Memory is in use by LocalVariable action "{0}"
ActionLocalVariable_BlockInUseLocalVariableActionVeto       = Block is in use by LocalVariable action "{0}"
ActionLocalVariable_ReporterInUseLocalVariableActionVeto    = Reporter is in use by LocalVariable action "{0}"


ActionMemory_Short            = Memory
ActionMemory_Long_Null        = Set memory {0} to null
ActionMemory_Long_Value       = Set memory {0} to "{1}"
ActionMemory_Long_CopyTableCellToMemory   = Set memory {0} to the value of table "{1}" row "{2}" and column "{3}"
ActionMemory_Long_CopyVariableToMemory    = Set memory {0} to the value of variable {1}
ActionMemory_Long_CopyMemoryToMemory      = Set memory {0} to the value of memory {1}
ActionMemory_Long_Formula     = Set memory {0} to the result of formula "{1}"

ActionMemory_MemoryOperation_SetToNull                 = Null
ActionMemory_MemoryOperation_SetToString               = Constant
ActionMemory_MemoryOperation_CopyVariableToMemory      = Variable
ActionMemory_MemoryOperation_CopyMemoryToMemory        = Memory
ActionMemory_MemoryOperation_CopyTableCellToMemory     = Table
ActionMemory_MemoryOperation_CalculateFormula          = Formula

ActionMemory_ErrorMemory          = A memory variable was not selected
ActionMemory_CopyErrorMemory      = A memory variable was not selected for copy from
ActionMemory_MemoryInUseMemoryActionVeto  = Memory is in use by Memory action "{0}"


ActionOBlock_Short               = OBlock
ActionOBlock_Long                = Set oblock "{0}" to {1}
ActionOBlock_Long_Value          = Set oblock "{0}" value to "{1}"

ActionOBlock_Deallocate          = Deallocate Block
ActionOBlock_SetValue            = Set Block Value
ActionOBlock_SetError            = Set Block Error
ActionOBlock_ClearError          = Clear Block Error
ActionOBlock_SetOutOfService     = Set Block OutOfService
ActionOBlock_ClearOutOfService   = Clear Block OutOfService

ActionOBlock_ErrorBlock          = An oblock was not selected
ActionOBlock_ErrorValue          = An oblock value was not entered
ActionOBlock_BlockInUseVeto      = OBlock is in use by OBlock action "{0}"


ActionReporter_Short              = Reporter
ActionReporter_Long               = Copy "{0}" for reporter "{1}" to "{2}"
ActionReporter_CopyCurrentReport  = Current Report
ActionReporter_CopyLastReport     = Last Report
ActionReporter_CopyState          = State
ActionReporter_ErrorMemory        = A memory was not selected
ActionReporter_ErrorReporter      = A reporter was not selected
ActionReporter_MemoryInUseVeto    = Memory is in use by Reporter action "{0}"
ActionReporter_ReporterInUseVeto  = Reporter is in use by Reporter action "{0}"


ActionSound_Short               = Sound
ActionSound_Long                = Play the sound: {0} {1}
ActionSound_Long_Play           = Play the sound: {0}
ActionSound_Error_SoundNotFound = Invalid path for sound: "{0}"
ActionSound_Operation_Play      = Play
ActionSound_LongUnknownOper     = Play the sound: Operation {0}. Sound: {1}

ActionTimer_Short               = Timer
ActionTimer_Long                = Timer
# Important! These strings MUST be valid female socket names!!
ActionTimerSocketStart          = Start
ActionTimerSocketStop           = Stop

ActionThrottle_Short            = Throttle
ActionThrottle_Long             = Throttle
# Important! These strings MUST be valid female socket names!!
ActionThrottle_SocketName_Address       = Address
ActionThrottle_SocketName_Speed         = Speed
ActionThrottle_SocketName_Direction     = Direction
ActionThrottle_SocketName_Function      = Function
ActionThrottle_SocketName_FunctionOnOff = FunctionOnOff

ActionWarrant_Short                = Warrant
ActionWarrant_Long                 = Set warrant "{0}" to {1}
ActionWarrant_Long_Train_Id        = Set warrant "{0}" train id to "{1}"
ActionWarrant_Long_Train_Name      = Set warrant "{0}" train name to "{1}"
ActionWarrant_Long_Control         = Set warrant "{0}" train control to "{1}"
ActionWarrant_AllocateWarrantRoute = Allocate Warrant Route
ActionWarrant_DeallocateWarrant    = Deallocate Warrant
ActionWarrant_SetRouteTurnouts     = Set Route Turnouts
ActionWarrant_AutoRunTrain         = Auto Run Train
ActionWarrant_ManuallyRunTrain     = Manually Run Train
ActionWarrant_ControlAutoTrain     = Control Auto Train
ActionWarrant_SetTrainId           = Set Train ID
ActionWarrant_SetTrainName         = Set Train Name
ActionWarrant_Halt_AutoTrain       = Halt
ActionWarrant_Resume_AutoTrain     = Resume
ActionWarrant_Abort_AutoTrain      = Abort
ActionWarrant_ErrorWarrant         = A warrant was not selected
ActionWarrant_ErrorValue           = A train id or train name was not entered
ActionWarrant_WarrantInUseVeto     = Warrant is in use by Warrant action "{0}"

AnalogActionLightIntensity_Short        = Light intensity
AnalogActionLightIntensity_Long         = Set light intensity for {0}
AnalogActionLightIntensity_LightInUseLightActionVeto = Light is in use by Light intensity action "{0}"

AnalogActionMemory_Short            = Memory
AnalogActionMemory_Long             = Set memory {0}
AnalogMemory_MemoryInUseMemoryActionVeto  = Memory is in use by Memory action "{0}"

AnalogMany_Short                    = Many
AnalogMany_Long                     = Many

DigitalCallModule_Short             = Call module
DigitalCallModule_Long              = Call module: {0}
DigitalCallModule_ModuleInUseVeto   = Module is in use by CallModule action "{0}"

DigitalBooleanMany_Short            = Many
DigitalBooleanMany_Long             = Many

DigitalBooleanOnChange_Short                  = On change
DigitalBooleanOnChange_Long                   = {0}
DigitalBooleanOnChange_Trigger_ChangeToTrue   = On change to true
DigitalBooleanOnChange_Trigger_ChangeToFalse  = On change to false
DigitalBooleanOnChange_Trigger_Change         = On change

DigitalFormula_Short        = Digital Formula
DigitalFormula_Long         = Digital Formula: {0}
DigitalFormula_Long_Empty   = Digital Formula: empty

DoAnalogAction_Short    = Read analog and set analog
DoAnalogAction_Long     = Read analog {0} and set analog {1}

DoStringAction_Short    = Read string and set string
DoStringAction_Long     = Read string {0} and set string {1}

EnableLogix_Short       = Enable/Disable Logix
EnableLogix_Long        = Set Logix {0} to {1}
EnableLogix_Enable      = Enable
EnableLogix_Disable     = Disable
EnableLogix_LogixInUseVeto   = Logix is in use by Enable Logix action "{0}"

ExecuteDelayed_Short    = Execute delayed
ExecuteDelayed_Long     = Execute {0} after {1}{2}{3}
ExecuteDelayed_Options  = . {0}
ExecuteDelayed_DelayByDirect        = {0}
ExecuteDelayed_DelayByReference     = by reference {0} in unit {1}
ExecuteDelayed_DelayByLocalVariable = by local variable {0} in unit {1}
ExecuteDelayed_DelayByFormula       = by formula {0} in unit {1}
ExecuteDelayed_ResetRepeat  = Reset on repeat
ExecuteDelayed_IgnoreRepeat = Ignore on repeat
ExecuteDelayed_UseIndividualTimers  = Use individual timers

For_Short               = For
For_Long                = For ({0}; {1}; {2}) do {3}
# Important! These strings MUST be valid female socket names!!
For_SocketName_Init         = Init
For_SocketName_While        = While
For_SocketName_AfterEach    = AfterEach
For_SocketName_Do           = Do

IfThenElse_Short            = If Then Else
IfThenElse_Long             = If Then Else. {0}
IfThenElse_ExecuteOnChange  = Execute on change
IfThenElse_AlwaysExecute    = Always execute

Many_Short                  = Many
Many_Long                   = Many

Light_Short                 = Light
Light_Long                  = Set light {0} to state {1}
Light_Long_Value            = Set light "{0}" {1} to {2}
Light_Intensity_Value       = intensity
Light_Interval_Value        = transition interval
LightToggleStatus           = Toggle
LightIntensity              = Set Intensity
LightInterval               = Set Transition Time
Light_LightInUseLightActionVeto = Light is in use by Light action "{0}"
Light_Error_Intensity       = The light intensity range is 0 (dark) to 100 (full brightness)
Light_Error_Interval        = The transition time is zero (instantaneous) or greater

ActionLightIntensity_Short      = Light intensity
ActionLightIntensity_Long       = Set light intensity for {0}
ActionLightIntensity_SocketName = Intensity
ActionLightIntensity_LightInUseLightActionVeto = Light is in use by Light intensity action "{0}"

Logix_Short                 = Logix
Logix_Long                  = Logix
Logix_LogixInUseLogixActionVeto = Logix is in use by Logix action "{0}"


LogData_Short                           = Log data
LogData_Long_TextOnly                   = Log data: Only text: {0}
LogData_Long_CommaSeparatedList         = Log data: Comma separated list
LogData_Long_StringFormat               = Log data: String.format: {0}

LogData_FormatType_TextOnly             = Only text
LogData_FormatType_CommaSeparatedList   = Comma separated list
LogData_FormatType_StringFormat         = String.format

LogData_Operation_LocalVariable         = Local variable
LogData_Operation_Memory                = Memory
LogData_Operation_Reference             = Reference
LogData_Operation_Formula               = Formula


LogLocalVariables_Short                 = Log local variables
LogLocalVariables_Long                  = Log local variables
LogLocalVariables_Start                 = Log local variables:
LogLocalVariables_VariableName          = Name
LogLocalVariables_VariableValue         = Value
LogLocalVariables_GlobalVariables_Start = Global variables:
LogLocalVariables_GlobalVariableName    = Global Name
LogLocalVariables_GlobalVariableValue   = value
LogLocalVariables_End                   = Log local variables done

Power_Short                 = Power
Power_Long                  = Set power {0}

ActionScript_Short          = Script
ActionScript_Long           = Execute script: {0}. Script {1}
ActionScript_RunScript      = Run script
ActionScript_SingleLineCommand  = Single line command
ActionScript_LongUnknownOper    = Execute script: Operation {0}. Script: {1}

Sensor_Short                = Sensor
Sensor_Long                 = Set sensor {0} to state {1}
SensorToggleStatus          = Toggle
Sensor_SensorInUseSensorActionVeto  = Sensor is in use by Sensor action "{0}"

SignalHead_Short                    = Signal head
SignalHead_Long                     = Set signal head {0} to {1}
SignalHead_LongAppearance           = Set signal head {0} to appearance {1}
SignalHead_LongUnknownOper          = Set signal head {0} to {1} with appearance {2}
SignalHeadOperationType_Appearance  = appearance
SignalHeadOperationType_Lit         = lit
SignalHeadOperationType_NotLit      = not lit
SignalHeadOperationType_Held        = held
SignalHeadOperationType_NotHeld     = not held
SignalHead_SignalHeadInUseSignalHeadActionVeto   = SignalHead is in use by SignalHead action "{0}"

SignalExampleHead                   = head
SignalExampleMast                   = mast
SignalExampleAppearances            = appearances
SignalExampleAspects                = aspects
SignalExampleText = <html> \
If you do not use Direct addressing of the signal {0} but are using Direct addressing<br> \
of the {1}, you need to select an example signal {0}. The example signal {0} is<br> \
used to tell JMRI which {1} the indirect addressed signal {0} may show.</html>

SignalMast_Short                    = Signal mast
SignalMast_Long                     = Set signal mast {0} to {1}
SignalMast_LongAspect               = Set signal mast {0} to aspect {1}
SignalMast_LongUnknownOper          = Set signal mast {0} to {1} with aspect {2}
SignalMastOperationType_Aspect      = aspect
SignalMastOperationType_Lit         = lit
SignalMastOperationType_NotLit      = not lit
SignalMastOperationType_Held        = held
SignalMastOperationType_NotHeld     = not held
SignalMastOperationType_PermissiveSmlDisabled       = permissive sml disabled
SignalMastOperationType_PermissiveSmlNotDisabled    = permissive sml not disabled
SignalMast_SignalMastInUseSignalMastActionVeto  = SignalMast is in use by SignalMast action "{0}"

Sequence_Short          = Sequence
Sequence_Long           = Sequence
SequenceSocketStart     = Start
SequenceSocketStop      = Stop
SequenceSocketReset     = Reset


ShowDialog_Short                            = Show dialog
ShowDialog_Long_TextOnly                    = Show dialog: Only text: {0}
ShowDialog_Long_CommaSeparatedList          = Show dialog: Comma separated list
ShowDialog_Long_StringFormat                = Show dialog: String.format: {0}
# Important! These strings MUST be valid female socket names!!
ShowDialog_SocketValidate                   = Validate
ShowDialog_SocketExecute                    = Execute

ShowDialog_Title                            = LogixNG: Show dialog
ShowDialog_FormatType_TextOnly              = Only text
ShowDialog_FormatType_CommaSeparatedList    = Comma separated list
ShowDialog_FormatType_StringFormat          = String.format

ShowDialog_Operation_LocalVariable          = Local variable
ShowDialog_Operation_Memory                 = Memory
ShowDialog_Operation_Reference              = Reference
ShowDialog_Operation_Formula                = Formula


ShutdownComputer_Short  = Shutdown
ShutdownComputer_Long   = Shutdown JMRI/computer: {0}
ShutdownComputer_ShutdownComputer   = Shut down the computer
ShutdownComputer_RebootComputer     = Reboot the computer
ShutdownComputer_ShutdownJMRI       = Shut down JMRI
ShutdownComputer_RebootJMRI         = Reboot JMRI

StringMany_Short            = Many
StringMany_Long             = Many

StringActionMemory_Short    = Memory
StringActionMemory_Long     = Set memory {0}
StringMemory_MemoryInUseMemoryActionVeto  = Memory is in use by Memory action "{0}"

StringActionStringIO_Short  = StringIO
StringActionStringIO_Long   = Set stringIO {0}
StringStringIO_StringIOInUseStringIOExpressionVeto = StringIO is in use by StringIO action "{0}"

TableForEach_Short          = Table: For each
TableForEach_Long           = Table: For each {0} of {1} "{2}" in table "{3}" set variable "{4}" and execute action {5}

Timeout_Short               = Timeout
Timeout_Long                = Execute {1} if not {0} within {2}
Timeout_Long_Indirect       = Execute {1} if not {0} within {2} of unit {3}

TriggerRoute_Short          = Route
TriggerRoute_Long           = Trigger route {0} to {1}
TriggerRoute_TriggerRoute   = Trigger route
TriggerRoute_LogixInUseVeto = Logix is in use by Enable Logix action "{0}"

Turnout_Short               = Turnout
Turnout_Long                = Set turnout {0} to state {1}
TurnoutToggleStatus         = Toggle
Turnout_TurnoutInUseTurnoutActionVeto   = Turnout is in use by Turnout action "{0}"

TurnoutLock_Short           = Turnout, lock
TurnoutLock_Long            = Set lock for turnout {0} to {1}
TurnoutLock_Lock            = Lock
TurnoutLock_Unlock          = Unlock
TurnoutLock_Toggle          = Toggle
TurnoutLock_TurnoutInUseTurnoutActionVeto   = Turnout is in use by Turnout action "{0}"

WebBrowser_Short            = Web browser
WebBrowser_Long             = Web browser. Open web page {0}
