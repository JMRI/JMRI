# jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle

BeanNotSelected       = ''

AddressByDirect             = {0}
AddressByReference          = by reference {0}
AddressByLocalVariable      = by local variable {0}
AddressByFormula            = by formula {0}

AnalogExpressionConstant_Short  = Get analog constant
AnalogExpressionConstant_Long   = Get analog constant {0}

AnalogExpression_Short      = Get memory as analog value
AnalogExpressionMemory_Long = Get memory {0} as analog value
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"

AnalogFormula_Short         = Analog Formula
AnalogFormula_Long          = Analog Formula: {0}
AnalogFormula_Long_Empty    = Analog Formula: empty

And_Short             = And
And_Long              = And

Antecedent_Short      = Antecedent
Antecedent_Long       = Antecedent: {0}
Antecedent_Long_Empty = Antecedent: empty

BufferedSensor_Short  = Get buffered sensor
BufferedSensor_Long   = Buffered sensor

Clock_Short             = Clock
Clock_Long_FastClock    = Fast clock {0} between {1} and {2}
Clock_Long_SystemClock  = System clock {0} between {1} and {2}
ClockTypeSystemClock    = System clock
ClockTypeFastClock      = Fast clock

Conditional_Short       = Conditional
Conditional_Long        = Conditional {0} {1} {2}
ConditionalStateFalse   = False
ConditionalStateTrue    = True
ConditionalOtherStatus  = Other
Conditional_ConditionalInUseConditionalExpressionVeto   = Conditional is in use by Conditional expression "{0}"

DigitalFormula_Short        = Digital Formula
DigitalFormula_Long         = Digital Formula: {0}
DigitalFormula_Long_Empty   = Digital Formula: empty

EntryExit_Short         = Entry/exit
EntryExit_Long          = Entry/exit
EntryExitStateInactive  = Inactive
EntryExitStateActive    = Active
EntryExitOtherStatus    = Other
EntryExit_DestinationPointsInUseEntryExitExpressionVeto = DestinationPoints is in use by EntryExit expression "{0}"

False_Short           = Always false
False_Long            = Always false

Hold_Short            = Hold
Hold_Long             = Trigger on expression {0}. Hold while expression {1}
# Important! These strings MUST be valid female socket names!!
Hold_SocketName_Trigger     = Trigger
Hold_SocketName_Hold        = Hold

LastResultOfDigitalExpression_Short     = Last result of digital expression
LastResultOfDigitalExpression_Long      = Last result of digital expression "{0}"
LastResultOfDigitalExpression_BeanInUseVeto     = Expression is in use by "{0}"

Light_Short           = Get light
Light_Long            = Light {0} {1} {2}
LightOtherStatus      = Other
Light_LightInUseLightExpressionVeto = Light is in use by Light expression "{0}"


Memory_Short                    = Compare memory
Memory_Long_CompareNull         = Memory {0} {1}
Memory_Long_CompareConstant     = Memory {0} {1} "{2}"
Memory_Long_CompareMemory       = Memory {0} {1} memory {2}
Memory_Long_CompareLocalVariable = Memory {0} {1} local variable {2}
Memory_Long_CompareRegEx        = Memory {0} {1} regular expression {2}

MemoryOperation_LessThan            = is less than
MemoryOperation_LessThanOrEqual     = is less than or equal
MemoryOperation_Equal               = is equal to
MemoryOperation_GreaterThanOrEqual  = is greater than or equal to
MemoryOperation_GreaterThan         = is greater than
MemoryOperation_NotEqual            = is not equal to
MemoryOperation_IsNull              = is null
MemoryOperation_IsNotNull           = is not null
MemoryOperation_MatchRegEx          = does match regular expression
MemoryOperation_NotMatchRegEx       = does not match regular expression

Memory_CompareTo_Value              = Value
Memory_CompareTo_Memory             = Memory
Memory_CompareTo_LocalVariable      = Local variable
Memory_CompareTo_RegularExpression  = Regular expression

Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"


OBlock_Short            = OBlock
OBlock_Long             = OBlock {0} {1} {2}
OBlock_OBlockInUseOBlockExpressionVeto  = OBlock is in use by OBlock expression "{0}"

Or_Short              = Or
Or_Long               = Or

Reference_Short             =   Reference
Reference_Long                  = Reference {0} {1} {2}
ReferenceNotSelected            = ''
ReferencePointsTo_Nothing       = Nothing
ReferencePointsTo_Audio         = Audio
ReferencePointsTo_Light         = Light
ReferencePointsTo_Memory        = Memory
ReferencePointsTo_Sensor        = Sensor
ReferencePointsTo_SignalHead    = SignalHead
ReferencePointsTo_SignalMast    = SignalMast
ReferencePointsTo_Turnout       = Turnout
ReferencePointsTo_LogixNGTable  = LogixNG Table

ResetOnTrue_Short     = Reset on true
ResetOnTrue_Long      = Reset on true

Script_Short          = Evaluate script
Script_Long           = Evaluate script

Sensor_Short          = Get sensor
Sensor_Long           = Sensor {0} {1} {2}
SensorOtherStatus     = Other
Sensor_SensorInUseSensorExpressionVeto   = Sensor is in use by Sensor expression "{0}"

SignalHead_Short                    = Signal head
SignalHead_Long                     = Signal head {0} {1}
SignalHead_LongAppearance           = Signal head {0} has appearance {1}
SignalHead_LongUnknownOper          = Signal head {0} {1} with appearance {2}
SignalHeadQueryType_Appearance      = has appearence
SignalHeadQueryType_NotAppearance   = has not appearence
SignalHeadQueryType_Lit             = is lit
SignalHeadQueryType_NotLit          = is not lit
SignalHeadQueryType_Held            = is held
SignalHeadQueryType_NotHeld         = is not held
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

#SignalHead_Short            = Signal head
#SignalHead_Long             = Signal head {0} {1}
#SignalHead_LongApperance    = Signal head {0} {1} {2}
#SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

SignalMast_Short                    = Signal mast
SignalMast_Long                     = Signal mast {0} to {1}
SignalMast_LongAspect               = Signal mast {0} to aspect {1}
SignalMast_LongUnknownOper          = Signal mast {0} to {1} with aspect {2}
SignalMastQueryType_Aspect          = has appearence
SignalMastQueryType_NotAspect       = has not appearence
SignalMastQueryType_Lit             = is lit
SignalMastQueryType_NotLit          = is not lit
SignalMastQueryType_Held            = is held
SignalMastQueryType_NotHeld         = is not held
SignalMastQueryType_IsPermissiveSmlDisabled     = is permissive sml disabled
SignalMastQueryType_IsPermissiveSmlNotDisabled  = is permissive sml not disabled
SignalMast_SignalMastInUseSignalMastExpressionVeto  = SignalMast is in use by SignalMast expression "{0}"

#SignalMast_Short      = Signal mast
#SignalMast_Long       = Signal mast {0} {1}
#SignalMast_LongAspect = Signal mast {0} {1} {2}
#SignalMast_SignalMastInUseSignalMastExpressionVeto   = SignalMast is in use by SignalMast expression "{0}"

StringFormula_Short           = String Formula
StringFormula_Long            = String Formula: {0}
StringFormula_Long_Empty      = String Formula: empty

StringExpressionConstant_Short      = Get string constant
StringExpressionConstant_LongNull   = Get string constant null
StringExpressionConstant_LongValue  = Get string constant "{0}"

StringExpressionMemory_Short    = Get memory as string value
StringExpressionMemory_Long     = Get memory {0} as string value
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"

Timer_Short           = Timer
Timer_Long_WaitOnceTrigOnce     = One shot timer: Wait {0} milliseconds and trigger once.
Timer_Long_WaitOnceTrigUntilReset   = One shot timer: Wait {0} milliseconds. Restart timer when reset.
Timer_Long_RepeatSingleDelay    = Continuous timer: Wait {0} milliseconds and trigger once.
Timer_Long_RepeatDoubleDelay    = Continuous timer: Wait {0} milliseconds and then trigger. Stay on for {1} milliseconds.

TimerType_WaitOnceTrigOnce      = One shot timer: Wait some time and trigger once
TimerType_WaitOnceTrigUntilReset    =   One shot timer: Wait some time and trigger until reset. Restart timer when reset
TimerType_RepeatSingleDelay     = Continuous timer: Wait some time and trigger once
TimerType_RepeatDoubleDelay     = Continuous timer: Wait some time and then trigger. Stay on for some time

TimerType_Explanation_WaitOnceTrigOnce      = Can be used to throw a turnout after some time
TimerType_Explanation_WaitOnceTrigUntilReset    = Useful for holding a light lit after some time, until reset
TimerType_Explanation_RepeatSingleDelay     = Useful for logging a message repeatedly at some interval
TimerType_Explanation_RepeatDoubleDelay     = Useful for turning a light on and off repeatedly at some interval

TriggerOnce_Short       = Trigger once
TriggerOnce_Long        = Trigger once

True_Short              = Always true
True_Long               = Always true

Turnout_Short           = Get turnout
Turnout_Long            = Turnout {0} {1} {2}
TurnoutOtherStatus      = Other
Turnout_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout expression "{0}"


Variable_Short                    = Compare local variable
Variable_Long_CompareNull         = Local variable {0} {1}
Variable_Long_CompareConstant     = Local variable {0} {1} "{2}"
Variable_Long_CompareMemory       = Local variable {0} {1} memory {2}
Variable_Long_CompareLocalVariable = Local variable {0} {1} local variable {2}
Variable_Long_CompareRegEx        = Local variable {0} {1} /{2}/
VariableOperation_LessThan            = is less than
VariableOperation_LessThanOrEqual     = is less than or equal
VariableOperation_Equal               = is equal to
VariableOperation_GreaterThanOrEqual  = is greater than or equal to
VariableOperation_GreaterThan         = is greater than
VariableOperation_NotEqual            = is not equal to
VariableOperation_IsNull              = is null
VariableOperation_IsNotNull           = is not null
VariableOperation_MatchRegEx          = does match regular expression
VariableOperation_NotMatchRegEx       = does not match regular expression

Variable_MemoryInUseVariableExpressionVeto  = Memory is in use by Local variable expression "{0}"

Variable_CompareTo_Value              = Value
Variable_CompareTo_Memory             = Memory
Variable_CompareTo_LocalVariable      = Local variable
Variable_CompareTo_RegularExpression  = Regular expression


Warrant_Short           = Warrant
Warrant_Long            = Warrant
WarrantTypeRouteFree    = Route free
WarrantTypeOccupied     = Route occupied
WarrantTypeAllocated    = Route allocated
WarrantTypeRouteSet     = Route set
WarrantTypeTrainRunning = Train is running
Warrant_WarrantInUseWarrantExpressionVeto   = Warrant is in use by Warrant expression "{0}"
