# jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle.properties
# Translation Petr Sidlo
# Czech properties for the jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle

BeanNotSelected       = ''

AddressByDirect             = {0}
AddressByReference          = podle odkazu {0}
AddressByLocalVariable      = podle lok\u00e1ln\u00ed prom\u011bnn\u00e9 {0}
AddressByFormula            = podle vzorce {0}

AnalogExpressionConstant_Short  = Z\u00edskat analogovou konstantu
AnalogExpressionConstant_Long   = Z\u00edskat analogovou konstantu {0}

AnalogExpression_Short      = Z\u00edskat pam\u011b\u0165 jako analogovou hodnotu
AnalogExpressionMemory_Long = Z\u00edskat pam\u011b\u0165 {0} jako analogovou hodnotu
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"

AnalogFormula_Short         = Analogov\u00fd vzorec
AnalogFormula_Long          = Analogov\u00fd vzorec: {0}
AnalogFormula_Long_Empty    = Analogov\u00fd vzorec: pr\u00e1zdn\u00e9

And_Short             = A z\u00e1rove\u0148
And_Long              = A z\u00e1rove\u0148

Antecedent_Short      = P\u0159edch\u016fdce
Antecedent_Long       = P\u0159edch\u016fdce: {0}
Antecedent_Long_Empty = P\u0159edch\u016fdce: pr\u00e1zdn\u00e9

Block_Short            = Blok
Block_Long             = Blok "{0}" {1} {2}
Block_Long_Value       = Blok "{0}" hodnota {1} do "{2}"
Block_Long_Memory      = Blok "{0}" hodnota {1} do pam\u011bti "{2}" hodnota
Block_Equal            = je rovno
Block_NotEqual         = nen\u00ed rovno
Block_StateOccupied    = Obsazeno
Block_StateNotOccupied = Neobsazeno
Block_StateOther       = n\u011bjak\u00fd jin\u00fd stav
Block_Allocated        = P\u0159id\u011bleno
Block_ValueMatches     = hodnota se rovn\u00e1 konstant\u011b
Block_MemoryMatches    = hodnota se rovn\u00e1 hodnot\u011b pam\u011bti

Block_ErrorBlock          = Blok nebyl vybr\u00e1n
Block_ErrorConstant       = Hodnota bloku nebyla zad\u00e1na
Block_ErrorMemory         = Pam\u011b\u0165 nebyla vybr\u00e1na

Block_BlockInUseVeto      = Blok je pou\u017e\u00edv\u00e1n v\u00fdrazem Bloku "{0}"
Block_MemoryInUseVeto     = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na v\u00fdrazem Bloku "{0}"

# EntryExitStateInactive  = Inactive
# EntryExitStateActive    = Active
# EntryExitOtherStatus    = Other
# EntryExit_DestinationPointsInUseEntryExitExpressionVeto = DestinationPoints is in use by EntryExit expression "{0}"

Clock_Short             = Hodiny
Clock_Long_FastClock    = Modelov\u00e9 hodiny {0} mezi {1} a {2}
Clock_Long_SystemClock  = Syst\u00e9mov\u00e9 hodiny {0} mezi {1} a {2}
ClockTypeSystemClock    = Syst\u00e9mov\u00e9 hodiny
ClockTypeFastClock      = Modelov\u00e9 hodiny

Conditional_Short       = Podm\u00ednka
Conditional_Long        = Podm\u00ednka {0} {1} {2}
ConditionalStateFalse   = Nepravda
ConditionalStateTrue    = Pravda
ConditionalOtherStatus  = Jin\u00fd
Conditional_ConditionalInUseConditionalExpressionVeto   = Podm\u00ednka je pou\u017e\u00edv\u00e1na Podm\u00ednka v\u00fdrazem "{0}"

DigitalCallModule_Short = Volat modul
DigitalCallModule_Long  = Volat modul: {0}
DigitalCallModule_ModuleInUseVeto  = Modul je pou\u017e\u00edv\u00e1n akc\u00ed VolatModul "{0}"

DigitalFormula_Short        = Digit\u00e1ln\u00ed vzorec
DigitalFormula_Long         = Digit\u00e1ln\u00ed vzorec: {0}
DigitalFormula_Long_Empty   = Digit\u00e1ln\u00ed vzorec: pr\u00e1zdn\u00e9

EntryExit_Short         = Odkud-Kam
EntryExit_Long          = Odkud-Kam
EntryExitStateInactive  = Neaktivn\u00ed
EntryExitStateActive    = Aktivn\u00ed
EntryExitOtherStatus    = Jin\u00fd
EntryExit_DestinationPointsInUseEntryExitExpressionVeto = C\u00edlov\u00fd bod je pou\u017e\u00edv\u00e1n Odkud-Kam v\u00fdrazem "{0}"

False_Short           = V\u017edy nepravda
False_Long            = V\u017edy nepravda

Hold_Short            = Dr\u017eet
Hold_Long             = Spou\u0161t\u011b\u010d na v\u00fdrazu {0}. Dr\u017eet zat\u00edmco v\u00fdraz {1}
# Important! These strings MUST be valid female socket names!!
Hold_SocketName_Trigger     = Spou\u0161t\u011b\u010d
Hold_SocketName_Hold        = Dr\u017eet

LastResultOfDigitalExpression_Short     = Posledn\u00ed v\u00fdsledek digit\u00e1ln\u00edho v\u00fdrazu
LastResultOfDigitalExpression_Long      = Posledn\u00ed v\u00fdsledek digit\u00e1ln\u00edho v\u00fdrazu "{0}"
LastResultOfDigitalExpression_BeanInUseVeto     = V\u00fdraz je pou\u017e\u00edv\u00e1n "{0}"

Light_Short           = Z\u00edskat osv\u011btlen\u00ed
Light_Long            = Osv\u011btlen\u00ed {0} {1} {2}
LightOtherStatus      = Jin\u00fd
Light_LightInUseLightExpressionVeto = Osv\u011btlen\u00ed je pou\u017e\u00edv\u00e1no Osv\u011btlen\u00ed v\u00fdrazem "{0}"


LocalVariable_Short                         = Porovnat lok\u00e1ln\u00ed prom\u011bnnou
LocalVariable_Long_CompareNull              = Lok\u00e1ln\u00ed prom\u011bnn\u00e1 {0} {1}
LocalVariable_Long_CompareConstant          = Lok\u00e1ln\u00ed prom\u011bnn\u00e1 {0} {1} "{2}"
LocalVariable_Long_CompareMemory            = Lok\u00e1ln\u00ed prom\u011bnn\u00e1 {0} {1} pam\u011b\u0165 {2}
LocalVariable_Long_CompareLocalVariable     = Lok\u00e1ln\u00ed prom\u011bnn\u00e1 {0} {1} lok\u00e1ln\u00ed prom\u011bnn\u00e1 {2}
LocalVariable_Long_CompareRegEx             = Lok\u00e1ln\u00ed prom\u011bnn\u00e1 {0} {1} /{2}/
LocalVariableOperation_LessThan             = je men\u0161\u00ed ne\u017e
LocalVariableOperation_LessThanOrEqual      = je men\u0161\u00ed nebo rovno
LocalVariableOperation_Equal                = je rovno
LocalVariableOperation_GreaterThanOrEqual   = je v\u011bt\u0161\u00ed nebo rovno
LocalVariableOperation_GreaterThan          = je v\u011bt\u0161\u00ed ne\u017e
LocalVariableOperation_NotEqual             = nen\u00ed rovno
LocalVariableOperation_IsNull               = je null
LocalVariableOperation_IsNotNull            = nen\u00ed null
LocalVariableOperation_MatchRegEx           = odpov\u00edd\u00e1 regul\u00e1rn\u00edmu v\u00fdrazu
LocalVariableOperation_NotMatchRegEx        = neodpov\u00edd\u00e1 regul\u00e1rn\u00edmu v\u00fdrazu

LocalVariable_MemoryInUseVariableExpressionVeto = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Lok\u00e1ln\u00ed prom\u011bnn\u00e1 v\u00fdrazem "{0}"

LocalVariable_CompareTo_Value               = Hodnota
LocalVariable_CompareTo_Memory              = Pam\u011b\u0165
LocalVariable_CompareTo_LocalVariable       = Lok\u00e1ln\u00ed prom\u011bnn\u00e1
LocalVariable_CompareTo_RegularExpression   = Regul\u00e1rn\u00ed v\u00fdraz


Memory_Short                    = Porovnat pam\u011b\u0165
Memory_Long_CompareNull         = Pam\u011b\u0165 {0} {1}
Memory_Long_CompareConstant     = Pam\u011b\u0165 {0} {1} "{2}"
Memory_Long_CompareMemory       = Pam\u011b\u0165 {0} {1} pam\u011b\u0165 {2} MMM
Memory_Long_CompareLocalVariable = Pam\u011b\u0165 {0} {1} lok\u00e1ln\u00ed prom\u011bnn\u00e1 {2}
Memory_Long_CompareRegEx        = Pam\u011b\u0165 {0} {1} regul\u00e1rn\u00ed v\u00fdraz /{2}/

MemoryOperation_LessThan            = je men\u0161\u00ed ne\u017e
MemoryOperation_LessThanOrEqual     = je men\u0161\u00ed nebo rovno
MemoryOperation_Equal               = je rovno
MemoryOperation_GreaterThanOrEqual  = je v\u011bt\u0161\u00ed nebo rovno
MemoryOperation_GreaterThan         = je v\u011bt\u0161\u00ed ne\u017e
MemoryOperation_NotEqual            = nen\u00ed rovno
MemoryOperation_IsNull              = je null
MemoryOperation_IsNotNull           = nen\u00ed null
MemoryOperation_MatchRegEx          = odpov\u00edd\u00e1 regul\u00e1rn\u00edmu v\u00fdrazu
MemoryOperation_NotMatchRegEx       = neodpov\u00edd\u00e1 regul\u00e1rn\u00edmu v\u00fdrazu

Memory_CompareTo_Value              = Hodnota
Memory_CompareTo_Memory             = Pam\u011b\u0165
Memory_CompareTo_LocalVariable      = Lok\u00e1ln\u00ed prom\u011bnn\u00e1
Memory_CompareTo_RegularExpression  = Regul\u00e1rn\u00ed v\u00fdraz 

Memory_MemoryInUseMemoryExpressionVeto  = Pam\u011b\u0165 je pou\u017e\u00edv\u00e1na Pam\u011b\u0165 v\u00fdrazem "{0}"


Not_Short               = Ne
Not_Long                = Ne
# Important! These strings MUST be valid female socket names!!
Not_SocketName          = E


OBlock_Short            = OBlok
OBlock_Long             = OBlok {0} {1} {2}
OBlock_OBlockInUseOBlockExpressionVeto  = OBlok je pou\u017e\u00edv\u00e1n OBlok v\u00fdrazem "{0}"

Or_Short              = Nebo
Or_Long               = Nebo

Power_Short                 = Z\u00edskat nap\u00e1jen\u00ed
Power_Long                  = Nap\u00e1jen\u00ed {0} {1}
PowerStateOn                = Zap
PowerStateOff               = Vyp
PowerStateOther             = Jin\u00fd

Reference_Short             =   Odkaz
Reference_Long                  = Odkaz {0} {1} {2}
ReferenceNotSelected            = ''
ReferencePointsTo_Nothing       = Nic
ReferencePointsTo_Audio         = Audio
ReferencePointsTo_Light         = Osv\u011btlen\u00ed
ReferencePointsTo_Memory        = Pam\u011b\u0165
ReferencePointsTo_Sensor        = Sn\u00edma\u010d
ReferencePointsTo_SignalHead    = N\u00e1v\u011bstn\u00ed \u0161t\u00edt
ReferencePointsTo_SignalMast    = N\u00e1v\u011bstidlo
ReferencePointsTo_Turnout       = V\u00fdhybka
ReferencePointsTo_LogixNGTable  = LogixNG Tabulka

ResetOnTrue_Short     = Resetovat na pravda
ResetOnTrue_Long      = Resetovat na pravda

Script_Short          = Vyhodnotit skript
Script_Long           = Vyhodnotit skript

Sensor_Short          = Z\u00edskat sn\u00edma\u010d
Sensor_Long           = Sn\u00edma\u010d {0} {1} {2}
SensorOtherStatus     = Jin\u00fd
Sensor_SensorInUseSensorExpressionVeto   = Sn\u00edma\u010d je pou\u017e\u00edv\u00e1n Sn\u00edma\u010d v\u00fdrazem "{0}"

SignalHead_Short                    = N\u00e1v\u011bstn\u00ed \u0161t\u00edt
SignalHead_Long                     = N\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} {1}
SignalHead_LongAppearance           = N\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} m\u00e1 vyobrazen\u00ed {1}
SignalHead_LongNotAppearance        = N\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} nem\u00e1 vyobrazen\u00ed {1}
SignalHead_LongUnknownOper          = N\u00e1v\u011bstn\u00ed \u0161t\u00edt {0} {1} s vyobrazen\u00edm {2}
SignalHeadQueryType_Appearance      = m\u00e1 vyobrazen\u00ed
SignalHeadQueryType_NotAppearance   = nem\u00e1 vyobrazen\u00ed
SignalHeadQueryType_Lit             = je osv\u011btlen
SignalHeadQueryType_NotLit          = nen\u00ed osv\u011btlen
SignalHeadQueryType_Held            = je dr\u017eeno
SignalHeadQueryType_NotHeld         = nen\u00ed dr\u017eeno
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = N\u00e1v\u011bstn\u00ed \u0161t\u00edt je pou\u017e\u00edv\u00e1n N\u00e1v\u011bstn\u00ed \u0161t\u00edt v\u00fdrazen "{0}"

#SignalHead_Short            = Signal head
#SignalHead_Long             = Signal head {0} {1}
#SignalHead_LongApperance    = Signal head {0} {1} {2}
#SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

SignalMast_Short                    = N\u00e1v\u011bstidlo
SignalMast_Long                     = N\u00e1v\u011bstidlo {0} {1}
SignalMast_LongAspect               = N\u00e1v\u011bstidlo {0} m\u00e1 n\u00e1v\u011bst {1}
SignalMast_LongNotAspect            = N\u00e1v\u011bstidlo {0} nem\u00e1 n\u00e1v\u011bst {1}
SignalMast_LongUnknownOper          = N\u00e1v\u011bstidlo {0} {1} s n\u00e1v\u011bst\u00ed {2}
SignalMastQueryType_Aspect          = m\u00e1 n\u00e1v\u011bst
SignalMastQueryType_NotAspect       = nem\u00e1 n\u00e1v\u011bst
SignalMastQueryType_Lit             = je osv\u011btleno
SignalMastQueryType_NotLit          = nen\u00ed osv\u011btleno
SignalMastQueryType_Held            = je dr\u017eeno
SignalMastQueryType_NotHeld         = nen\u00ed dr\u017eeno
SignalMastQueryType_IsPermissiveSmlDisabled     = je permisivn\u00ed SML zak\u00e1z\u00e1na
SignalMastQueryType_IsPermissiveSmlNotDisabled  = je permisivn\u00ed SML nezak\u00e1z\u00e1na
SignalMast_SignalMastInUseSignalMastExpressionVeto  = N\u00e1v\u011bstidlo je pou\u017e\u00edv\u00e1no N\u00e1v\u011bstidlo v\u00fdrazem "{0}"

#SignalMast_Short      = Signal mast
#SignalMast_Long       = Signal mast {0} {1}
#SignalMast_LongAspect = Signal mast {0} {1} {2}
#SignalMast_SignalMastInUseSignalMastExpressionVeto   = SignalMast is in use by SignalMast expression "{0}"

StringFormula_Short           = \u0158et\u011bzcov\u00fd vzorec
StringFormula_Long            = \u0158et\u011bzcov\u00fd vzorec: {0}
StringFormula_Long_Empty      = \u0158et\u011bzcov\u00fd vzorec: pr\u00e1zn\u00fd

StringExpressionConstant_Short      = Z\u00edskat \u0159et\u011bzcovou konstantu
StringExpressionConstant_LongNull   = Z\u00edskat \u0159et\u011bzcovou konstantu null
StringExpressionConstant_LongValue  = Z\u00edskat \u0159et\u011bzcovou konstantu "{0}"

StringExpressionMemory_Short    = Z\u00edskat pam\u011b\u0165 jako \u0159et\u011bzcovou hodnotu
StringExpressionMemory_Long     = Z\u00edskat pam\u011b\u0165 {0} jako \u0159et\u011bzcovou hodnotu
# Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"

TriggerOnce_Short       = Spustit jednou
TriggerOnce_Long        = Spustit jednou

True_Short              = V\u017edy pravda
True_Long               = V\u017edy pravda

Turnout_Short           = Z\u00edskat v\u00fdhybku
Turnout_Long            = V\u00fdhybka {0} {1} {2}
TurnoutOtherStatus      = Jin\u00fd
Turnout_TurnoutInUseTurnoutExpressionVeto   = V\u00fdhybka je pou\u017e\u00edv\u00e1na V\u00fdhybka v\u00fdrazem "{0}"

Warrant_Short           = Rozkaz
Warrant_Long            = Rozkaz
WarrantTypeRouteFree    = Trasa voln\u00e1
WarrantTypeOccupied     = Trasa obsazen\u00e1
WarrantTypeAllocated    = Trasa postaven\u00e1
WarrantTypeRouteSet     = Trasa nastaveny v\u00fdhybky
WarrantTypeTrainRunning = Jedouc\u00ed vlak
Warrant_WarrantInUseWarrantExpressionVeto   = Rozkaz je pou\u017e\u00edv\u00e1n Rozkaz v\u00fdrazem "{0}"
